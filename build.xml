<!--
    TODO:
    - ”ant all” should be ”ant full”.
    - (new) ant all should build everything, only if it has not been built before.
    - Tasks like ”ant library” should be meta tasks that pulls everything it needs,
    and something like ant library-task should pull only stuff related to library.
    Both should be documented.
    - There should be direct way to export output of task to pastebin,
    for example something like ant nc generator which sends the output to pastebin
    and returns a link.
    - Instead of version.properties there should be generic way to provide (default)
    properties to Jambi, for example in form of file, or better, in qtjambi-deploy.
    This can include stuff like debug flag and version.
-->

<project default="help" basedir="." name="qtjambi.main">

    <property name="jambi.directory"               location="${basedir}"/>
	<property name="timestamp.dir"               location="${basedir}/buildlogs"/>

    <property file="build.properties"/>

    <property name="generatorDir" location="generator"/>
    <property name="docstyle.css" location="docstyle.css"/>

    <!--
        Import files containing tasks for the compilation.
    -->

    <import file="setenv.xml"/>
    <import file="antfiles/generator.xml"/>
    <import file="antfiles/native.xml"/>
    <import file="antfiles/java.xml"/>
    <import file="antfiles/clean.xml"/>
    <import file="build_autotests.xml" />

    <!-- These properties used to be at the top of build.properties
         but no one is expected to change them.
         -->
    <property name="antjardir"                   location="antjar"/>
    <property name="java.srcdir"                   location="src/java"/>
    <property name="generator.xmlmerge.srcdir"     location="generator/typesystem/xml"/>
    <!--
        Initialization tasks. Note that the init.taskdef task depends on a jar
        task, since ant-qtjambi.jar must be set in order for the
        <qtjambi-initialize> task to be set at all.
    -->

    <target name="log">
        <tstamp>
            <format property="timestamp" pattern="yyyy-MM-dd_HH-mm-ss"/>
        </tstamp>
        <property name="build.log.dir" location="${basedir}/buildlogs"/>
        <mkdir dir="${build.log.dir}"/>
        <property name="build.log.filename" value="build_${timestamp}.log"/>
        <property name="build.log.loglevel" value="info" />
        <record name="${build.log.dir}/${build.log.filename}" loglevel="${build.log.loglevel}" append="false"/>
        <echo message="Build logged to ${build.log.filename}"/>
    </target>

    <target name="init.taskdef" depends="log">
        <mkdir dir="${antjardir}/ant-qtjambi"/>
        <javac debug="true" deprecation="true" source="1.8" target="1.8"
                fork="true" memorymaximumsize="1024m" verbose="false"
                includeantruntime="true"
                destdir="${antjardir}/ant-qtjambi">
            <compilerarg value="-Xlint:deprecation" />
            <compilerarg value="-Xlint:unchecked" />
            <src path="${java.srcdir}/ant-qtjambi"/>
        </javac>
        <copy todir="${antjardir}/ant-qtjambi" includeemptydirs="false">
            <fileset dir="${java.srcdir}/ant-qtjambi">
                <include name="**/*"/>
                <exclude name="**/.*"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <taskdef resource="io/qt/tools/ant/ant-qtjambi.xml">
            <classpath>
                <pathelement path="${antjardir}/ant-qtjambi"/>
            </classpath>
        </taskdef>
    </target>

    <target name="init.properties">
        <property name="outputDir"                     location="${qtjambi.jar.version}/build"/>
        <property name="java.outdir"                   location="${qtjambi.jar.version}/build/java"/>
        <property name="java8.outdir"                  location="${qtjambi.jar.version}/build/java8"/>
        <property name="java.outsrcdir"                location="${qtjambi.jar.version}/build/java-src"/>
        <property name="java8.outsrcdir"               location="${qtjambi.jar.version}/build/java8-src"/>
        <property name="deploymentdir"                 location="${qtjambi.jar.version}/deployment"/>

        <property name="qtjambi.builddir"              location="${qtjambi.jar.version}/build/qmake-qtjambi"/>

        <property name="generator.builddir"            location="${qtjambi.jar.version}/build/qmake-generator"/>
        <property name="plugins.builddir"              location="${qtjambi.jar.version}/build/qmake-plugins"/>
        <property name="generator.outputdir"           location="${qtjambi.jar.version}/build/generator/out"/>
        <property name="generator.xmlmerge.outputdir"  location="${qtjambi.jar.version}/build/generator"/>
    </target>

    <target name="init" depends="log, init.taskdef">
        <qtjambi-initialize verbose="true"/>
    </target>

    <target name="init.build" depends="log, setenv, init.taskdef, init"
                                                description="Initializes the Qt Jambi build environment." >
        <qtjambi-initialize-build verbose="true"/>
    </target>

    <!--
        END of initilization tasks
    -->

    <!--
        Tools building
    -->

    <macrodef name="uic">
        <attribute name="uifile"/>
        <attribute name="targetpackage"/>
        <attribute name="targetdirectory"/>
        <attribute name="libfiles"/>
        <attribute name="connections"/>
        <sequential>
            <if>
                <os family="mac"/>
                <then>
                    <property name="XstartOnFirstThread" value="-XstartOnFirstThread" />
                </then>
                <else>
                    <property name="XstartOnFirstThread" value="-Dx" />
                </else>
            </if>
            <pathconvert property="librarypath">
                <path>
                    <pathelement location="${qtjambi.builddir}/lib/"/>
                    <pathelement location="${tools.qt.bindir}"/>
                    <pathelement location="${tools.qt.libdir}"/>
                </path>
            </pathconvert>
            <pathconvert property="classpath">
                <path>
                    <pathelement location="${qtjambi.builddir}/lib/"/>
                    <pathelement location="${tools.qt.bindir}"/>
                    <pathelement location="${tools.qt.libdir}"/>
                </path>
            </pathconvert>
            <java fork="true" classname="io.qt.uic.Main" failonerror="true">
                <jvmarg value="-Djava.library.path=${librarypath}"/>
                <jvmarg value="${XstartOnFirstThread}"/>
                <arg value="-f" />
                <arg value="-o" />
                <arg value="@{targetdirectory}" />
                <arg value="-p" />
                <arg value="@{targetpackage}" />
                <arg value="-c" />
                <arg value="@{connections}" />
                <arg value="@{uifile}" />
                <env key="DYLD_LIBRARY_PATH" value="${librarypath}" />
                <classpath>
                    <fileset dir="${deploymentdir}" includes="qtjambi-${qtjambi.jar.version}.jar,qtjambi-uic-${qtjambi.jar.version}.jar,@{libfiles}"/>
                </classpath>
            </java>
        </sequential>
    </macrodef>

    <target name="finished">
        <echo>QtJambi ${qtjambi.jar.version}</echo>
    </target>
    <target name="help" description="log, Provides detailed help.">
        <echo>
Welcome to Qt Jambi help task.

Quick howto:

[edit build.properties to suit your system]
set QTDIR to directory containing Qt either as environment variable or in build.properties.

ant all

Further options:
        </echo>
        <java classname="org.apache.tools.ant.Main">
            <arg value="-projecthelp" />
            <arg value="-buildfile" />
            <arg value="${ant.file}" />
        </java>
    </target>

    <!--
        Root targets

        Specifies the top targets, which does not actually do anything, but
        provides consistent and easy to use interface for humans to use.
    -->

    <target name="generator.make" depends="log, init.build, init.properties, tools.generator.make"
        description="Compiles the generator.">
        <antcall target="finished"/>
    </target>

    <target name="generator" depends="log, generator.make, generator.run"
        description="Compiles and runs the Qt Jambi Generator.">
        <antcall target="finished"/>
    </target>

    <target name="library.native" depends="log, library.native.qmake, library.native.make, library.native.bundle"
        description="Compiles and bundles the Qt Jambi native libraries.">
        <antcall target="finished"/>
    </target>

    <target name="library.java" depends="log, init.build, init.properties, javac.excludes, java11.build.qtjambi, java8.build.qtjambi"
        description="Compiles and bundles the Qt Jambi java libraries.">
        <antcall target="finished"/>
    </target>

    <target name="plugins.java" depends="log, init.build, init.properties, javac.excludes, java11.build.qtjambiplugins, java8.build.qtjambiplugins"
        description="Compiles the Qt Jambi plugins.">
        <antcall target="finished"/>
    </target>
    
    <target name="plugins" depends="log, init.build, init.properties, javac.excludes, java11.build.qtjambiplugins, java8.build.qtjambiplugins, library.native.bundle.plugins"
        description="Compiles and bundles the Qt Jambi plugins.">
        <antcall target="finished"/>
    </target>

    <target name="library.java8" depends="log, init.build, init.properties, javac.excludes, java8.build.qtjambi"
        description="Compiles and bundles the Qt Jambi java libraries.">
        <antcall target="finished"/>
    </target>

    <target name="library.java11" depends="log, init.build, init.properties, javac.excludes, java11.build.qtjambi"
        description="Compiles and bundles the Qt Jambi java libraries.">
        <antcall target="finished"/>
    </target>

    <target name="library" depends="log, library.native.qmake, library.native.make, library.java, library.java8, library.native.bundle"
        description="Compiles and bundles the Qt Jambi libraries.">
        <!--<copy file="${deploymentdir}/qtjambi-util.jar"
            tofile="qtjambi-util-${qtjambi.version}.jar"/>-->
        <antcall target="finished"/>
    </target>

    <target name="all" depends="log, generator, library"
        description="Generates, builds and bundles the Qt Jambi libraries.">
        <antcall target="finished"/>
    </target>

    <target name="deploy.snapshot" depends="log, init.build, init.properties, source.ivy, deploy-snapshot"
        description="Publishes QtJambi as Maven artifact snapshot.">
        <antcall target="finished"/>
    </target>
        
    <target name="deploy.release" depends="log, init.build, init.properties, source.ivy, deploy-release"
        description="Publishes QtJambi as Maven artifact.">
        <antcall target="finished"/>
    </target>
        
    <target name="deploy.bundle" depends="log, init.build, init.properties, source.ivy, deploy-bundle"
        description="Publishes QtJambi as Maven artifact.">
        <antcall target="finished"/>
    </target>
</project>
