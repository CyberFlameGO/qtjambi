#ifndef QTJAMBI_CONCURRENT_REPOSITORY_H
#define QTJAMBI_CONCURRENT_REPOSITORY_H

#include <qtjambi/qtjambi_core.h>
#include <qtjambi/qtjambi_repository.h>

namespace Java{

namespace QtConcurrent{
QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent,
              QTJAMBI_REPOSITORY_DECLARE_OBJECT_METHOD(computeDefaultResult))

    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$MapFunctor,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(map))

    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$MappedFunctor,
                  QTJAMBI_REPOSITORY_DECLARE_OBJECT_METHOD(map))

    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$ReduceFunctor,
                  QTJAMBI_REPOSITORY_DECLARE_OBJECT_METHOD(reduce))

    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$FilteredFunctor,
                  QTJAMBI_REPOSITORY_DECLARE_BOOLEAN_METHOD(filter))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$Runnable1,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$Runnable2,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$Runnable3,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$Runnable4,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$Runnable5,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$Runnable6,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$Runnable7,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$Runnable8,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$Runnable9,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
#endif
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$Callable1,
                  QTJAMBI_REPOSITORY_DECLARE_OBJECT_METHOD(call))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$Callable2,
                  QTJAMBI_REPOSITORY_DECLARE_OBJECT_METHOD(call))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$Callable3,
                  QTJAMBI_REPOSITORY_DECLARE_OBJECT_METHOD(call))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$Callable4,
                  QTJAMBI_REPOSITORY_DECLARE_OBJECT_METHOD(call))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$Callable5,
                  QTJAMBI_REPOSITORY_DECLARE_OBJECT_METHOD(call))
#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$Callable6,
                  QTJAMBI_REPOSITORY_DECLARE_OBJECT_METHOD(call))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$Callable7,
                  QTJAMBI_REPOSITORY_DECLARE_OBJECT_METHOD(call))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$Callable8,
                  QTJAMBI_REPOSITORY_DECLARE_OBJECT_METHOD(call))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$Callable9,
                  QTJAMBI_REPOSITORY_DECLARE_OBJECT_METHOD(call))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$RunnableWithPromise,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$RunnableWithPromise1,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$RunnableWithPromise2,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$RunnableWithPromise3,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$RunnableWithPromise4,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$RunnableWithPromise5,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$RunnableWithPromise6,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$RunnableWithPromise7,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$RunnableWithPromise8,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$RunnableWithPromise9,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$RunnableWithVoidPromise,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$RunnableWithVoidPromise1,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$RunnableWithVoidPromise2,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$RunnableWithVoidPromise3,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$RunnableWithVoidPromise4,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$RunnableWithVoidPromise5,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$RunnableWithVoidPromise6,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$RunnableWithVoidPromise7,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$RunnableWithVoidPromise8,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
    QTJAMBI_REPOSITORY_DECLARE_CLASS(QtConcurrent$RunnableWithVoidPromise9,
                  QTJAMBI_REPOSITORY_DECLARE_VOID_METHOD(run))
#endif
}

namespace Runtime
{
    QTJAMBI_REPOSITORY_DECLARE_CLASS(Callable,
                  QTJAMBI_REPOSITORY_DECLARE_OBJECT_METHOD(call))
}
}

#endif // QTJAMBI_CONCURRENT_REPOSITORY_H
