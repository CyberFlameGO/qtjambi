<?xml version="1.0"?>
<!--****************************************************************************
**
** Copyright (C) 2009-2022 Dr. Peter Droste, Omix Visualization GmbH & Co. KG. All rights reserved.
**
** This file is part of Qt Jambi.
**
** ** $BEGIN_LICENSE$
** Commercial Usage
** Licensees holding valid Qt Commercial licenses may use this file in
** accordance with the Qt Commercial License Agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Nokia.
**
** GNU Lesser General Public License Usage
** This file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain
** additional rights. These rights are described in the Nokia Qt LGPL
** Exception version 1.0, included in the file LGPL_EXCEPTION.txt in this
** package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3.0 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU General Public License version 3.0 requirements will be
** met: http://www.gnu.org/copyleft/gpl.html.
**
** If you are unsure which license is appropriate for your use, please
** contact the sales department at qt-sales@nokia.com.
** $END_LICENSE$

**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************-->
<typesystem qt-library="QtWinExtras" description="Provides platform-specific APIs for Windows.">
    <required-library name="QtWidgets"/>
  <rejection class="QWinMime"/>
  <rejection class="QWindowsWindowFunctions::IsTabletModeType"/>
  <rejection class="QWindowsWindowFunctions::SetHasBorderInFullScreen"/>
  <rejection class="QWindowsWindowFunctions::SetTouchWindowTouchType"/>
  <rejection class="QWindowsWindowFunctions::SetWindowActivationBehaviorType"/>
  <namespace-type name="QtWin">
    <modify-function signature="setWindowFlip3DPolicy(QWidget*,QtWin::WindowFlip3DPolicy)">
        <modify-argument index="1">
            <reference-count action="ignore" />
        </modify-argument>
    </modify-function>
    <modify-function signature="setWindowExcludedFromPeek(QWidget*,bool)">
        <modify-argument index="1">
            <reference-count action="ignore" />
        </modify-argument>
    </modify-function>
    <modify-function signature="setWindowDisallowPeek(QWidget*,bool)">
        <modify-argument index="1">
            <reference-count action="ignore" />
        </modify-argument>
    </modify-function>
    <modify-function signature="setWindowDisallowPeek(QWindow*,bool)">
        <modify-argument index="1">
            <reference-count action="ignore" />
        </modify-argument>
    </modify-function>
    <modify-function signature="setWindowExcludedFromPeek(QWindow*,bool)">
        <modify-argument index="1">
            <reference-count action="ignore" />
        </modify-argument>
    </modify-function>
    <modify-function signature="setWindowFlip3DPolicy(QWindow*,QtWin::WindowFlip3DPolicy)">
        <modify-argument index="1">
            <reference-count action="ignore" />
        </modify-argument>
    </modify-function>
  </namespace-type>
  <enum-type name="QtWin::HBitmapFormat"/>
  <enum-type name="QWinJumpListCategory::Type"/>
  <enum-type name="QWinJumpListItem::Type"/>
  <enum-type name="QtWin::WindowFlip3DPolicy"/>
  <object-type name="QWinJumpList">
        <modify-function signature="addCategory(QWinJumpListCategory*)">
            <modify-argument index="1">
                <reference-count action="add" variable-name="__rcCategories"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="addCategory(const QString &amp;, const QList&lt;QWinJumpListItem *&gt;)">
            <!-- the list entries must be added in __rcItems of the returned QWinJumpListCategory object!!!
            <modify-argument index="2">
                <reference-count action="add" variable-name="__rcCategories"/>
            </modify-argument>
            -->
            <modify-argument index="return">
                <reference-count action="add" variable-name="__rcCategories"/>
            </modify-argument>
        </modify-function>
  </object-type>
  <object-type name="QWinJumpListCategory">
        <modify-function signature="addItem(QWinJumpListItem*)">
            <modify-argument index="1">
                <reference-count action="add" variable-name="__rcItems"/>
            </modify-argument>
        </modify-function>
  </object-type>
  <object-type name="QWinJumpListItem">
  </object-type>
  <!--object-type name="QWinMime">
  </object-type-->
  <object-type name="QWinTaskbarButton">
    <modify-function signature="setWindow(QWindow*)">
        <modify-argument index="1">
            <reference-count action="ignore" />
        </modify-argument>
    </modify-function>
    <modify-function signature="eventFilter(QObject*,QEvent*)">
        <modify-argument index="2" invalidate-after-use="yes" />
    </modify-function>
  </object-type>
  <object-type name="QWinTaskbarProgress">
  </object-type>
  <object-type name="QWinThumbnailToolBar">
        <modify-function signature="addButton(QWinThumbnailToolButton*)">
            <modify-argument index="1">
                <reference-count action="add" variable-name="__rcToolButtons"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="removeButton(QWinThumbnailToolButton*)">
            <modify-argument index="1">
                <reference-count action="remove" variable-name="__rcToolButtons"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="setWindow(QWindow*)">
            <modify-argument index="1">
                <reference-count action="ignore" />
            </modify-argument>
        </modify-function>
  </object-type>
  <object-type name="QWinThumbnailToolButton">
  </object-type>
  <object-type name="QWinEvent">
  </object-type>
  <object-type name="QWinColorizationChangeEvent">
  </object-type>
  <object-type name="QWinCompositionChangeEvent">
  </object-type>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched * type 'HBITMAP'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched * type 'HRESULT'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched * type 'HDC'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched * type 'HRGN'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched * type 'HICON'"/>
  <suppress-warning text="WARNING(JavaGenerator) :: Either add or remove specified for reference count variable '__rcCategories' in 'QWinJumpList' but not both."/>
  <suppress-warning text="WARNING(JavaGenerator) :: Either add or remove specified for reference count variable '__rcItems' in 'QWinJumpListCategory' but not both."/>
</typesystem>
