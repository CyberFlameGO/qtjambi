<?xml version="1.0"?>
<!--****************************************************************************
**
** Copyright (C) 2019 Dr. Peter Droste, Omix Visualization GmbH & Co. KG. All rights reserved.
**
** This file is part of Qt Jambi.
**
** ** $BEGIN_LICENSE$
** Commercial Usage
** Licensees holding valid Qt Commercial licenses may use this file in
** accordance with the Qt Commercial License Agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Nokia.
**
** GNU Lesser General Public License Usage
** This file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain
** additional rights. These rights are described in the Nokia Qt LGPL
** Exception version 1.0, included in the file LGPL_EXCEPTION.txt in this
** package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3.0 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU General Public License version 3.0 requirements will be
** met: http://www.gnu.org/copyleft/gpl.html.
**
** If you are unsure which license is appropriate for your use, please
** contact the sales department at qt-sales@nokia.com.
** $END_LICENSE$

**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************-->
<typesystem package="io.qt.bluetooth" module="qtjambi.bluetooth" default-superclass="io.qt.QtObject">
    <inject-code class="metainfo" position="1">
    void initialize_meta_info_QtBluetooth();
    </inject-code>
    <inject-code class="metainfo">
    initialize_meta_info_QtBluetooth();
    </inject-code>
  <value-type name="QBluetoothUuid">
        <modify-function signature="toUInt128() const" rename="toBytes">
            <modify-argument index="0">
                <replace-type modified-type="byte[]"/>
                <conversion-rule class="native">
                    Int8PointerArray %inArray(%env, reinterpret_cast&lt;qint8*>(%in.data), 16);
                    %out = %env->NewByteArray(16);
                    %env->SetByteArrayRegion(jbyteArray(%out), 0, 16, reinterpret_cast&lt;jbyte *>(%in.data));
                </conversion-rule>
            </modify-argument>
        </modify-function>
        <modify-function signature="QBluetoothUuid(quint128)">
            <inject-code>
                    if(uuid.length!=16)
                        throw new IllegalArgumentException("Uuid needs to be an array of length 16.");
            </inject-code>
            <modify-argument index="1">
                <replace-type modified-type="byte[]"/>
                <conversion-rule class="native">
                    quint128 %out;
                    %env->GetByteArrayRegion(jbyteArray(%in), 0, 16, reinterpret_cast&lt;jbyte *>(%out.data));
                </conversion-rule>
            </modify-argument>
        </modify-function>
       <modify-function signature="toUInt16(bool*) const" rename="toShort">
            <modify-argument index="0">
                <replace-type modified-type="java.lang.Short"/>
                <conversion-rule class="native">
                    %out = ok ? qtjambi_from_short(%env, %in) : nullptr;
                </conversion-rule>
            </modify-argument>
            <modify-argument index="1">
                <remove-argument/>
                <conversion-rule class="native">
                    bool ok(false);
                    bool* %out = &amp;ok;
                </conversion-rule>
            </modify-argument>
        </modify-function>
        <modify-function signature="toUInt32(bool*) const" rename="toInt">
            <modify-argument index="0">
                <replace-type modified-type="java.lang.Integer"/>
                <conversion-rule class="native">
                    %out = ok ? qtjambi_from_int(%env, %in) : nullptr;
                </conversion-rule>
            </modify-argument>
            <modify-argument index="1">
                <remove-argument/>
                <conversion-rule class="native">
                    bool ok(false);
                    bool* %out = &amp;ok;
                </conversion-rule>
            </modify-argument>
        </modify-function>
  </value-type>
  <value-type name="QBluetoothDeviceInfo">
        <extra-includes>
            <include file-name="qtjambi_bluetooth_repository.h" location="local"/>
        </extra-includes>
        <inject-code until="5.13">
        public final static class ServiceUuids implements Iterable&lt;QBluetoothUuid>{
            private ServiceUuids(java.util.List&lt;QBluetoothUuid> serviceUuids, DataCompleteness completeness) {
                super();
                this.serviceUuids = serviceUuids;
                this.completeness = completeness;
            }
            
            public final java.util.List&lt;io.qt.bluetooth.QBluetoothUuid> serviceUuids;
            public final DataCompleteness completeness;
            
            @Override
            public java.util.Iterator&lt;QBluetoothUuid> iterator() {
                return serviceUuids.iterator();
            }
        }
        </inject-code>
        <modify-function signature="serviceUuids(QBluetoothDeviceInfo::DataCompleteness *) const" since="5.14" until="5.*">
            <modify-argument index="1">
                <remove-argument/>
                <conversion-rule class="native">
                    QBluetoothDeviceInfo::DataCompleteness* %out = nullptr;
                </conversion-rule>
            </modify-argument>
        </modify-function>
        <modify-function signature="serviceUuids(QBluetoothDeviceInfo::DataCompleteness *) const" until="5.13">
            <modify-argument index="1">
                <remove-argument/>
                <conversion-rule class="native">
                    QBluetoothDeviceInfo::DataCompleteness completeness;
                    QBluetoothDeviceInfo::DataCompleteness* %out = &amp;completeness;
                </conversion-rule>
            </modify-argument>
            <modify-argument index="0">
                <replace-type modified-type="io.qt.bluetooth.QBluetoothDeviceInfo$ServiceUuids"/>
                <conversion-rule class="native">
                    %out = Java::QtBluetooth::QBluetoothDeviceInfo$ServiceUuids::newInstance(%env, qtjambi_cast&lt;jobject>(%env, %in), qtjambi_cast&lt;jobject>(%env, completeness));
                </conversion-rule>
            </modify-argument>
        </modify-function>
  </value-type>
  <object-type name="QLowEnergyController">
        <extra-includes>
            <include file-name="qtjambi/qtjambi_repository.h" location="global"/>
        </extra-includes>
        <modify-function signature="createServiceObject(const QBluetoothUuid &amp;, QObject *)">
            <modify-argument index="return">
                <define-ownership class="native" owner="java"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="createCentral(const QBluetoothDeviceInfo &amp;, QObject *)">
            <modify-argument index="return">
                <define-ownership class="native" owner="java"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="createCentral(const QBluetoothDeviceInfo &amp;,QBluetoothAddress,QObject *)" since="6.2.0">
            <modify-argument index="return">
                <define-ownership class="native" owner="java"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="createCentral(QBluetoothAddress,QBluetoothAddress,QObject*)" until="5.*">
            <modify-argument index="return">
                <define-ownership class="native" owner="java"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="createPeripheral(QObject *)">
            <modify-argument index="return">
                <define-ownership class="native" owner="java"/>
            </modify-argument>
        </modify-function>
  </object-type>
</typesystem>
