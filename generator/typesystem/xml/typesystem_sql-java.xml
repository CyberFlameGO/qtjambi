<?xml version="1.0"?>
<!--****************************************************************************
**
** Copyright (C) 1992-2009 Nokia. All rights reserved.
** Copyright (C) 2009-2022 Dr. Peter Droste, Omix Visualization GmbH & Co. KG. All rights reserved.
**
** This file is part of Qt Jambi.
**
** ** $BEGIN_LICENSE$
** Commercial Usage
** Licensees holding valid Qt Commercial licenses may use this file in
** accordance with the Qt Commercial License Agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Nokia.
**
** GNU Lesser General Public License Usage
** This file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain
** additional rights. These rights are described in the Nokia Qt LGPL
** Exception version 1.0, included in the file LGPL_EXCEPTION.txt in this
** package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3.0 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU General Public License version 3.0 requirements will be
** met: http://www.gnu.org/copyleft/gpl.html.
**
** If you are unsure which license is appropriate for your use, please
** contact the sales department at qt-sales@nokia.com.
** $END_LICENSE$

**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************-->
<typesystem package="io.qt.sql" module="qtjambi.sql" default-superclass="io.qt.QtObject">
    <required-package name="io.qt.gui"/>
    <required-package name="io.qt.widgets"/>
    <value-type name="QSqlDatabase">
        <modify-function signature="registerSqlDriver(QString, QSqlDriverCreatorBase *)">
            <modify-argument index="2">
                <define-ownership class="native" owner="cplusplus"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="addDatabase(QSqlDriver*,QString)">
            <modify-argument index="1">
                <define-ownership class="native" owner="cplusplus"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="contains(QString)">
            <modify-argument index="1">
                <replace-default-expression with="defaultConnection()"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="addDatabase(QString,QString)">
            <modify-argument index="2">
                <replace-default-expression with="defaultConnection()"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="addDatabase(QSqlDriver *,QString)">
            <modify-argument index="2">
                <replace-default-expression with="defaultConnection()"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="database(QString,bool)">
            <modify-argument index="1">
                <replace-default-expression with="defaultConnection()"/>
            </modify-argument>
        </modify-function>
        <modify-field name="defaultConnection">
            <replace-type modified-type="java.lang.String"/>
        </modify-field>

    </value-type>

    <object-type name="QSqlTableModel">
        <modify-function signature="beforeInsert(QSqlRecord&amp;)">
            <modify-argument index="1" invalidate-after-use="yes">
                <no-null-pointer/>
                <replace-type modified-type="io.qt.sql.QSqlRecord"/>
                <conversion-rule class="shell">
                    %out = qtjambi_cast&lt;jobject>(%env, &amp;%in);
                </conversion-rule>
                <conversion-rule class="native">
                    QSqlRecord &amp;%out = qtjambi_cast&lt;QSqlRecord &amp;>(%env, %in);
                </conversion-rule>
            </modify-argument>
        </modify-function>

        <modify-function signature="beforeUpdate(int,QSqlRecord&amp;)">
            <modify-argument index="2" invalidate-after-use="yes">
                <no-null-pointer/>
                <replace-type modified-type="io.qt.sql.QSqlRecord"/>
                <conversion-rule class="shell">
                    %out = qtjambi_cast&lt;jobject>(%env, &amp;%in);
                </conversion-rule>
                <conversion-rule class="native">
                    QSqlRecord &amp;%out = qtjambi_cast&lt;QSqlRecord &amp;>(%env, %in);
                </conversion-rule>
            </modify-argument>
        </modify-function>

        <modify-function signature="primeInsert(int,QSqlRecord&amp;)">
            <modify-argument index="2" invalidate-after-use="yes">
                <no-null-pointer/>
                <replace-type modified-type="io.qt.sql.QSqlRecord"/>
                <conversion-rule class="shell">
                    %out = qtjambi_cast&lt;jobject>(%env, &amp;%in);
                </conversion-rule>
                <conversion-rule class="native">
                    QSqlRecord &amp;%out = qtjambi_cast&lt;QSqlRecord &amp;>(%env, %in);
                </conversion-rule>
            </modify-argument>
        </modify-function>

    </object-type>
  <value-type name="QSqlField">
        <modify-function signature="QSqlField(QString,QVariant::Type)" until="5.*">
            <modify-argument index="2">
                <replace-default-expression with="io.qt.core.QVariant.Type.Invalid"/>
            </modify-argument>
        </modify-function>
  </value-type>
</typesystem>
