<?xml version="1.0"?>
<!--****************************************************************************
**
** Copyright (C) 1992-2009 Nokia. All rights reserved.
** Copyright (C) 2009-2022 Dr. Peter Droste, Omix Visualization GmbH & Co. KG. All rights reserved.
**
** This file is part of Qt Jambi.
**
** ** $BEGIN_LICENSE$
** Commercial Usage
** Licensees holding valid Qt Commercial licenses may use this file in
** accordance with the Qt Commercial License Agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Nokia.
**
** GNU Lesser General Public License Usage
** This file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain
** additional rights. These rights are described in the Nokia Qt LGPL
** Exception version 1.0, included in the file LGPL_EXCEPTION.txt in this
** package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3.0 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU General Public License version 3.0 requirements will be
** met: http://www.gnu.org/copyleft/gpl.html.
**
** If you are unsure which license is appropriate for your use, please
** contact the sales department at qt-sales@nokia.com.
** $END_LICENSE$

**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************-->
<typesystem package="io.qt.printsupport" module="qtjambi.printsupport" default-superclass="io.qt.QtObject">
    <object-type name="QPrintPreviewDialog">
      <modify-function signature="open(QObject*,const char*)"  remove="all" />
    </object-type>

    <object-type name="QPageSetupDialog">
      <modify-function signature="open(QObject*,const char*)"  remove="all" />
    </object-type>

    <object-type name="QPrintDialog">
        <modify-function signature="open(QObject*,const char*)" remove="all" />

        <inject-code class="shell-declaration" position="end">
#if !defined(Q_NO_USING_KEYWORD)
        using QDialog::accepted;
#else
    inline void accepted()
    { QDialog::accepted(); }
#endif
        </inject-code>
    </object-type>

    <object-type name="QPrinter">
        <modify-function signature="QPrinter(QPrinter::PrinterMode)">
            <inject-code position="beginning">
                if(io.qt.core.QCoreApplication.instance()==null)
                    throw new IllegalStateException("Cannot create QPrinter before initializing QCoreApplication.");
            </inject-code>
        </modify-function>
        <modify-function signature="QPrinter(QPrinterInfo,QPrinter::PrinterMode)">
            <inject-code position="beginning">
                if(io.qt.core.QCoreApplication.instance()==null)
                    throw new IllegalStateException("Cannot create QPrinter before initializing QCoreApplication.");
            </inject-code>
        </modify-function>
        <modify-function signature="getPageMargins(qreal*,qreal*,qreal*,qreal*,QPrinter::Unit)const" until="5.*">
            <modify-argument index="1">
                <remove-argument/>
                <conversion-rule class="native">
                    qreal left = 0;
                    qreal* %out = &amp;left;
                </conversion-rule>
            </modify-argument>
            <modify-argument index="2">
                <remove-argument/>
                <conversion-rule class="native">
                    qreal top = 0;
                    qreal* %out = &amp;top;
                </conversion-rule>
            </modify-argument>
            <modify-argument index="3">
                <remove-argument/>
                <conversion-rule class="native">
                    qreal right = 0;
                    qreal* %out = &amp;right;
                </conversion-rule>
            </modify-argument>
            <modify-argument index="4">
                <remove-argument/>
                <conversion-rule class="native">
                    qreal bottom = 0;
                    qreal* %out = &amp;bottom;
                </conversion-rule>
            </modify-argument>
            <modify-argument index="0">
                <replace-type modified-type="io.qt.core.QMarginsF"/>
                <conversion-rule class="native">
                    %out = qtjambi_cast&lt;jobject>(%env, QMarginsF(left, top, right, bottom));
                </conversion-rule>
            </modify-argument>
        </modify-function>
    </object-type>

    <suppress-warning text="WARNING(MetaJavaBuilder) :: Shadowing: QDialog::accepted() and QPrintDialog::accepted(); Java code will not compile" />

</typesystem>
