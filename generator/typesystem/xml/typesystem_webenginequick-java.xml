<?xml version="1.0"?>
<!--****************************************************************************
**
** Copyright (C) 2009-2022 Dr. Peter Droste, Omix Visualization GmbH & Co. KG. All rights reserved.
**
** This file is part of Qt Jambi.
**
** ** $BEGIN_LICENSE$
** Commercial Usage
** Licensees holding valid Qt Commercial licenses may use this file in
** accordance with the Qt Commercial License Agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Nokia.
**
** GNU Lesser General Public License Usage
** This file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain
** additional rights. These rights are described in the Nokia Qt LGPL
** Exception version 1.0, included in the file LGPL_EXCEPTION.txt in this
** package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3.0 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU General Public License version 3.0 requirements will be
** met: http://www.gnu.org/copyleft/gpl.html.
**
** If you are unsure which license is appropriate for your use, please
** contact the sales department at qt-sales@nokia.com.
** $END_LICENSE$

**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************-->
<typesystem package="io.qt.webengine.quick" module="qtjambi.webenginequick" default-superclass="io.qt.QtObject">
    <namespace-type name="QtWebEngineQuick">
      <inject-code>
          <import-file name="typesystem/java/typesystem_webenginequick-java.java" quote-after-line="class QtWebEngineQuick___" quote-before-line="}// class"/>
      </inject-code>
    </namespace-type>
    <object-type name="QQuickWebEngineProfile">
        <extra-includes>
            <include file-name="QtWebEngineCore/QWebEngineDownloadRequest" location="global"/>
            <include file-name="qtjambi/qtjambi_repository.h" location="global"/>
        </extra-includes>
        <modify-function signature="downloadRequested(QQuickWebEngineDownloadRequest *)" private-signal="yes">
            <modify-argument index="1">
                <replace-type modified-type="? extends io.qt.webengine.core.QWebEngineDownloadRequest"/>
                <conversion-rule class="native">
				Q_UNUSED(in)
                Java::Runtime::IllegalAccessException::throwNew(%env, "Calling signal downloadRequested from Java not allowed." QTJAMBI_STACKTRACEINFO );
				QQuickWebEngineDownloadRequest* %out{nullptr};
                </conversion-rule>
                <conversion-rule class="shell">
                %out = qtjambi_cast&lt;jobject>(%env, reinterpret_cast&lt;QWebEngineDownloadRequest*>(%in));
                </conversion-rule>
            </modify-argument>
        </modify-function>
        <modify-function signature="downloadFinished(QQuickWebEngineDownloadRequest *)" private-signal="yes">
            <modify-argument index="1">
                <replace-type modified-type="? extends io.qt.webengine.core.QWebEngineDownloadRequest"/>
                <conversion-rule class="native">
                Q_UNUSED(in)
				Java::Runtime::IllegalAccessException::throwNew(%env, "Calling signal downloadFinished from Java not allowed." QTJAMBI_STACKTRACEINFO );
				QQuickWebEngineDownloadRequest* %out{nullptr};
                </conversion-rule>
                <conversion-rule class="shell">
                %out = qtjambi_cast&lt;jobject>(%env, reinterpret_cast&lt;QWebEngineDownloadRequest*>(%in));
                </conversion-rule>
            </modify-argument>
        </modify-function>
    </object-type>
</typesystem>
