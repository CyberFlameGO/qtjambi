<?xml version="1.0"?>
<typesystem qt-library="QtDBus" description="Classes for inter-process communication over the D-Bus protocol.">
    <rejection class="QDBusPendingReply" />
    <rejection class="QDBusPendingReply::Select"/>
    <rejection class="QtJambiDBusPendingReply"/>
    <rejection class="QDBusAbstractInterfacePrivate"/>
    <rejection class="DBusError"/>
    <rejection class="QDBusConnection" function-name="registerVirtualObject"/>
    <rejection class="" function-name="qDBusReplyFill"/>
    <rejection class="" function-name="qDBusRegisterMetaType"/>
    <rejection class="" function-name="qdbus_cast"/>
    <rejection class="" function-name="qDBusDemarshallHelper"/>
    <rejection class="" function-name="qDBusMarshallHelper"/>

    <namespace-type name="QDBus">
        <extra-includes>
            <include file-name="QtDBus/QtDBus" location="global"/>
        </extra-includes>
    </namespace-type>

    <enum-type name="QDBus::CallMode"/>
    <enum-type name="QDBusConnectionInterface::ServiceQueueOptions"/>
    <enum-type name="QDBusConnectionInterface::RegisterServiceReply"/>
    <enum-type name="QDBusConnectionInterface::ServiceReplacementOptions"/>
    <enum-type name="QDBusConnection::VirtualObjectRegisterOption"/>

    <enum-type name="QDBusConnection::RegisterOption" flags="QDBusConnection::RegisterOptions"><!-- namespace and QDBusConnection -->
    <reject-enum-value name="ExportAllSignal"/>
    </enum-type>

    <enum-type name="QDBusConnection::UnregisterMode"/><!-- namespace and QDBusConnection -->

    <enum-type name="QDBusArgument::ElementType"/><!-- QDBusArgument -->

    <enum-type name="QDBusConnection::BusType"/><!-- QDBusConnection -->
    <enum-type name="QDBusConnection::ConnectionCapability" flags="QDBusConnection::ConnectionCapabilities"/><!-- QDBusConnection -->

    <enum-type name="QDBusConnection::RegisterServiceReply"/><!-- QDBusConnectionInterface -->
    <enum-type name="QDBusConnection::ServiceQueueOptions"/><!-- QDBusConnectionInterface -->
    <enum-type name="QDBusConnection::ServiceReplacementOption" flags="QDBusConnection::ServiceReplacementOptions"/><!-- QDBusConnectionInterface -->

    <enum-type name="QDBusError::ErrorType"><!--QDBusError -->
        <reject-enum-value name="LastErrorType"/>
    </enum-type>

    <enum-type name="QDBusMessage::MessageType"><!--QDBusMessage -->
    </enum-type>

    <enum-type name="QDBusServiceWatcher::WatchModeFlag" flags="QDBusServiceWatcher::WatchMode"/><!--QDBusServiceWatcher -->

    <object-type name="QDBusServer"/>
    <object-type name="QDBusVirtualObject"/>
    <object-type name="QDBusAbstractAdaptor"/><!-- since 4.2 -->
    <object-type name="QDBusAbstractInterface"><!-- since 4.2, looks like interface -->
        <modify-function signature="interface() const" rename="interfaceName"/>
    </object-type>
    <object-type name="QDBusAbstractInterfaceBase"><!-- since 4.2, looks like interface -->
        <modify-function signature="qt_metacall(QMetaObject::Call,int,void**)" remove="all"/>
    </object-type>

    <value-type name="QDBusArgument"><!-- since 4.2 -->
        <modify-function signature="beginMapEntry() const" remove="all"/>
        <modify-function signature="beginStructure() const" remove="all"/>
        <modify-function signature="endStructure() const" remove="all"/>
        <modify-function signature="endArray() const" remove="all"/>
        <modify-function signature="endMap() const" remove="all"/>
        <modify-function signature="endMapEntry() const" remove="all"/>
        <modify-function signature="operator&lt;&lt;(uint)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(unsigned long long)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(unsigned short)" remove="all"/>
        <modify-function signature="operator=(const QDBusArgument &amp;)" remove="all"/>
        <modify-function signature="operator>>(unsigned short &amp;)const" remove="all"/>
        <modify-function signature="operator>>(uint &amp;)const" remove="all"/>
        <modify-function signature="operator>>(unsigned long long &amp;)const" remove="all"/>
    </value-type>
    <value-type name="QDBusConnection"><!-- since 4.2 -->
        <extra-includes>
            <include file-name="QDBusConnection" location="global"/>
        </extra-includes>
        <custom-constructor>
    if(copy){
            return new(placement) QDBusConnection(*copy);
    }else{
            return new(placement) QDBusConnection("");
    }
        </custom-constructor>
        <custom-constructor type="default">
            new(placement) QDBusConnection("");
        </custom-constructor>
        <modify-function signature="interface() const" rename="connectionInterface"/>
        <modify-function signature="internalPointer() const" remove="all"/>
        <modify-function signature="operator=(const QDBusConnection &amp;)" remove="all"/>
    </value-type>

    <object-type name="QDBusConnectionInterface"><!-- since 4.2, looks like interface -->
        <extra-includes>
            <include file-name="QDBusVariantReply.h" location="local"/>
        </extra-includes>
    </object-type>


    <interface-type name="QDBusContext"/><!-- since 4.3, looks like interface -->

    <value-type name="QDBusError"><!-- since 4.2 -->
        <modify-function signature="operator=(const QDBusError &amp;)" remove="all"/>
        <modify-function signature="operator=(const QDBusMessage &amp;)" remove="all"/>
    </value-type>
    
    <object-type name="QDBusInterface"><!-- since 4.2, looks like interface -->
    </object-type>

    <value-type name="QDBusMessage"><!-- since 4.2 -->
    <modify-function signature="interface() const" rename="interfaceName"/>
    <modify-function signature="operator=(const QDBusMessage &amp;)" remove="all"/>
    <modify-function signature="operator&lt;&lt;(const QVariant &amp;)" remove="all"/>
    </value-type>

    <value-type name="QDBusObjectPath"><!-- since 4.2, inherits QString(private) -->
    <modify-function signature="QDBusObjectPath(QLatin1StringView)" remove="all" since="6.4.0"/>
    <modify-function signature="QDBusObjectPath(QLatin1String)" remove="all" until="6.3.*"/>
    <modify-function signature="QDBusObjectPath(const char *)" remove="all"/>
    </value-type>

    <interface-type name="QDBusPendingCall" is-value="yes"> <!-- since 4.5 -->
        <custom-constructor>
            if(copy)
                return new(placement) QDBusPendingCall(*copy);
            else
                return new(placement) QDBusPendingCall(QDBusPendingCall::fromCompletedCall(QDBusMessage()));
        </custom-constructor>
        <custom-constructor type="default">
            new(placement) QDBusPendingCall(QDBusPendingCall::fromCompletedCall(QDBusMessage()));
        </custom-constructor>
        <modify-function signature="operator=(QDBusPendingCall &amp;&amp;)" remove="all" since="5.14.0"/>
        <modify-function signature="operator=(const QDBusPendingCall &amp;)" remove="all"/>
        <modify-function signature="QDBusPendingCall(const QDBusPendingCall &amp;)">
            <modify-argument index="1">
                <no-null-pointer/>
            </modify-argument>
        </modify-function>
        <modify-function signature="swap(QDBusPendingCall &amp;)">
            <modify-argument index="1">
                <replace-type modified-type="io.qt.dbus.QDBusPendingCall"/>
                <no-null-pointer/>
                <conversion-rule class="native">
                        QDBusPendingCall&amp; %out = qtjambi_to_interface_deref&lt;QDBusPendingCall>(%env, %in, "io/qt/dbus/QDBusPendingCall");
                </conversion-rule>
            </modify-argument>
        </modify-function>
    </interface-type>

    <object-type name="QDBusPendingCallWatcher"><!-- since 4.5 -->
        <interface-polymorphy interface="QDBusPendingCall" condition="false" />
        <modify-function signature="QDBusPendingCallWatcher(const QDBusPendingCall &amp;, QObject*)">
            <modify-argument index="1">
                <no-null-pointer/>
            </modify-argument>
        </modify-function>
        <modify-function signature="fromCompletedCall(const QDBusMessage &amp;)" remove="all"/>
        <modify-function signature="fromError(const QDBusError &amp;)" remove="all"/>
    </object-type>

    <object-type name="QDBusServiceWatcher"><!-- since 4.6 -->
        <modify-function signature="connection() const" remove="all"/><!-- FIXME: commented out due to build errors -->
        <!-- FIXME: QDBusServiceWatcher() this probably makes this class pretty useless, need to fix QDBusConnection type  -->
        <modify-function signature="QDBusServiceWatcher(const QString &amp;,const QDBusConnection &amp;,QFlags&lt;QDBusServiceWatcher::WatchModeFlag&gt;,QObject *)" remove="all"/>
        <modify-function signature="setConnection(const QDBusConnection &amp;)" remove="all"/>
    </object-type>

    <value-type name="QDBusSignature"><!-- since 4.2, inherits QString(private) -->
    <modify-function signature="QDBusSignature(QLatin1StringView)" remove="all" since="6.4.0"/>
    <modify-function signature="QDBusSignature(QLatin1String)" remove="all" until="6.3.*"/>
    <modify-function signature="QDBusSignature(const char*)" remove="all"/>
    </value-type>

    <value-type name="QDBusUnixFileDescriptor"><!-- since 4.8 -->
        <modify-function signature="operator=(const QDBusUnixFileDescriptor &amp;)" remove="all"/>
    </value-type>
    <rejection class="QDBusMetaType" />
    <object-type name="QDBusPendingReplyData" until="5.*">
        <interface-polymorphy interface="QDBusPendingCall" condition="false" />
    </object-type>
    <object-type name="QDBusPendingReplyBase" since="6.0.0">
        <interface-polymorphy interface="QDBusPendingCall" condition="false" />
    </object-type>

    <object-type name="QDBusVariant"/><!-- since 4.2, inherits QVariant(private) -->
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Object type 'QDBusPendingCall' passed as value. Resulting code will not compile.*" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QDBusError::QDBusError', unmatched parameter type '*DBusError*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Final class 'QDBusAbstractInterfaceBase' set to non-final, as it is extended by other classes" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: signature 'qt_metacall(QMetaObject::Call,int,void**)' for function modification in 'QDBusInterface' not found. Possible candidates:*" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtJambiDBusPendingReply::QtJambiDBusPendingReply', unmatched parameter type '*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: unknown operator 'Type'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: horribly broken type ''" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QDBusReply::operator Type', unmatched return type ''" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Operator type unknown: QDBusReply::operator Type()const" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QDBusReply::*', unmatched *type '*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: template baseclass '*' of 'QDBusPendingReplyBase' is not known" />
  <suppress-warning text="WARNING(JavaGenerator) :: No ==/!= operator found for value type QDBus*." />
</typesystem>
