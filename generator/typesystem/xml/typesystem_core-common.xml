<?xml version="1.0"?>
<!--****************************************************************************
**
** Copyright (C) 1992-2009 Nokia. All rights reserved.
** Copyright (C) 2009-2022 Dr. Peter Droste, Omix Visualization GmbH & Co. KG. All rights reserved.
**
** This file is part of Qt Jambi.
**
** ** $BEGIN_LICENSE$
** Commercial Usage
** Licensees holding valid Qt Commercial licenses may use this file in
** accordance with the Qt Commercial License Agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Nokia.
**
** GNU Lesser General Public License Usage
** This file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain
** additional rights. These rights are described in the Nokia Qt LGPL
** Exception version 1.0, included in the file LGPL_EXCEPTION.txt in this
** package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3.0 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU General Public License version 3.0 requirements will be
** met: http://www.gnu.org/copyleft/gpl.html.
**
** If you are unsure which license is appropriate for your use, please
** contact the sales department at qt-sales@nokia.com.
** $END_LICENSE$

**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************-->
<typesystem qt-library="QtCore">
    <description>&lt;p>QtJambi base module containing QtCore, QtGui and QtWidgets.&lt;/p>
&lt;ul>
&lt;li>QtCore - Core non-graphical classes used by other modules.&lt;/li>
&lt;li>QtGui - Base classes for graphical user interface (GUI) components. Includes OpenGL.&lt;/li>
&lt;li>QtWidgets - Classes to extend Qt GUI with C++ widgets.&lt;/li>
&lt;/ul></description>
    <rejection class="QOperatingSystemVersion" field-name="Windows11_21H2"/>
    <rejection class="QOperatingSystemVersion" field-name="Windows11_22H2"/>
    <rejection class="QStringConverterBase::State" function-name="reset"/>
    <rejection class="" enum-name="QtJambiNativeID"/>
    <rejection class="QNativeInterface::QAndroidApplication" function-name="runOnAndroidMainThread"/>
    <rejection class="function_ref"/>
    <rejection class="QtPrivate::Deprecated_t"/>
    <rejection class="QFutureSynchronizer"/>
    <rejection class="JNIEnv_"/>
    <rejection class="QJniEnvironment"/>
    <rejection class="QJniObject"/>
    <rejection class="JNIInvokeInterface_"/>
    <rejection class="JNINativeInterface_"/>
    <rejection class="ProcessOpenModeResult"/>
    <rejection class="JavaVM_"/>
    <rejection class="qt_clang_builtin_available_os_version_data"/>
    <rejection class="_jthrowable"/>
    <rejection class="_jstring"/>
    <rejection class="_jshortArray"/>
    <rejection class="_jobjectArray"/>
    <rejection class="_jobject"/>
    <rejection class="_jlongArray"/>
    <rejection class="_jintArray"/>
    <rejection class="_jfloatArray"/>
    <rejection class="_jdoubleArray"/>
    <rejection class="_jclass"/>
    <rejection class="_jcharArray"/>
    <rejection class="_jbyteArray"/>
    <rejection class="_jbooleanArray"/>
    <rejection class="_jarray"/>
    <rejection class="QArgumentType"/>
    <rejection class="QMetaObjectPrivate"/>
    <rejection class="QStringView"/>
    <rejection class="QFSFileEnginePrivate"/>
    <rejection class="QMatrix"/>
    <rejection class="QArrayData"/>
    <rejection class="QTypedArrayData"/>
    <rejection class="QArrayDataOps"/>
    <rejection class="QArrayDataPointer"/>
    <rejection class="QArrayDataPointerRef"/>
    <rejection class="QStaticArrayData"/>
    <rejection class="QStaticByteArrayData"/>
    <rejection class="QStaticByteArrayMatcher"/>
    <rejection class="QStaticByteArrayMatcherBase"/>
    <rejection class="QStaticStringData"/>
    <rejection class="QStringBuilderBase"/>
    <rejection class="QStringBuilderCommon"/>
    <rejection class="QStringDataPtr"/>
    <rejection class="QSemaphoreReleaser"/>
    <rejection class="QRandomGenerator64"/>
    <rejection class="QKeyValueIterator"/>
    <rejection class="QAtomicAdditiveType"/>
    <rejection class="QBasicAtomicInteger"/>
    <rejection class="QBigEndianStorageType"/>
    <rejection class="QDateTime::Data"/>
    <rejection class="QDateTime::ShortData"/>
    <rejection class="QFileSystemEntry"/>
    <rejection class="QFileSystemMetaData"/>
    <rejection class="QMapDataBase"/>
    <rejection class="QAnyStringView"/>
    <rejection class="QUtf8StringView"/>
    <rejection class="QMapNodeBase"/>
    <rejection class="QPalette::Data"/>
    <rejection class="QStringConverter::Interface"/>
    <rejection class="QList::MemoryLayout"/>
    <rejection class="QList" enum-name="MemoryLayout"/>
    <rejection class="QPropertyObserverBase" enum-name="ObserverTag" since="6.0.0"/>
    <rejection class="QReadWriteLock" function-name="stateForWaitCondition"/>
    <rejection class="QFactoryLoader" function-name="library"/>
    <rejection class="QByteArrayView" function-name="m_data"/>
    <rejection class="QBindingStorage" function-name="status"/>
    <rejection class="QString" function-name="rightRef"/>
    <rejection class="QString" function-name="leftRef"/>
    <rejection class="QString" function-name="midRef"/>
    <rejection class="QString" function-name="splitRef"/>
    <rejection class="QString" function-name="sprintf"/>
    <rejection class="QString" function-name="asprintf"/>
    <rejection class="QString" function-name="vasprintf"/>
    <rejection class="QString" function-name="fromStdU32String"/>
    <rejection class="QString" function-name="crend"/>
    <rejection class="QString" function-name="normalized"/>
    <rejection class="QString" function-name="fromStdU16String"/>
    <rejection class="QString" function-name="fromWCharArray"/>
    <rejection class="QString" function-name="fromStdWString"/>
    <rejection class="QString" function-name="tokenize"/>
    <rejection class="QString" function-name="crbegin"/>
    <rejection class="QString" function-name="rbegin"/>
    <rejection class="QString" function-name="fromStdString"/>
    <rejection class="QString" function-name="rend"/>
    <rejection class="QString" function-name="toWCharArray"/>
    <rejection class="QString" function-name="toUInt"/>
    <rejection class="QString" function-name="toUShort"/>
    <rejection class="QString" function-name="toULong"/>
    <rejection class="QString" function-name="toULongLong"/>
    <rejection class="QString" function-name="toLong"/>
    <rejection class="QString" function-name="push_back"/>
    <rejection class="QString" function-name="push_front"/>
    <rejection class="QList" function-name="empty"/>
    <rejection class="QList" function-name="front"/>
    <rejection class="QList" function-name="pop_back"/>
    <rejection class="QList" function-name="pop_front"/>
    <rejection class="QList" function-name="push_back"/>
    <rejection class="QList" function-name="push_front"/>
    <rejection class="QList" function-name="back"/>
    <rejection class="QList" function-name="shrink_to_fit"/>
    <rejection class="QQueue" function-name="empty"/>
    <rejection class="QQueue" function-name="front"/>
    <rejection class="QQueue" function-name="pop_back"/>
    <rejection class="QQueue" function-name="pop_front"/>
    <rejection class="QQueue" function-name="push_back"/>
    <rejection class="QQueue" function-name="push_front"/>
    <rejection class="QQueue" function-name="back"/>
    <rejection class="QQueue" function-name="shrink_to_fit"/>
    <rejection class="QJsonObject" function-name="empty"/>
    <rejection class="QJsonArray" function-name="empty"/>
    <rejection class="QJsonArray" function-name="pop_back"/>
    <rejection class="QJsonArray" function-name="pop_front"/>
    <rejection class="QJsonArray" function-name="push_back"/>
    <rejection class="QJsonArray" function-name="push_front"/>
    <rejection class="QCborArray" function-name="empty"/>
    <rejection class="QCborArray" function-name="pop_back"/>
    <rejection class="QCborArray" function-name="pop_front"/>
    <rejection class="QCborArray" function-name="push_back"/>
    <rejection class="QCborArray" function-name="push_front"/>
    <rejection class="QChar::SpecialCharacter"/>
    <rejection class="QSet::const_iterator"/>
    <rejection class="QSet" function-name="empty"/>
    <rejection class="QCborArray::Iterator"/>
    <rejection class="QCborMap::Iterator"/>
    <rejection class="QCborStreamReader::StringResult"/>
    <rejection class="QHash::iterator"/>
    <rejection class="QHash::key_iterator"/>
    <rejection class="QHash" function-name="empty"/>
    <rejection class="QLinkedList::iterator"/>
    <rejection class="QLinkedList" function-name="empty"/>
    <rejection class="QLinkedList" function-name="back"/>
    <rejection class="QLinkedList" function-name="front"/>
    <rejection class="QLinkedList" function-name="push_back"/>
    <rejection class="QLinkedList" function-name="push_front"/>
    <rejection class="QLinkedList" function-name="pop_back"/>
    <rejection class="QLinkedList" function-name="pop_front"/>
    <rejection class="QFutureInterfaceBase" function-name="resultStoreBase"/>
    <rejection class="QFutureInterfaceBase" function-name="reportException"/>
    <rejection class="QFutureInterfaceBase" function-name="exceptionStore"/>
    <rejection class="QList::iterator"/>
    <rejection class="QMap::iterator"/>
    <rejection class="QMap::key_iterator"/>
    <rejection class="QMap" function-name="empty"/>
    <rejection class="QSpecialInteger"/>
    <rejection class="QScopeGuard"/>
    <rejection class="QSysInfo" enum-name="Sizes"/>
    <rejection class="QSysInfo" enum-name="MacVersion"/>
    <rejection class="QSysInfo" enum-name="WinVersion"/>
    <rejection class="QListSpecialMethods"/>
    <rejection class="QLittleEndianStorageType"/>
    <rejection class="QMetaTypeIdQObject"/>
    <rejection class="QGenericAtomicOps"/>
    <rejection class="QVector::AlignmentDummy"/>
    <rejection class="QVector" function-name="back"/>
    <rejection class="QVector" function-name="empty"/>
    <rejection class="QVector" function-name="front"/>
    <rejection class="QVector" function-name="push_back"/>
    <rejection class="QVector" function-name="push_front"/>
    <rejection class="QVector" function-name="pop_back"/>
    <rejection class="QVector" function-name="pop_front"/>
    <rejection class="QVector" function-name="freeData"/>
    <rejection class="QVector" function-name="shrink_to_fit"/>
    <rejection class="QStack" function-name="back"/>
    <rejection class="QStack" function-name="empty"/>
    <rejection class="QStack" function-name="front"/>
    <rejection class="QStack" function-name="push_back"/>
    <rejection class="QStack" function-name="push_front"/>
    <rejection class="QStack" function-name="pop_back"/>
    <rejection class="QStack" function-name="pop_front"/>
    <rejection class="QStack" function-name="shrink_to_fit"/>
    <rejection class="QRegularExpressionMatchIterator" function-name="begin"/>
    <rejection class="QRegularExpressionMatchIterator" function-name="end"/>
    <rejection class="QUrlTwoFlags"/>
    <rejection class="QMetaType::Constructor"/>
    <rejection class="QMetaType::Creator"/>
    <rejection class="QMetaType::Deleter"/>
    <rejection class="QMetaType::Destructor"/>
    <rejection class="QMetaType::LoadOperator"/>
    <rejection class="QMetaType::SaveOperator"/>
    <rejection class="QMetaType::TypedConstructor"/>
    <rejection class="QMetaType::TypedDestructor"/>
    <rejection class="QMetaType::ConverterFunction"/>
    <rejection class="QMetaType::MutableViewFunction"/>
    <rejection class="QAbstractAnimationPrivate"/>
    <rejection class="QAbstractButtonPrivate"/>
    <rejection class="QAbstractEventDispatcherPrivate"/>
    <rejection class="*" function-name="d_func"/>
    <rejection class="*" function-name="data_ptr"/>
    <rejection class="QBasicMutex" function-name="try_lock"/>
    <rejection class="QBasicMutex" function-name="fastTryUnlock"/>
    <rejection class="QBasicMutex" function-name="fastTryLock"/>
    <rejection class="QBasicMutex" function-name="dummyLocked"/>
    <rejection class="QMutex" function-name="try_lock_for"/>
    <rejection class="QMutex" function-name="try_lock_until"/>
    <!--rejection class="QBitArray" function-name="detach"/>
    <rejection class="QBitArray" function-name="isDetached"/>
    <rejection class="QItemSelection" function-name="detach"/>
    <rejection class="QItemSelection" function-name="isDetached"/>
    <rejection class="QUrl" function-name="detach"/>
    <rejection class="QUrl" function-name="isDetached"/>
    <rejection class="QXmlStreamAttributes" function-name="detach"/>
    <rejection class="QXmlStreamAttributes" function-name="isDetached"/-->

    <rejection class="*" field-name="d_ptr"/>
    <rejection class="*" field-name="d"/>
    <rejection class="*" field-name="m_reserved"/>
    <rejection class="*" function-name="qt_getEnumMetaObject"/>
    <rejection class="*" function-name="qt_getEnumName"/>
    <rejection class="*" function-name="operator typename *"/>
    <rejection class="*" function-name="operator QVariant"/>
    <rejection class="*" function-name="operator_cast_QVariant"/>
    <rejection class="QVector" function-name="operator="/>
    <rejection class="QStack" function-name="operator="/>
    <rejection class="QMap" function-name="operator="/>
    <rejection class="QMap" function-name="operator[]"/>
    <rejection class="QHash" function-name="operator="/>
    <rejection class="QHash" function-name="operator[]"/>
    <rejection class="QHash" function-name="load_factor"/>
    <rejection class="QHash" function-name="max_load_factor"/>
    <rejection class="QHash" function-name="bucket_count"/>
    <rejection class="QHash" function-name="max_bucket_count"/>
    <rejection class="QMultiMap" function-name="constFind"/>
    <rejection class="QMultiMap" function-name="operator[]"/>
    <rejection class="QMultiHash" function-name="operator="/>
    <rejection class="QMultiHash" function-name="operator[]"/>
    <rejection class="QMultiHash" function-name="constFind"/>
    <rejection class="QMultiHash" function-name="load_factor"/>
    <rejection class="QMultiHash" function-name="max_load_factor"/>
    <rejection class="QMultiHash" function-name="bucket_count"/>
    <rejection class="QMultiHash" function-name="max_bucket_count"/>
    <rejection class="QMultiHash" function-name="equal_range"/>
    <rejection class="QDeadlineTimer" function-name="_q_data"/>

    <rejection class="Qt::QtMsgType"/>
    <rejection class="" enum-name="QtValidLicenseForTestModule"/>
    <rejection class="QTextCodecPlugin" function-name="create(const QString &amp;)"/>
    <rejection class="QTextCodecPlugin" function-name="keys()const"/>

    <rejection class="*" enum-name="__codecvt_result"/>
    <rejection class="*" enum-name="enum_1"/>
    <rejection class="*" enum-name="enum_2"/>
    <rejection class="*" enum-name="enum_3"/>
    <rejection class="*" enum-name="enum_4"/>
    <rejection class="*" enum-name="enum_5"/>
    <rejection class="*" enum-name="enum_6"/>

    <rejection class="" enum-name="QtValidLicenseForDBusModule"/>
    <rejection class="" enum-name="QtValidLicenseForSqlModule"/>
    <rejection class="" enum-name="QtValidLicenseForOpenGLModule"/>
    <rejection class="" enum-name="QtValidLicenseForXmlModule"/>
    <rejection class="" enum-name="QtValidLicenseForXmlPatternsModule"/>
    <rejection class="" enum-name="QtValidLicenseForActiveQtModule"/>
    <rejection class="" enum-name="QtValidLicenseForCoreModule"/>
    <rejection class="" enum-name="QtValidLicenseForQt3SupportLightModule"/>
    <rejection class="" enum-name="QtValidLicenseForQt3SupportModule"/>
    <rejection class="" enum-name="QtValidLicenseForNetworkModule"/>
    <rejection class="" enum-name="QtValidLicenseForSvgModule"/>
    <rejection class="" enum-name="QtValidLicenseForGuiModule"/>
    <rejection class="" enum-name="QtValidLicenseForScriptModule"/>
    <rejection class="" enum-name="QtValidLicenseForHelpModule"/>
    <rejection class="" enum-name="QtValidLicenseForScriptToolsModule" />
    <rejection class="" enum-name="QtValidLicenseForMultimediaModule" />
    <rejection class="" enum-name="QtValidLicenseForOpenVGModule" />
    <rejection class="" enum-name="QtValidLicenseForDeclarativeModule" />
    <rejection class="QVariantAnimation::Interpolator"/>
    <rejection class="QVariantAnimation" function-name="qRegisterAnimationInterpolator"/>
    <rejection class="*" function-name="qRegisterAnimationInterpolator"/>
    <rejection class="QLocalePrivate"/>
    <rejection class="QLocale" function-name="d"/>
    <rejection class="QVersionNumber" function-name="Q_STATIC_ASSERT"/>
    <rejection class="QRunnable" function-name="create"/>
    <rejection class="QProcess" function-name="setupChildProcess" since="6.0.0"/>
    <rejection class="QLoggingCategoryMacroHolder" since="6.3.0"/>
    <rejection class="QVLABase" since="6.3.0"/>
    <rejection class="QVLABaseBase" since="6.3.0"/>
    <rejection class="QVLAStorage" since="6.3.0"/>
    <rejection class="QtFuture::WhenAnyResult" since="6.3.0"/>

    <rejection class="Qt" enum-name="Modifier" />
    <rejection class="Qt::Modifiers" />
    
    <rejection class="QAssociativeIterable" />
    <rejection class="QEnableSharedFromThis" />
    <rejection class="QGenericArgument" />
    <rejection class="QGenericReturnArgument" />
    <rejection class="QSequentialIterable" />

<!--    <rejection class="QSharedPointer" />  -->
    <rejection class="QWeakPointer" />
    <rejection class="QMdi" />
    <rejection class="stdext" />
    <rejection class="QAlgorithmsPrivate"/>
    <rejection class="QAtomic"/>
    <rejection class="QAtomicInteger"/>
    <rejection class="QAtomicPointer"/>
    <rejection class="QAtomicInt" />
    <rejection class="QBasicAtomicInt" />
    <rejection class="QBasicAtomic"/>
    <rejection class="QBasicAtomicPointer"/>
    <rejection class="QScopedPointer"/>
    <rejection class="QScopedArrayPointer" />
    <rejection class="QScopedPointerObjectDeleteLater" />
    <rejection class="QScopedPointerArrayDeleter" />
    <rejection class="QScopedPointerDeleter" />
    <rejection class="QScopedPointerPodDeleter" />
    <rejection class="QScopedPointerSharedDeleter" />
    <rejection class="QScopedSharedPointer" />
    <rejection class="QScopedValueRollback" />
    <rejection class="QCustomScopedPointer" />
    <rejection class="QStringBuilder" />
    <rejection class="" enum-name="QCborNegativeInteger" />
    <rejection class="QProcess::CreateProcessArguments" />
    <rejection class="QOverload" />
    <rejection class="QNonConstOverload" />
    <rejection class="QConstOverload" />
    <rejection class="Null" />

    <rejection class="QAbstractConcatenable"/>
    <rejection class="QBitRef"/>
    <rejection class="QCache"/>
    <rejection class="QContiguousCache"/>
    <rejection class="QContiguousCacheData"/>
    <rejection class="QContiguousCacheTypedData"/>
    <rejection class="QCharRef"/>
    <rejection class="QNoDebug" />
    <rejection class="QExplicitlySharedDataPointer"/>
    <rejection class="QFlag"/>
    <rejection class="QFlags"/>
    <rejection class="QForeachContainer"/>
    <rejection class="QForeachContainerBase"/>
    <rejection class="QGlobalStatic"/>
    <rejection class="QHashData"/>
    <rejection class="QHashDummyNode"/>
    <rejection class="QHashDummyValue"/>
    <rejection class="QHashIterator"/>
    <rejection class="QHashNode"/>
    <rejection class="QInternal"/>
    <rejection class="QIncompatibleFlag" />
    <rejection class="QLinkedListData"/>
    <rejection class="QLinkedListIterator"/>
    <rejection class="QLinkedListNode"/>
    <rejection class="QListData"/>
    <rejection class="QListIterator"/>
    <rejection class="QMapNode" />
    <rejection class="QMapPayloadNode" />
    <rejection class="QMapData"/>
    <rejection class="QMapIterator"/>
    <rejection class="QMetaTypeId"/>
    <rejection class="QMetaClassInfo"/>
    <rejection class="QMutableHashIterator"/>
    <rejection class="QMutableLinkedListIterator"/>
    <rejection class="QMutableListIterator"/>
    <rejection class="QMutableMapIterator"/>
    <rejection class="QMutableVectorIterator"/>
    <rejection class="QMutexLocker"/>
    <rejection class="QNoImplicitBoolCast"/>
    <rejection class="QObjectData"/>
    <rejection class="QObject" field-name="staticQtMetaObject"/>
    <rejection class="QObjectUserData"/>
    <rejection class="QPointer"/>
    <rejection class="QReadLocker"/>
    <rejection class="QSetIterator"/>
    <rejection class="QSharedData"/>
    <rejection class="QSharedDataPointer"/>
    <rejection class="QTextStreamManipulator"/>
    <rejection class="QTextStreamFunction"/>
    <rejection class="QTSMFI"/>
    <rejection class="QTSMFC"/>
    <rejection class="QtCleanUpFunction"/>
    <rejection class="qInternalCallback"/>
    <rejection class="QtStartUpFunction"/>
    <rejection class="QtPluginInstanceFunction"/>
    <rejection class="QtPluginMetaDataFunction"/>
    <rejection class="QThreadStorageData"/>
    <rejection class="QTypeInfo"/>
    <rejection class="QTypeInfoQuery"/>
    <rejection class="QTypeInfoMerger"/>
    <rejection class="QTypeInfo" enum-name="enum_1"/>
    <rejection class="QTypeInfo" enum-name="enum_2"/>
    <rejection class="QTimeZone" enum-name="enum_1"/>
    <rejection class="QArrayData" enum-name="AllocationOption"/>
    <rejection class="QVFbKeyData"/>
    <rejection class="QVariantComparisonHelper"/>
    <rejection class="QVectorData"/>
    <rejection class="QVectorIterator"/>
    <rejection class="QVectorTypedData"/>
    <rejection class="QWriteLocker"/>
    <rejection class="qGreater"/>
    <rejection class="qLess"/>
    <rejection class="std"/>
    <rejection class="QByteArray::Data"/>
    <rejection class="QIntForType"/>
    <rejection class="QList::Node"/>
    <rejection class="QList::Data"/>
    <rejection class="QMetaTypeId2"/>
    <rejection class="QMutableSetIterator"/>
    <rejection class="QSubString"/>
    <rejection class="QUintForType"/>
    <rejection class="QByteArrayMatcher::Data" />
    <rejection class="QStringMatcher::Data" />

    <rejection class="StringBuilder" />
    <rejection class="QConcatenable" />
    <rejection class="QLatin1Literal" />
    <rejection class="QIntegerForSizeof" />


    <rejection class="QLocale::Data" />
    <rejection class="QGlobalStaticDeleter" />
    <rejection class="QVarLengthArray" />

    <rejection class="_Revbidit" />
    <rejection class="_complex" />
    <rejection class="_exception" />
    <rejection class="_iobuf" />
    <rejection class="_stat" />
    <rejection class="_wfinddata_t" />
    <rejection class="exception" />
    <rejection class="istreambuf_iterator" />
    <rejection class="ostreambuf_iterator" />
    <rejection class="reverse_bidirectional_iterator" />
    <rejection class="reverse_iterator" />
    <rejection class="stat" />
    <rejection class="tm" />
    <rejection class="_IO_FILE" />
    <rejection class="_IO_marker" />
    <rejection class="__exception" />
    <rejection class="drand48_data" />
    <rejection class="random_data" />
    <rejection class="timespec" />
    <rejection class="timeval" />
    <rejection class="QJsonPrivate::Data" />
    <rejection class="QJsonObject::iterator"/>
    <rejection class="QJsonArray::iterator" />
    <rejection class="QByteArrayDataPtr" />
    <rejection class="Data::AllocationOptions" />
    <rejection class="QJsonValuePtr" />
    <rejection class="QJsonValueRefPtr" />
    <rejection class="QMimeTypePrivate" />
    <rejection class="QAtomicOpsSupport" since="6.2.0"/>
    <rejection class="QCalendar::SystemId" since="6.2.0"/>
    <rejection class="QFuture::const_iterator"/>
    <rejection class="QNativeInterface::NativeInterface"/>
    <rejection class="QNativeInterface::has_type_info"/>

    <rejection class="Qt" enum-name="Initialization" />

    <rejection class="QFuture" function-name="unwrap"/>
    <rejection class="QFuture" function-name="then"/>
    <rejection class="QFuture" function-name="d"/>
    <rejection class="QHash" function-name="equal_range"/>
    <rejection class="QMap" function-name="equal_range"/>
    <rejection class="QAbstractEventDispatcher" function-name="filterEvent"/>
    <rejection class="QAbstractEventDispatcher" function-name="filterNativeEvent"/>
    <rejection class="QAbstractEventDispatcher" function-name="setEventFilter"/>

    <rejection class="QCoreApplication" function-name="compressEvent"/>
    <rejection class="QCoreApplication" function-name="eventFilter"/>
    <rejection class="QCoreApplication" function-name="filterEvent"/>
    <rejection class="QCoreApplication" function-name="filterNativeEvent"/>
    <rejection class="QCoreApplication" function-name="setEventFilter"/>
    <rejection class="QCoreApplication" function-name="nativeInterface" since="6.2.0"/>
    <rejection class="QCoreApplication" enum-name="enum_1"/><!-- since 4.8 -->
    <rejection class="QRandomGenerator" function-name="bounded"/>
    <rejection class="QFile" function-name="setDecodingFunction"/>
    <rejection class="QFile" function-name="setEncodingFunction"/>
    <rejection class="QObject" function-name="findChild"/>
    <rejection class="QObject" function-name="findChildren"/>
    <rejection class="QObject" function-name="setUserData"/>
    <rejection class="QObject" function-name="userData"/>
    <rejection class="QObject" function-name="connect"/>
    <rejection class="QObject" function-name="disconnect"/>
    <rejection class="QObject" function-name="registerUserData"/>
    <rejection class="QObject" function-name="connectImpl"/>
    <rejection class="QObject" function-name="connect_functor"/>
    <rejection class="QObject" function-name="disconnectImpl"/>
    <rejection class="QTimer" function-name="singleShot"/>
    <rejection class="QProcess" function-name="pid"/>
    <rejection class="QProcess" function-name="childProcessModifier" since="6.0.0"/>
    <rejection class="QProcess" function-name="setChildProcessModifier" since="6.0.0"/>
    <rejection class="QProcess" function-name="createProcessArgumentsModifier" since="6.0.0"/>
    <rejection class="QProcess" function-name="setCreateProcessArgumentsModifier" since="6.0.0"/>
    <rejection class="QProcess" function-name="nativeArguments" since="6.0.0"/>
    <rejection class="QProcess" function-name="setNativeArguments" since="6.0.0"/>
    <rejection class="QProcess::CreateProcessArguments" since="6.0.0"/>
    <rejection class="QEvent::PointerEventTag" since="6.0.0"/>
    <rejection class="QEvent::InputEventTag" since="6.0.0"/>
    <rejection class="QEvent::SinglePointEventTag" since="6.0.0"/>
    <rejection class="QNativeInterface::Private::NativeInterface" since="6.0.0"/>
    <rejection class="QNativeInterface::Private::TypeInfo" since="6.0.0"/>
    <rejection class="QNativeInterface::Private::has_type_info" since="6.0.0"/>
    <rejection class="QNativeInterface::QAndroidApplication::TypeInfo" since="6.0.0"/>
    <rejection class="QMetaType" function-name="registerConverterFunction" since="6.0.0"/>
    <rejection class="QMetaType" function-name="unregisterConverterFunction" since="6.0.0"/>
    <rejection class="QMetaType" function-name="registerMutableViewFunction" since="6.0.0"/>
    <rejection class="QMetaType" function-name="unregisterMutableViewFunction" since="6.0.0"/>
    <rejection class="QMetaType" function-name="view" since="6.0.0"/>
    <rejection class="QMetaType" function-name="iface" since="6.0.0"/>
    <rejection class="QMetaType" function-name="hasRegisteredDebugStreamOperator"/>
    <rejection class="QMetaType" function-name="debugStream"/>
    <rejection class="QPluginParsedMetaData" function-name="parse" since="6.3.0"/>
    <rejection class="QPluginParsedMetaData" function-name="value" since="6.3.0"/>
    <rejection class="QFutureInterfaceBase" function-name="get" since="6.3.0"/>
    <rejection class="QByteArrayView" function-name="back"/>
    <rejection class="QByteArrayView" function-name="front"/>
    <rejection class="QByteArrayView" function-name="rbegin"/>
    <rejection class="QByteArrayView" function-name="rend"/>
    <rejection class="QByteArrayView" function-name="cend"/>
    <rejection class="QByteArrayView" function-name="cbegin"/>
    <rejection class="QByteArrayView" function-name="crend"/>
    <rejection class="QByteArrayView" function-name="crbegin"/>
    <rejection class="QByteArrayView" function-name="empty"/>
    <rejection class="QByteArray" function-name="back"/>
    <rejection class="QByteArray" function-name="front"/>
    <rejection class="QByteArray" function-name="rbegin"/>
    <rejection class="QByteArray" function-name="rend"/>
    <rejection class="QByteArray" function-name="cend"/>
    <rejection class="QByteArray" function-name="cbegin"/>
    <rejection class="QByteArray" function-name="crend"/>
    <rejection class="QByteArray" function-name="crbegin"/>
    <rejection class="QByteArray" function-name="empty"/>
    <rejection class="QByteArray" function-name="erase"/>
    <rejection class="QByteArray" function-name="fromStdString"/>
    <rejection class="QByteArray" function-name="reallocData"/>
    <rejection class="QByteArray" function-name="reallocGrowData"/>
    <rejection class="QAbstractEventDispatcher" function-name="installNativeEventFilter"/>
    <rejection class="QAbstractEventDispatcher" function-name="removeNativeEventFilter"/>
    <rejection class="QCborContainerPrivate"/>
    <rejection class="QAbstractFileEnginePrivate"/>
    <rejection class="QException"/>
    <rejection class="QUnhandledException"/>
    <rejection class="QMessageLogger"/>
    <rejection class="QAbstractNativeEventFilter"/>
    <rejection class="QJsonArray" function-name="operator[]"/>
    <rejection class="Qt" function-name="codecForHtml"/>
    <rejection class="Qt" function-name="mightBeRichText"/>
    <rejection class="Qt" function-name="escape"/>
    <rejection class="Qt" function-name="convertFromPlainText"/>
    <rejection class="Qt" function-name="makePropertyBinding"/>
    <rejection class="Qt" enum-name="Modifiers"/>
    <rejection class="QFSFileEnginePrivate"/>
    <!--rejection class="QFileDevice" function-name="map"/>
    <rejection class="QFileDevice" function-name="unmap"/>
    <rejection class="QFileDevice" enum-name="MemoryMapFlags"/-->
    <rejection class="QAbstractFileEngine" function-name="extension"/>
    <rejection class="QAbstractFileEngine" function-name="supportsExtension"/>
    <rejection class="QFSFileEngine" function-name="extension"/>
    <rejection class="QFSFileEngine" function-name="supportsExtension"/>
    <!--rejection class="QAbstractFileEngine" function-name="map"/>
    <rejection class="QAbstractFileEngine" function-name="unmap"/-->
    <rejection class="QAbstractFileEngine" enum-name="Extension"/>
    <rejection class="QAbstractFileEngine::ExtensionOption"/>
    <rejection class="QAbstractFileEngine::ExtensionReturn"/>
    <rejection class="QAbstractFileEngine::MapExtensionOption"/>
    <rejection class="QAbstractFileEngine::MapExtensionReturn"/>
    <rejection class="QAbstractFileEngine::UnMapExtensionOption"/>
    <rejection class="QSharedPointer" function-name="*"/>
    <rejection class="QWeakPointer" function-name="*"/>
    <rejection class="QModelRoleData" function-name="setData"/>
    <rejection class="QAtomicOps"/>
    <rejection class="QAtomicTraits"/>
    <rejection class="QtJambiNativeID"/>
    <rejection class="QFutureIterator"/>

    <!--
        These rejections are something hidden in Qt sources;
        for time saving their origins have not been searched,
        so just rejected here.
    -->
    <rejection class="QAudioEngineFactoryInterface"/>
    <rejection class="QAudioEnginePlugin"/>
    <rejection class="QHelpGlobal"/>
    <rejection class="QCommandLineParser" function-name="tr"/>
    <rejection class="QCommandLineParser" function-name="trUtf8"/>
    <rejection class="QWinEventNotifier" />
    <rejection class="QModelRoleDataSpan" />
    <rejection class="QTypeRevision" />
    <rejection class="QAdoptSharedDataTag"/>
    <rejection class="QAssociativeConstIterator"/>
    <rejection class="QAssociativeIterator"/>
    <rejection class="QBaseIterator"/>
    <rejection class="QBasicUtf8StringView"/>
    <rejection class="QBindingStatus"/>
    <rejection class="QConstIterator"/>
    <rejection class="QIterable"/>
    <rejection class="QIterator"/>
    <rejection class="QListSpecialMethodsBase"/>
    <rejection class="QMetaAssociation"/>
    <rejection class="QMetaContainer"/>
    <rejection class="QMetaSequence"/>
    <rejection class="QModelRoleData"/>
    <rejection class="QMultiHash::iterator"/>
    <rejection class="QMultiHash::key_iterator"/>
    <rejection class="QMultiHashIterator"/>
    <rejection class="QMultiMap::iterator"/>
    <rejection class="QMultiMap::key_iterator"/>
    <rejection class="QMultiMapIterator"/>
    <rejection class="QMutableMultiHashIterator"/>
    <rejection class="QMutableMultiMapIterator"/>
    <rejection class="TypeInfo"/>
    <rejection class="QPropertyProxyBindingData"/>
    <rejection class="QObjectBindableProperty"/>
    <rejection class="QObjectComputedProperty"/>
    <rejection class="QPluginMetaData"/>
    <rejection class="QProperty"/>
    <rejection class="QPropertyAlias"/>
    <rejection class="QPropertyBindingPrivatePtr"/>
    <rejection class="QPropertyChangeHandler"/>
    <rejection class="QPropertyNotifier"/>
    <rejection class="QPropertyData"/>
    <rejection class="QSequentialConstIterator"/>
    <rejection class="QSequentialIterator"/>
    <rejection class="QStringDecoder"/>
    <rejection class="QStringEncoder"/>
    <rejection class="QStringTokenizer"/>
    <rejection class="QStringTokenizerBase"/>
    <rejection class="QStringTokenizerBaseBase"/>
    <rejection class="QTaggedIterator"/>
    <rejection class="QTaggedPointer"/>
    <rejection class="QVariantConstPointer" />
    <rejection class="QVariantPointer" />
    <rejection class="QVariantRef" />
    
    <namespace-type name="Qt">
        <extra-includes>
            <include file-name="QtCore/QProperty" location="global" since="6.0.0"/>
        </extra-includes>
    <!-- no longer required in Qt5 -->
        <!--modify-function signature="codecForHtml(const QByteArray &amp;)" remove="all" />
        <modify-function signature="mightBeRichText(const QString &amp;)" remove="all" />
        <modify-function signature="escape(const QString&amp;)" remove="all" />
        <modify-function signature="convertFromPlainText(const QString &amp;, Qt::WhiteSpaceMode)" remove="all" /-->
    </namespace-type>
    <namespace-type name="QtPrivate" generate="no"/>

    <enum-type name="PropertyFlags" flags="PropertyAttributes" package="io.qt.internal"/>
    <enum-type name="MethodFlags" flags="MethodAttributes" package="io.qt.internal">
        <reject-enum-value name="MethodMethod" />
        <reject-enum-value name="MethodTypeMask" />
    </enum-type>
    <enum-type name="EnumFlags" flags="EnumAttributes" package="io.qt.internal"/>
    <enum-type name="MetaObjectFlags" flags="MetaObjectAttributes" package="io.qt.internal" until="5.*"/>
    <enum-type name="MetaObjectFlag" flags="MetaObjectFlags" package="io.qt.internal" since="6.0.0"/>
    <enum-type name="MetaDataFlags" flags="MetaDataAttributes" package="io.qt.internal"/>
    <enum-type name="QDate::MonthNameType" />
    <enum-type name="QAbstractAnimation::State" />
    <enum-type name="QAbstractAnimation::DeletionPolicy" />
    <enum-type name="QAbstractAnimation::Direction" />
    <enum-type name="QDataStream::FloatingPointPrecision" />
    <enum-type name="QDataStream::ByteOrder" />
    <enum-type name="QEasingCurve::Type" />
    <enum-type name="QHistoryState::HistoryType" until="5.*"/>
    <enum-type name="QState::ChildMode" until="5.*"/>
    <enum-type name="QState::RestorePolicy" until="5.*"/>
    <enum-type name="QStateMachine::Error" until="5.*"/>
    <enum-type name="QStateMachine::EventPriority" until="5.*"/>
    <!--enum-type name="QStateMachine::RestorePolicy" /-->
    <enum-type name="Qt::InputMethodQuery" flags="Qt::InputMethodQueries">
        <reject-enum-value name="ImMicroFocus" />
    </enum-type>
    <enum-type name="Qt::AnchorPoint" />
    <enum-type name="Qt::CoordinateSystem" />
    <enum-type name="Qt::CursorMoveStyle" /><!-- since 4.8 -->
    <enum-type name="Qt::GestureState" />
    <enum-type name="Qt::InputMethodHint" flags="Qt::InputMethodHints" />
    <enum-type name="Qt::NavigationMode" />
    <!--   <enum-type name="Qt::RenderHint" /> -->
    <enum-type name="Qt::TileRule" />
    <enum-type name="Qt::TimerType" />
    <enum-type name="Qt::EnterKeyType" />
    <enum-type name="Qt::ChecksumType" since="5.9.0" />
    <enum-type name="Qt::HighDpiScaleFactorRoundingPolicy" since="5.14.0" />
    <enum-type name="Qt::TouchPointState" flags="Qt::TouchPointStates" />
    <enum-type name="Qt::ApplicationState" flags="Qt::ApplicationStates" />
    <enum-type name="Qt::FindChildOption" flags="Qt::FindChildOptions" />
    <enum-type name="Qt::ScreenOrientation" flags="Qt::ScreenOrientations" />
    <enum-type name="QtMsgType">
        <reject-enum-value name="QtSystemMsg" />
    </enum-type>
    <enum-type name="QtPluginMetaDataKeys" package="io.qt.core.internal" since="6.3.0"/>
    <enum-type name="QTextBoundaryFinder::BoundaryReason" flags="QTextBoundaryFinder::BoundaryReasons" />
    <enum-type name="QTextBoundaryFinder::BoundaryType" />
    <enum-type name="QDataStream::Status"/>
    <enum-type name="QDir::Filter" flags="QDir::Filters"/>
    <enum-type name="QEvent::Type" extensible="yes">
        <reject-enum-value name="ApplicationActivated"/>
        <reject-enum-value name="ApplicationDeactivated"/>
        <rename-enum-value name="DeferredDelete" rename="DeferredDispose"/>
    </enum-type>
    <enum-type name="QEventLoop::ProcessEventsFlag" flags="QEventLoop::ProcessEventsFlags"/>
    <enum-type name="QIODevice::OpenModeFlag" flags="QIODevice::OpenMode" until="5.*"/>
    <enum-type name="QIODeviceBase::OpenModeFlag" flags="QIODeviceBase::OpenMode" since="6.0.0"/>
    <enum-type name="QLibraryInfo::LibraryLocation" until="5.*"/>
    <enum-type name="QLibraryInfo::LibraryPath" since="6.0.0">
        <reject-enum-value name="Qml2ImportsPath" since="6.2.0"/>
    </enum-type>
    <enum-type name="QLocale::CurrencySymbolFormat"/><!-- since 4.8 -->
    <enum-type name="QLocale::FormatType"/>
    <enum-type name="QLocale::NumberOption" flags="QLocale::NumberOptions"/>
    <enum-type name="QLocale::MeasurementSystem">
        <reject-enum-value name="ImperialSystem"/>
    </enum-type>
    <enum-type name="QLocale::DataSizeFormat" flags="QLocale::DataSizeFormats" since="5.10.0">
        <reject-enum-value name="DataSizeTraditionalFormat"/>
    </enum-type>
    <enum-type name="QLocale::LanguageCodeType" flags="QLocale::LanguageCodeTypes" since="6.3.0">
        <reject-enum-value name="ISO639Alpha2"/>
    </enum-type>
    <enum-type name="QUrl::AceProcessingOption" flags="QUrl::AceProcessingOptions" since="6.3.0" />
    <enum-type name="QFutureInterfaceBase::CancelMode" since="6.3.0" />
    <enum-type name="QProcessEnvironment::Initialization" since="6.3.0" />
    <enum-type name="QLocale::QuotationStyle" /><!-- since 4.8 -->
    <enum-type name="QLocale::FloatingPointPrecisionOption" since="5.7.0" />
    <enum-type name="QCommandLineOption::Flag" flags="QCommandLineOption::Flags" since="5.8.0" />
    <enum-type name="QProcess::ExitStatus"/>
    <enum-type name="QProcess::ProcessChannel"/>
    <enum-type name="QProcess::ProcessChannelMode"/>
    <enum-type name="QProcess::ProcessError"/>
    <enum-type name="QProcess::ProcessState"/>
    <enum-type name="QProcess::InputChannelMode"/>
    <enum-type name="QCommandLineParser::SingleDashWordOptionMode"/>
    <enum-type name="QCommandLineParser::OptionsAfterPositionalArgumentsMode"/>
    <enum-type name="QRegExp::CaretMode" until="5.*"/>
    <enum-type name="QRegExp::PatternSyntax" until="5.*"/>
    <enum-type name="QSettings::Format"/>
    <enum-type name="QSettings::Scope"/>
    <enum-type name="QSettings::Status"/>
    <enum-type name="QSocketNotifier::Type"/>
    <enum-type name="QTextCodec::ConversionFlag" flags="QTextCodec::ConversionFlags" until="5.16"/>
    <enum-type name="QStringConverterBase::Flag" flags="QStringConverterBase::Flags" since="6.0.0"/>
    <enum-type name="QTextStream::FieldAlignment"/>
    <enum-type name="QTextStream::NumberFlag" flags="QTextStream::NumberFlags"/>
    <enum-type name="QTextStream::RealNumberNotation"/>
    <enum-type name="QTextStream::Status"/>
    <enum-type name="QTimeLine::CurveShape"/>
    <enum-type name="QTimeLine::Direction"/>
    <enum-type name="QTimeLine::State"/>
    <enum-type name="QUrl::UserInputResolutionOption" flags="QUrl::UserInputResolutionOptions">
    </enum-type>
    <enum-type name="QUrl::UrlFormattingOption" implements="FormattingOption">
    </enum-type>
    <enum-type name="QUrl::ComponentFormattingOption" implements="FormattingOption" flags="QUrl::ComponentFormattingOptions">
    </enum-type>
    <enum-type name="QUrl::ParsingMode"/>
    <enum-type name="QUuid::Variant"/>
    <enum-type name="QUuid::Version">
        <reject-enum-value name="Name"/>
    </enum-type>
    <enum-type name="Qt::SizeHint" />
    <enum-type name="Qt::SizeMode" />
    <enum-type name="Qt::WindowFrameSection" />
    <enum-type name="Qt::Axis"/>
    <enum-type name="Qt::ApplicationAttribute">
        <reject-enum-value name="AA_MacPluginApplication" since="5.7.0"/>
    </enum-type>
    <enum-type name="Qt::ArrowType"/>
    <enum-type name="Qt::AspectRatioMode"/>
    <enum-type name="Qt::BGMode"/>
    <enum-type name="Qt::BrushStyle"/>
    <enum-type name="Qt::CaseSensitivity"/>
    <enum-type name="Qt::CheckState"/>
    <enum-type name="Qt::ClipOperation"/>
    <enum-type name="Qt::ConnectionType">
    </enum-type>
    <enum-type name="Qt::ContextMenuPolicy"/>
    <enum-type name="Qt::Corner"/>
    <enum-type name="Qt::DayOfWeek"/>
    <enum-type name="Qt::DockWidgetAreaSizes"/>
    <enum-type name="Qt::DropAction" flags="Qt::DropActions"/>
    <enum-type name="Qt::FillRule"/>
    <enum-type name="Qt::FocusPolicy"/>
    <enum-type name="Qt::FocusReason"/>
    <enum-type name="Qt::GlobalColor"/>
    <enum-type name="Qt::HitTestAccuracy"/>
    <enum-type name="Qt::ItemFlag" flags="Qt::ItemFlags">
        <reject-enum-value name="ItemIsTristate"/>
    </enum-type>
    <enum-type name="Qt::ItemSelectionMode"/>
    <enum-type name="Qt::KeyboardModifier" flags="Qt::KeyboardModifiers"/>
    <enum-type name="Qt::LayoutDirection"/>
    <enum-type name="Qt::MatchFlag" flags="Qt::MatchFlags">
        <reject-enum-value name="MatchRegExp" since="6.0.0"/>
    </enum-type>
    <enum-type name="Qt::Orientation" flags="Qt::Orientations"/>
    <enum-type name="Qt::PenCapStyle"/>
    <enum-type name="Qt::PenJoinStyle"/>
    <enum-type name="Qt::PenStyle"/>
    <enum-type name="Qt::ScrollBarPolicy"/>
    <enum-type name="Qt::ShortcutContext"/>
    <enum-type name="Qt::SortOrder"/>
    <enum-type name="Qt::TextElideMode"/>
    <enum-type name="Qt::TextFlag"/>
    <enum-type name="Qt::TextFormat"/>
    <enum-type name="Qt::TextInteractionFlag" flags="Qt::TextInteractionFlags"/>
    <enum-type name="Qt::TimeSpec"/>
    <enum-type name="Qt::ToolBarAreaSizes"/>
    <enum-type name="Qt::ToolButtonStyle"/>
    <enum-type name="Qt::TransformationMode"/>
    <enum-type name="Qt::UIEffect"/>
    <enum-type name="Qt::WhiteSpaceMode"/>
    <enum-type name="Qt::WindowModality"/>
    <enum-type name="Qt::GestureType"/>
    <enum-type name="Qt::NativeGestureType">
    </enum-type>
    <enum-type name="Qt::GestureFlag" flags="Qt::GestureFlags"/>
    <enum-type name="Qt::MouseEventFlag" flags="Qt::MouseEventFlags"/>
    <enum-type name="Qt::MouseEventSource"/>
    <enum-type name="Qt::WindowState" flags="Qt::WindowStates"/>
    <enum-type name="Qt::WindowType" flags="Qt::WindowFlags">
        <reject-enum-value name="X11BypassWindowManagerHint"/>
        <reject-enum-value name="WindowOkButtonHint"/>
        <reject-enum-value name="WindowCancelButtonHint"/>
   </enum-type>
    <enum-type name="QDirIterator::IteratorFlag" flags="QDirIterator::IteratorFlags"/>
    <enum-type name="Qt::EventPriority"/>
    <enum-type name="Qt::MaskMode"/>
    <enum-type name="QCryptographicHash::Algorithm">
        <reject-enum-value name="RealSha3_224"/>
        <reject-enum-value name="RealSha3_256"/>
        <reject-enum-value name="RealSha3_384"/>
        <reject-enum-value name="RealSha3_512"/>
    </enum-type>
    <enum-type name="QStandardPaths::LocateOption" flags="QStandardPaths::LocateOptions"/>
    <enum-type name="QStandardPaths::StandardLocation">
        <reject-enum-value name="DataLocation"/>
    </enum-type>
    
    <enum-type name="Qt::AlignmentFlag" flags="Qt::Alignment">
        <reject-enum-value name="AlignLeading"/>
        <reject-enum-value name="AlignTrailing"/>
    </enum-type>

    <enum-type name="Qt::CursorShape">
        <reject-enum-value name="LastCursor"/>
    </enum-type>

    <enum-type name="Qt::DateFormat">
        <reject-enum-value name="LocalDate"/>
    </enum-type>

    <enum-type name="Qt::ItemSelectionOperation"/>
    <enum-type name="Qt::TabFocusBehavior"/>
    <enum-type name="Qt::Edge" flags="Qt::Edges"/>
    <enum-type name="Qt::ScrollPhase"/>

    <enum-type name="Qt::ItemDataRole" force-integer="yes">
        <reject-enum-value name="BackgroundColorRole"/>
        <reject-enum-value name="TextColorRole"/>
    </enum-type>

    <enum-type name="Qt::MouseButton" flags="Qt::MouseButtons">
        <reject-enum-value name="MiddleButton" until="5.*"/>
        <reject-enum-value name="XButton1"/>
        <reject-enum-value name="BackButton"/>
        <reject-enum-value name="ForwardButton"/>
        <reject-enum-value name="XButton2"/>
        <reject-enum-value name="TaskButton"/>
        <reject-enum-value name="MaxMouseButton"/>
    </enum-type>

    <enum-type name="QDataStream::Version">
        <reject-enum-value name="Qt_4_1"/><!-- duplicate enum same as Qt_4_0 -->
        <reject-enum-value name="Qt_4_7"/><!-- duplicate enum same as Qt_4_6 -->
        <reject-enum-value name="Qt_4_8"/><!-- duplicate enum same as Qt_4_6 -->
        <reject-enum-value name="Qt_4_9"/><!-- duplicate enum same as Qt_4_6 -->
        <reject-enum-value name="Qt_5_3"/><!-- duplicate enum same as Qt_5_2 -->
        <reject-enum-value name="Qt_5_5"/><!-- duplicate enum same as Qt_5_4 -->
        <reject-enum-value name="Qt_5_7" since="5.7.0"/><!-- duplicate enum same as Qt_5_6 -->
        <reject-enum-value name="Qt_5_8" since="5.8.0"/>
        <reject-enum-value name="Qt_5_9" since="5.9.0"/>
        <reject-enum-value name="Qt_5_10" since="5.10.0"/>
        <reject-enum-value name="Qt_5_11" since="5.11.0"/>
        <reject-enum-value name="Qt_5_14" since="5.14.0"/>
        <reject-enum-value name="Qt_5_15" since="5.15.0"/>
        <reject-enum-value name="Qt_6_1" since="6.1.0"/>
        <reject-enum-value name="Qt_6_2" since="6.2.0"/>
        <reject-enum-value name="Qt_6_3" since="6.3.0"/>
        <reject-enum-value name="Qt_6_4" since="6.4.0"/>
        <reject-enum-value name="Qt_DefaultCompiledVersion"/>
    </enum-type>

    <enum-type name="QDir::SortFlag" flags="QDir::SortFlags">
        <reject-enum-value name="Unsorted"/>
    </enum-type>

    <enum-type name="Qt::DockWidgetArea" flags="Qt::DockWidgetAreas">
        <reject-enum-value name="AllDockWidgetAreas"/>
    </enum-type>

    <enum-type name="Qt::ImageConversionFlag" flags="Qt::ImageConversionFlags">
        <reject-enum-value name="AutoDither"/>
        <reject-enum-value name="ColorOnly"/>
        <reject-enum-value name="DiffuseDither"/>
        <reject-enum-value name="NoAlpha"/>
        <reject-enum-value name="ThresholdAlphaDither"/>
    </enum-type>

    <enum-type name="Qt::Key">
        <reject-enum-value name="Key_Any"/>
    </enum-type>

    <enum-type name="QLocale::Language">
        <reject-enum-value name="Afan"/>
        <reject-enum-value name="Bengali" since="6.0.0"/>
        <reject-enum-value name="Bhutani"/>
        <reject-enum-value name="Byelorussian"/>
        <reject-enum-value name="Cambodian"/>
        <reject-enum-value name="CentralMoroccoTamazight" since="6.0.0"/>
        <reject-enum-value name="Chewa"/>
        <reject-enum-value name="Frisian"/>
        <reject-enum-value name="Greenlandic" since="6.0.0"/>
        <reject-enum-value name="Inupiak" since="6.0.0"/>
        <reject-enum-value name="Kirghiz" since="6.0.0"/>
        <reject-enum-value name="Kwanyama" since="6.0.0"/>
        <reject-enum-value name="Navaho" since="6.0.0"/>
        <reject-enum-value name="Oriya" since="6.0.0"/>
        <reject-enum-value name="Uighur" since="6.0.0"/>
        <reject-enum-value name="Walamo" since="6.0.0"/>
        <reject-enum-value name="Kurundi"/>
        <reject-enum-value name="Moldavian"/>
        <reject-enum-value name="Norwegian"/>
        <reject-enum-value name="RhaetoRomance"/>
        <reject-enum-value name="SerboCroatian"/>
        <reject-enum-value name="Tagalog"/>
        <reject-enum-value name="Twi"/>
        <reject-enum-value name="Uigur"/>
        <reject-enum-value name="LastLanguage"/>
    </enum-type>

    <enum-type name="QLocale::Country">
        <reject-enum-value name="DemocraticRepublicOfCongo"/>
        <reject-enum-value name="PeoplesRepublicOfCongo"/>
        <reject-enum-value name="DemocraticRepublicOfKorea"/>
        <reject-enum-value name="RepublicOfKorea"/>
        <reject-enum-value name="RussianFederation"/>
        <reject-enum-value name="SyrianArabRepublic"/>
        <reject-enum-value name="Tokelau" since="5.7.0"/>
        <reject-enum-value name="Tuvalu" since="5.7.0"/>
        <reject-enum-value name="LastCountry"/>
        <reject-enum-value name="LatinAmericaAndTheCaribbean"/>
        <reject-enum-value name="Bonaire" since="6.0.0"/>
        <reject-enum-value name="BosniaAndHerzegowina" since="6.0.0"/>
        <reject-enum-value name="CuraSao" since="6.0.0"/>
        <reject-enum-value name="CzechRepublic" since="6.0.0"/>
        <reject-enum-value name="EastTimor" since="6.0.0"/>
        <reject-enum-value name="Macau" since="6.0.0"/>
        <reject-enum-value name="SaintVincentAndTheGrenadines" since="6.0.0"/>
        <reject-enum-value name="SouthGeorgiaAndTheSouthSandwichIslands" since="6.0.0"/>
        <reject-enum-value name="SvalbardAndJanMayenIslands" since="6.0.0"/>
        <reject-enum-value name="UnitedStatesMinorOutlyingIslands" since="6.0.0"/>
        <reject-enum-value name="VaticanCityState" since="6.0.0"/>
        <reject-enum-value name="WallisAndFutunaIslands" since="6.0.0"/>
        <reject-enum-value name="Swaziland" since="6.0.0"/>
        <reject-enum-value name="AnyTerritory" since="6.2.0"/>
        <reject-enum-value name="NauruTerritory" since="6.2.0"/>
        <reject-enum-value name="TokelauTerritory" since="6.2.0"/>
        <reject-enum-value name="TuvaluTerritory" since="6.2.0"/>
        <reject-enum-value name="LastTerritory" since="6.2.0"/>
    </enum-type>

    <enum-type name="QLocale::Script"><!-- since 4.8 -->
        <reject-enum-value name="SimplifiedChineseScript"/><!-- same as SimplifiedChineseScript -->
        <reject-enum-value name="TraditionalChineseScript"/><!-- same as TraditionalChineseScript -->
        <reject-enum-value name="LastScript"/><!-- pseudo end value -->
        <reject-enum-value name="BengaliScript" since="6.0.0"/>
        <reject-enum-value name="MendeKikakuiScript" since="6.0.0"/>
        <reject-enum-value name="OriyaScript" since="6.0.0"/>
    </enum-type>

    <enum-type name="Qt::ToolBarArea" flags="Qt::ToolBarAreas">
        <reject-enum-value name="AllToolBarAreas"/>
    </enum-type>

    <enum-type name="Qt::WidgetAttribute">
        <reject-enum-value name="WA_ForceAcceptDrops"/>
        <reject-enum-value name="WA_NoBackground"/>
        <reject-enum-value name="WA_MacMetalStyle"/>
    </enum-type>

    <enum-type name="QElapsedTimer::ClockType"/>
    <enum-type name="QXmlStreamReader::Error" />
    <enum-type name="QXmlStreamReader::TokenType" />
    <enum-type name="QXmlStreamReader::ReadElementTextBehaviour" />

    <enum-type name="QFileDevice::FileError"/>
    <enum-type name="QFileDevice::FileTime" since="5.10.0"/>
    <enum-type name="QFileDevice::FileHandleFlag" flags="QFileDevice::FileHandleFlags"/>
    <enum-type name="QFileDevice::Permission" flags="QFileDevice::Permissions"/>
    <enum-type name="QFileDevice::MemoryMapFlags" until="5.*"/>
    <enum-type name="QFileDevice::MemoryMapFlag" flags="QFileDevice::MemoryMapFlags" since="6.0.0"/>
    <enum-type name="QJsonDocument::DataValidation" until="5.*"/>
    <enum-type name="QJsonDocument::JsonFormat"/>
    <enum-type name="QJsonParseError::ParseError"/>
    <enum-type name="QJsonValue::Type"/>
    <enum-type name="QMimeDatabase::MatchMode"/>
    <enum-type name="QRegularExpression::MatchOption" flags="QRegularExpression::MatchOptions">
        <reject-enum-value name="AnchoredMatchOption" since="6.0.0"/>
    </enum-type>
    <enum-type name="QRegularExpression::MatchType"/>
    <enum-type name="QRegularExpression::PatternOption" flags="QRegularExpression::PatternOptions"/>
    <enum-type name="QAbstractItemModel::LayoutChangeHint"/>
    <enum-type name="QAbstractItemModel::CheckIndexOption" flags="QAbstractItemModel::CheckIndexOptions"/>
    <enum-type name="QUuid::StringFormat"/>
    <enum-type name="QLineF::IntersectType" until="5.*"/>
    <enum-type name="QLineF::IntersectionType" since="6.0.0"/>
    <enum-type name="QByteArray::Base64Option" flags="QByteArray::Base64Options">
        <reject-enum-value name="KeepTrailingEquals"/>
        <reject-enum-value name="IgnoreBase64DecodingErrors"/>
    </enum-type>
    <enum-type name="QByteArray::Base64DecodingStatus">
    </enum-type>
    <enum-type name="QTimeZone::TimeType"/>
    <enum-type name="QTimeZone::NameType"/>
    
    <enum-type name="QSysInfo::Endian">
        <reject-enum-value name="ByteOrder"/>
    </enum-type>
    <enum-type name="Qt::ReturnByValueConstant" since="5.15.0" generate="no"/>
    <namespace-type name="QSysInfo"/>
    
    <value-type name="QVectorSpecialMethods" generate="no"/>
    <value-type name="QLine"/>
    <value-type name="QLineF"/>

    <value-type name="QElapsedTimer" />
    <value-type name="QProcessEnvironment">
        <modify-function signature="operator=(const QProcessEnvironment&amp;)" remove="all"/>
    </value-type>
    <object-type name="QBasicTimer">
        <modify-function signature="operator=(const QBasicTimer&amp;)" remove="all"/>
        <!--modify-function signature="QBasicTimer(const QBasicTimer&amp;)" remove="all"/-->
    </object-type>
    <value-type name="QByteArrayMatcher">
        <modify-function signature="operator=(QByteArrayMatcher)" remove="all"/>
    </value-type>

    <value-type name="QDate">
        <modify-function signature="toString(QStringView) const" remove="all" since="5.10.0" until="5.*"/>
        <modify-function signature="toString(QStringView,QCalendar)const" remove="all" since="5.14.0"/>
        <modify-function signature="fromString(QString,Qt::DateFormat)" remove="all" since="6.0.0"/>
        <modify-function signature="fromString(QStringView,QStringView,QCalendar)" remove="all" since="6.0.0"/>
        <!--modify-function signature="fromString(QString,QString)" remove="all" since="6.0.0"/-->
        <modify-function signature="fromString(QString,QString,QCalendar)" remove="all" since="6.0.0"/>
    </value-type>

    <value-type name="QDateTime">
        <modify-function signature="operator=(QDateTime)" remove="all"/>
        <modify-function signature="toString(QStringView) const" remove="all" since="5.10.0" until="5.*"/>
        <modify-function signature="toString(QStringView,QCalendar) const" remove="all" since="5.15.0"/>
        <modify-function signature="fromString(const QString &amp;, Qt::DateFormat)" remove="all" since="6.0.0"/>
        <modify-function signature="fromString(const QString &amp;, const QString &amp;, QCalendar)" remove="all" since="6.0.0"/>
        <modify-function signature="fromString(QStringView, QStringView, QCalendar)" remove="all" since="6.0.0"/>
    </value-type>

    <value-type name="QDir">
        <modify-function signature="QDir(QString,QString,QFlags&lt;QDir::SortFlag&gt;,QFlags&lt;QDir::Filter&gt;)">
        <modify-argument index="3">
            <replace-default-expression with="SortFlag.Name, SortFlag.IgnoreCase"/>
        </modify-argument>
        </modify-function>
        <modify-function signature="operator=(QDir)" remove="all"/>
        <modify-function signature="operator=(QString)" remove="all" until="5.*"/>
        <modify-function signature="addResourceSearchPath(QString)" remove="all" until="5.*"/>
        <!--### Obsolete in 4.3-->
    </value-type>

    <value-type name="QPoint">
        <modify-function signature="operator-()" rename="unaryMinus" since="6.0.0"/>
        <modify-function signature="operator+()" rename="unaryPlus" since="6.0.0"/>
        <modify-function signature="operator-(QPoint)" rename="minus" since="6.0.0"/>
        <modify-function signature="operator+(QPoint)" rename="plus" since="6.0.0"/>
        <modify-function signature="operator*(int)" rename="times" since="6.0.0"/>
        <modify-function signature="operator*(float)" rename="times" since="6.0.0"/>
        <modify-function signature="operator*(double)" rename="times" since="6.0.0"/>
        <modify-function signature="operator/(qreal)" rename="div" since="6.0.0"/>
    </value-type>
    <value-type name="QPointF">
        <modify-function signature="operator-()" rename="unaryMinus" since="6.0.0"/>
        <modify-function signature="operator+()" rename="unaryPlus" since="6.0.0"/>
        <modify-function signature="operator-(QPointF)" rename="minus" since="6.0.0"/>
        <modify-function signature="operator+(QPointF)" rename="plus" since="6.0.0"/>
        <modify-function signature="operator*(qreal)" rename="times" since="6.0.0"/>
        <modify-function signature="operator/(qreal)" rename="div" since="6.0.0"/>
    </value-type>

    <value-type name="QRect">
        <modify-function signature="getCoords(int*,int*,int*,int*)const">
        <remove/>
        </modify-function>
        <modify-function signature="getRect(int*,int*,int*,int*)const">
        <remove/>
        </modify-function>
        <modify-function signature="operator&amp;=(QRect)">
        <remove/>
        </modify-function>
        <modify-function signature="operator|=(QRect)">
        <remove/>
        </modify-function>
        <modify-function signature="operator&amp;(QRect)const">
        <remove/>
        </modify-function>
        <modify-function signature="operator|(QRect)const">
        <remove/>
        </modify-function>
        <modify-function signature="operator-=(const QMargins &amp;)" rename="subtract">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QRect" />
            </modify-argument>
        </modify-function>
        <modify-function signature="operator+=(const QMargins &amp;)" rename="add">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QRect" />
            </modify-argument>
        </modify-function>
    </value-type>

    <value-type name="QRectF">
        <modify-function signature="getCoords(qreal*,qreal*,qreal*,qreal*)const">
        <remove/>
        </modify-function>
        <modify-function signature="getRect(qreal*,qreal*,qreal*,qreal*)const">
        <remove/>
        </modify-function>
        <modify-function signature="operator&amp;=(QRectF)">
        <remove/>
        </modify-function>
        <modify-function signature="operator|=(QRectF)">
        <remove/>
        </modify-function>
        <modify-function signature="operator&amp;(QRectF)const">
        <remove/>
        </modify-function>
        <modify-function signature="operator|(QRectF)const">
        <remove/>
        </modify-function>
        <modify-function signature="operator-=(const QMarginsF &amp;)" rename="subtract">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QRectF" />
            </modify-argument>
        </modify-function>
        <modify-function signature="operator+=(const QMarginsF &amp;)" rename="add">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QRectF" />
            </modify-argument>
        </modify-function>
    </value-type>


    <value-type name="QSize">
        <modify-function signature="operator-(QSize)" rename="minus" since="6.0.0"/>
        <modify-function signature="operator+(QSize)" rename="plus" since="6.0.0"/>
        <modify-function signature="operator/(qreal)" rename="div" since="6.0.0"/>
        <modify-function signature="operator*(qreal)" rename="times" since="6.0.0"/>
        <modify-function signature="operator*=(qreal)" rename="multiply">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QSize" />
            </modify-argument>
        </modify-function>
        <modify-function signature="operator/=(qreal)" rename="divide">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QSize" />
            </modify-argument>
        </modify-function>
        <modify-function signature="operator+=(QSize)" rename="add">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QSize" />
            </modify-argument>
        </modify-function>
        <modify-function signature="operator-=(QSize)" rename="subtract">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QSize" />
            </modify-argument>
        </modify-function>
        <modify-function signature="rheight()">
        <remove/>
        </modify-function>
        <modify-function signature="rwidth()">
        <remove/>
        </modify-function>
    </value-type>

    <value-type name="QSizeF">
        <modify-function signature="operator-(QSizeF)" rename="minus" since="6.0.0"/>
        <modify-function signature="operator+(QSizeF)" rename="plus" since="6.0.0"/>
        <modify-function signature="operator/(qreal)" rename="div" since="6.0.0"/>
        <modify-function signature="operator*(qreal)" rename="times" since="6.0.0"/>
        <modify-function signature="operator*=(qreal)" rename="multiply">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QSizeF" />
            </modify-argument>
        </modify-function>
        <modify-function signature="operator/=(qreal)" rename="divide">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QSizeF" />
            </modify-argument>
        </modify-function>
        <modify-function signature="operator+=(QSizeF)" rename="add">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QSizeF" />
            </modify-argument>
        </modify-function>
        <modify-function signature="operator-=(QSizeF)" rename="subtract">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QSizeF" />
            </modify-argument>
        </modify-function>
        <modify-function signature="rheight()">
        <remove/>
        </modify-function>
        <modify-function signature="rwidth()">
        <remove/>
        </modify-function>
    </value-type>

    <value-type name="QStringMatcher">
        <modify-function signature="operator=(QStringMatcher)" remove="all"/>
        <modify-function signature="QStringMatcher(const QChar*,int,Qt::CaseSensitivity)" remove="all" until="5.*"/>
        <modify-function signature="QStringMatcher(const QChar*,qsizetype,Qt::CaseSensitivity)" remove="all" since="6.0.0"/>
        <modify-function signature="indexIn(const QChar*,int,int)const" remove="all" until="5.*"/>
        <modify-function signature="indexIn(const QChar*,qsizetype,qsizetype)const" remove="all" since="6.0.0"/>
        <modify-function signature="QStringMatcher(QStringView,Qt::CaseSensitivity)" remove="all" since="5.14.0"/>
        <modify-function signature="indexIn(QStringView,qsizetype)const" remove="all" since="5.14.0"/>
    </value-type>

    <value-type name="QTime">
        <modify-function signature="toString(QStringView) const" remove="all" since="5.10.0"/>
        <modify-function signature="fromString(QStringView,QStringView)" remove="all" since="6.0.0"/>
        <modify-function signature="fromString(QString,Qt::DateFormat)" remove="all" since="6.0.0"/>
        <modify-function signature="fromString(QString,QString)" remove="all" since="6.0.0"/>
    </value-type>

    <rejection class="QMetaMethod" function-name="invoke"/>
    <rejection class="QMetaMethod" function-name="invokeOnGadget"/>
    <rejection class="QMetaMethod" function-name="getParameterTypes"/>
    <value-type name="QMetaMethod">
        <modify-function signature="QMetaMethod()" remove="all"/>
        <modify-function signature="methodSignature()const" rename="cppMethodSignature"/>
    </value-type>
    <rejection class="QMetaProperty" function-name="resetOnGadget"/>
    <rejection class="QMetaProperty" function-name="readOnGadget"/>
    <rejection class="QMetaProperty" function-name="writeOnGadget"/>
    <value-type name="QMetaProperty">
        <modify-function signature="QMetaProperty()" remove="all"/>
    </value-type>
    <value-type name="QMetaEnum">
        <modify-function signature="QMetaEnum()" remove="all"/>
        <modify-function signature="fromType()" remove="all"/>
    </value-type>
    <enum-type name="QMetaMethod::MethodType">
    </enum-type>
    <enum-type name="QMetaMethod::Attributes">
    </enum-type>
    <enum-type name="QMetaMethod::Access">
    </enum-type>
    
    <value-type name="QPersistentModelIndex" thread-affine="model()">
        <modify-function signature="operator=(QPersistentModelIndex)" remove="all"/>
        <modify-function signature="operator=(QModelIndex)" remove="all"/>
        <modify-function signature="internalPointer()const" remove="all"/>
        <modify-function signature="constInternalPointer()const" remove="all" since="6.0.0"/>
        <modify-function signature="qHashEquals(QPersistentModelIndex)" remove="all" since="6.0.0"/>
    </value-type>

    <value-type name="QUuid">
        <modify-function signature="QUuid(const char*)" remove="all" until="6.2.*"/>
        <modify-function signature="fromString(QLatin1String)" remove="all" since="5.10.0" until="6.2.*"/>
        <modify-function signature="operator&gt;&gt;(QDataStream &amp;,QUuid &amp;)" access="non-final"/>
        <modify-function signature="operator&lt;&lt;(QDataStream &amp;,QUuid)" access="non-final"/>
        <modify-function signature="operator>=(const QUuid&amp;,const QUuid&amp;)" remove="all"/>
    </value-type>

    <value-type name="QLocale">
        <modify-function signature="toDouble(const QStringRef &amp;, bool *) const" remove="all" until="5.*"/>
        <modify-function signature="toDouble(QStringView, bool *) const" remove="all" since="5.10.0"/>
        <modify-function signature="toFloat(const QStringRef &amp;, bool *) const" remove="all" until="5.*"/>
        <modify-function signature="toFloat(QStringView, bool *) const" remove="all" since="5.10.0"/>
        <modify-function signature="toInt(const QStringRef &amp;, bool *) const" remove="all" until="5.*"/>
        <modify-function signature="toInt(QStringView, bool *) const" remove="all" since="5.10.0"/>
        <modify-function signature="toUInt(const QStringRef &amp;, bool *) const" remove="all" until="5.*"/>
        <modify-function signature="toUInt(QString,bool*)const" remove="all"/>
        <modify-function signature="toUInt(QStringView,bool*)const" remove="all" since="5.10.0"/>
        <modify-function signature="toLongLong(const QStringRef &amp;, bool *) const" remove="all" until="5.*"/>
        <modify-function signature="toLongLong(QStringView, bool *) const" remove="all" since="5.10.0"/>
        <modify-function signature="toLong(QStringView, bool *) const" remove="all" since="5.12.0"/>
        <modify-function signature="toLong(const QString &amp;, bool *) const" remove="all" since="5.12.0"/>
        <modify-function signature="toLong(const QStringRef &amp;, bool *) const" remove="all" since="5.12.0" until="5.*"/>
        <modify-function signature="toULongLong(const QStringRef &amp;, bool *) const" remove="all" until="5.*"/>
        <modify-function signature="toULongLong(QString,bool*)const" remove="all"/>
        <modify-function signature="toULongLong(QStringView,bool*)const" remove="all" since="5.10.0"/>
        <modify-function signature="toShort(const QStringRef &amp;, bool *) const" remove="all" until="5.*"/>
        <modify-function signature="toShort(QStringView, bool *) const" remove="all" since="5.10.0"/>
        <modify-function signature="toUShort(const QStringRef &amp;, bool *) const" remove="all" until="5.*"/>
        <modify-function signature="toUShort(QStringView, bool *) const" remove="all" since="5.10.0"/>
        <modify-function signature="toUShort(QString, bool *) const" remove="all"/>
        <modify-function signature="toString(unsigned long long) const" remove="all"/>
        <modify-function signature="toString(unsigned long) const" remove="all"/>
        <modify-function signature="toString(long) const" remove="all"/>
        <modify-function signature="toString(unsigned short) const" remove="all"/>
        <modify-function signature="toString(unsigned int) const" remove="all"/>
        <modify-function signature="toULong(const QStringRef &amp;, bool *) const" remove="all" until="5.*"/>
        <modify-function signature="toULong(QString,bool*)const" remove="all"/>
        <modify-function signature="toULong(QStringView,bool*)const" remove="all" since="5.10.0"/>
        <modify-function signature="operator=(QLocale)" remove="all"/>
        <!-- since Qt 4.8 introduces toCurrencyString(...) overlapping signatures short/ushort, int/uint, qlonglong/qulonglong -->
        <modify-function signature="toCurrencyString(unsigned short,const QString&amp;)const" remove="all"/>
        <modify-function signature="toCurrencyString(unsigned int,const QString&amp;)const" remove="all"/>
        <modify-function signature="toCurrencyString(unsigned long long,const QString&amp;)const" remove="all"/>
        <!-- since Qt 4.8 introduces quoteString(...), arg1 type const QStringRef &amp; already exists -->
        <modify-function signature="quoteString(const QStringRef&amp;,QLocale::QuotationStyle)const" remove="all" until="5.*"/>
        <modify-function signature="quoteString(QStringView, QLocale::QuotationStyle) const" remove="all" since="6.0.0"/>
        <modify-function signature="toString(const QDate &amp;, QString) const" remove="all" since="5.10.0"/>
        <modify-function signature="toString(const QTime &amp;, QString) const" remove="all" since="5.10.0"/>
        <modify-function signature="toString(const QDateTime &amp;, QString) const" remove="all" since="5.10.0"/>
        <modify-function signature="formattedDataSize(long long, int, QFlags&lt;QLocale::DataSizeFormat>)" remove="all" since="5.12.0" until="5.*"/>
        <modify-function signature="QLocale(QStringView)" remove="all" since="6.3.0"/>
    </value-type>


    <value-type name="QBitArray">
        <modify-function signature="operator[](int)" remove="all" until="5.*"/>
        <modify-function signature="operator[](int)const" remove="all" until="5.*"/>
        <modify-function signature="operator[](uint)const" remove="all" until="5.*"/>
        <modify-function signature="operator[](uint)" remove="all" until="5.*"/>
        <modify-function signature="operator[](qsizetype)const" remove="all" since="6.0.0"/>
        <modify-function signature="operator[](qsizetype)" remove="all" since="6.0.0"/>
    </value-type>
    <!--value-type name="QException">
        <modify-function signature="~QException()">
        </modify-function>
    </value-type>
    <value-type name="QUnhandledException">
        <modify-function signature="~QUnhandledException()">
        </modify-function>
    </value-type-->
    <enum-type name="QCborError::Code" since="5.12.0"/>
    <value-type name="QCborError" since="5.12.0">
        <modify-field name="c" rename="code"/>
        <modify-function signature="operator Code() const" remove="all"/>
    </value-type>
    <value-type name="QCborParserError" since="5.12.0">
    </value-type>
    <value-type name="QCborValueConstRef" generate="no" java-name="QCborValue" since="6.4.0"/>
    <value-type name="QCborValueRef" since="5.12.0" generate="no" java-name="QCborValue"/>
    <value-type name="QCborValue" since="5.12.0">
        <extra-includes>
            <include file-name="qtjambi_core_repository.h" location="global"/>
        </extra-includes>
        <modify-function signature="QCborValue(QLatin1String)" remove="all" until="6.3.*"/>
		<modify-function signature="QCborValue(QLatin1StringView)" remove="all" since="6.4.0"/>
        <modify-function signature="QCborValue(QStringView)" remove="all" since="5.14.0"/>
        <modify-function signature="QCborValue(const char*)" remove="all"/>
        <modify-function signature="QCborValue(std::nullptr_t)" remove="all"/>
        <modify-function signature="QCborValue(unsigned)" remove="all"/>
        <modify-function signature="operator[](QLatin1String)" remove="all" until="6.3.*"/>
        <modify-function signature="operator[](QLatin1StringView)" remove="all" since="6.4.0"/>
        <modify-function signature="operator[](QLatin1String)const" remove="all" until="6.3.*"/>
        <modify-function signature="operator[](QLatin1StringView)const" remove="all" since="6.4.0"/>
        <modify-function signature="operator[](QString)" remove="all"/>
        <modify-function signature="operator[](long long)" remove="all"/>
        <modify-function signature="operator[](QString)const" rename="value"/>
        <modify-function signature="operator[](long long)const" rename="value"/>
        <modify-function signature="fromCbor(const char *, qsizetype, QCborParserError *)" remove="all"/>
        <modify-function signature="fromCbor(const unsigned char *, qsizetype, QCborParserError *)" remove="all"/>
        <modify-function signature="operator=(const QCborValue &amp;)" rename="set">
            <modify-argument index="0">
                <replace-type modified-type="void"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="QCborValue(const QRegularExpression &amp;)" pp-condition="QT_CONFIG(regularexpression)" />
        <modify-function signature="toRegularExpression(const QRegularExpression &amp;)const" pp-condition="QT_CONFIG(regularexpression)" />
    </value-type>
    <value-type name="QCborArray" since="5.12.0">
        <modify-function signature="extract(QCborArray::ConstIterator)" remove="all"/>
        <modify-function signature="first()const" remove="all"/>
        <modify-function signature="last()const" remove="all"/>
        <modify-function signature="cend()const" remove="all"/>
        <modify-function signature="cbegin()const" remove="all"/>
        <modify-function signature="constEnd()const" remove="all"/>
        <modify-function signature="constBegin()const" remove="all"/>
        <modify-function signature="operator[](qsizetype)" remove="all"/>
        <modify-function signature="operator[](qsizetype)const" rename="value"/>
        <modify-function signature="operator=(const QCborArray &amp;)" rename="set">
            <modify-argument index="0">
                <replace-type modified-type="void"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="operator+(QCborValue) const" rename="plus"/>
        <modify-function signature="operator+=(QCborValue)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(QCborValue)" remove="all"/>
    </value-type>
    <enum-type name="QCborSimpleType" since="5.12.0"/>
    <enum-type name="QCborTag" extensible="yes" since="5.12.0" />
    <enum-type name="QCborKnownTags" since="5.12.0"/>
    <enum-type name="QCborValue::EncodingOption" flags="QCborValue::EncodingOptions" since="5.12.0"/>
    <enum-type name="QCborValue::DiagnosticNotationOption" flags="QCborValue::DiagnosticNotationOptions" since="5.12.0"/>
    <enum-type name="QCborValue::Type" since="5.12.0"/>
    <iterator-type name="QCborArray::ConstIterator" since="5.12.0"/>
    <value-type name="QCborMap" since="5.12.0">
        <modify-function signature="erase(QCborMap::Iterator)" remove="all"/>
        <modify-function signature="extract(QCborMap::Iterator)" remove="all"/>
        <modify-function signature="erase(QCborMap::ConstIterator)" remove="all"/>
        <modify-function signature="extract(QCborMap::ConstIterator)" remove="all"/>
        <modify-function signature="end()" remove="all"/>
        <modify-function signature="cend()const" remove="all"/>
        <modify-function signature="begin()" remove="all"/>
        <modify-function signature="cbegin()const" remove="all"/>
        <modify-function signature="constEnd()const" remove="all"/>
        <modify-function signature="constBegin()const" remove="all"/>
		<modify-function signature="contains(QLatin1StringView)const" remove="all" since="6.4.0"/>
        <modify-function signature="contains(QLatin1String) const" remove="all" until="6.3.*"/>
        <modify-function signature="constFind(QString) const" remove="all"/>
        <modify-function signature="constFind(QLatin1String) const" remove="all" until="6.3.*"/>
        <modify-function signature="constFind(QLatin1StringView) const" remove="all" since="6.4.0"/>
        <modify-function signature="constFind(long long) const" remove="all"/>
        <modify-function signature="find(QLatin1String)" remove="all" until="6.3.*"/>
        <modify-function signature="find(QLatin1StringView)" remove="all" since="6.4.0"/>
        <modify-function signature="find(QLatin1String) const" remove="all" until="6.3.*"/>
		<modify-function signature="find(QLatin1StringView)const" remove="all" since="6.4.0"/>
        <modify-function signature="find(QCborValue)" remove="all"/>
        <modify-function signature="find(QString)" remove="all"/>
        <modify-function signature="find(long long)" remove="all"/>
        <modify-function signature="insert(QLatin1StringView,QCborValue)" remove="all" since="6.4.0"/>
        <modify-function signature="insert(QLatin1String,QCborValue)" remove="all" until="6.3.*"/>
        <modify-function signature="operator[](QLatin1StringView)" remove="all" since="6.4.0"/>
        <modify-function signature="operator[](QLatin1String)" remove="all" until="6.3.*"/>
        <modify-function signature="operator[](QString)" remove="all"/>
        <modify-function signature="operator[](long long)" remove="all"/>
        <modify-function signature="operator[](QCborValue)" remove="all"/>
        <modify-function signature="operator[](QLatin1String)const" remove="all" until="6.3.*"/>
        <modify-function signature="operator[](QLatin1StringView)const" remove="all" since="6.4.0"/>
        <modify-function signature="operator[](QString)const" remove="all"/>
        <modify-function signature="operator[](QCborValue)const" remove="all"/>
        <modify-function signature="operator[](long long)const" remove="all"/>
        <modify-function signature="remove(QLatin1StringView)" remove="all" since="6.4.0"/>
        <modify-function signature="remove(QLatin1String)" remove="all" until="6.3.*"/>
        <modify-function signature="take(QLatin1String)" remove="all" until="6.3.*"/>
        <modify-function signature="take(QLatin1StringView)" remove="all" since="6.4.0"/>
        <modify-function signature="value(QLatin1String)const" remove="all" until="6.3.*"/>
        <modify-function signature="value(QLatin1StringView)const" remove="all" since="6.4.0"/>
        <modify-function signature="operator=(const QCborMap &amp;)" rename="set">
            <modify-argument index="0">
                <replace-type modified-type="void"/>
            </modify-argument>
        </modify-function>
    </value-type>
    <iterator-type name="QCborMap::ConstIterator" since="5.12.0"/>
    <iterator-type name="QCborMap::Iterator" since="5.12.0"/>
    <object-type name="QCborStreamReader">
        <extra-includes>
            <include file-name="qtjambi_core_repository.h" location="local"/>
        </extra-includes>
        <modify-function signature="QCborStreamReader(const unsigned char *, qsizetype)" remove="all"/>
        <modify-function signature="readStringChunk(char *, qsizetype)" remove="all"/>
        <modify-function signature="isNegativeInteger()const" remove="all"/>
    </object-type>
    <object-type name="QCborStreamWriter">
        <modify-function signature="QCborStreamWriter(QIODevice *)">
            <modify-argument index="1">
                <reference-count action="set" variable-name="__rcDevice"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="setDevice(QIODevice *)">
            <modify-argument index="1">
                <reference-count action="set" variable-name="__rcDevice"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="append(QLatin1StringView)" remove="all" since="6.4.0"/>
        <modify-function signature="append(QLatin1String)" remove="all" until="6.3.*"/>
        <modify-function signature="append(unsigned int)" remove="all"/>
        <modify-function signature="append(qfloat16)" remove="all"/>
        <modify-function signature="append(std::nullptr_t)" remove="all"/>
        <modify-function signature="appendTextString(const char *, qsizetype)" remove="all"/>
    </object-type>
    <enum-type name="QCborStreamReader::Type" since="5.12.0">
        <reject-enum-value name="ByteString"/>
        <reject-enum-value name="TextString"/>
        <reject-enum-value name="HalfFloat"/>
    </enum-type>
    <enum-type name="QCborStreamReader::StringResultCode" since="5.12.0"/>    
    <value-type name="QJsonArray">
        <modify-function signature="operator=(const QJsonArray&amp;)" remove="all"/>
        <modify-function signature="operator+=(const QJsonValue &amp;)" remove="all"/>
        <modify-function signature="operator+(const QJsonValue &amp;) const" rename="plus"/>
        <!--<modify-function signature="operator[](int) const" remove="all"/>
        <modify-function signature="operator[](int)" remove="all"/>-->
        <modify-function signature="operator&lt;&lt;(const QJsonValue &amp;)" remove="all"/>
        <modify-function signature="toVariantList()const" rename="toList"/>
        <modify-function signature="constBegin() const" remove="all" since="5.7.0"/>
        <modify-function signature="constEnd() const" remove="all" since="5.7.0"/>
        <modify-function signature="cbegin() const" remove="all" since="5.14.0"/>
        <modify-function signature="cend() const" remove="all" since="5.14.0"/>
    </value-type>
    <iterator-type name="QJsonArray::const_iterator"/>
    <value-type name="QJsonDocument">
        <modify-function signature="operator=(const QJsonDocument&amp;)" remove="all"/>
        <modify-function signature="operator[](QLatin1String) const" remove="all" since="5.10.0" until="6.3.*"/>
        <modify-function signature="operator[](QLatin1StringView) const" remove="all" since="6.4.0"/>
        <modify-function signature="operator[](const QString &amp;) const" rename="getObjectValue" since="5.10.0" until="5.13.0"/>
        <modify-function signature="operator[](const QString &amp;)const" remove="all" since="5.14.0"/>
        <modify-function signature="operator[](QStringView)const" rename="getObjectValue" since="5.14.0"/>
        <modify-function signature="operator[](int) const" rename="getArrayValue" since="5.10.0" until="5.*"/>
        <modify-function signature="operator[](qsizetype) const" rename="getArrayValue" since="6.0.0"/>
    </value-type>
    <value-type name="QJsonObject">
        <modify-function signature="operator=(const QJsonObject&amp;)" remove="all"/>
        <modify-function signature="operator[](const QString &amp;) const" remove="all"/>
        <modify-function signature="operator[](QLatin1String) const" remove="all" since="5.7.0" until="6.3.*"/>
        <modify-function signature="operator[](QLatin1StringView) const" remove="all" since="6.4.0"/>
        <modify-function signature="operator[](QLatin1String)" remove="all" since="5.7.0" until="6.3.*"/>
        <modify-function signature="operator[](QLatin1StringView)" remove="all" since="6.4.0"/>
        <modify-function signature="operator[](QStringView) const" remove="all" since="5.14.0"/>
        <modify-function signature="operator[](QStringView)" remove="all" since="5.14.0"/>
        <modify-function signature="value(QLatin1StringView) const" remove="all" since="6.4.0"/>
        <modify-function signature="value(QLatin1String) const" remove="all" since="5.7.0" until="6.3.*"/>
        <modify-function signature="value(QString) const" remove="all" since="5.14.0"/>
        <modify-function signature="contains(QLatin1String) const" remove="all" since="5.7.0" until="6.3.*"/>
		<modify-function signature="contains(QLatin1StringView)const" remove="all" since="6.4.0"/>
        <modify-function signature="constFind(const QString &amp;) const" remove="all" since="5.7.0"/>
        <modify-function signature="constFind(QLatin1StringView) const" remove="all" since="6.4.0"/>
        <modify-function signature="constFind(QLatin1String) const" remove="all" since="5.7.0" until="6.3.*"/>
        <modify-function signature="constFind(QStringView) const" remove="all" since="5.14.0"/>
		<modify-function signature="find(QLatin1StringView)const" remove="all" since="6.4.0"/>
        <modify-function signature="find(QLatin1String) const" remove="all" since="5.7.0" until="6.3.*"/>
        <modify-function signature="find(QString) const" remove="all" since="5.14.0"/>
        <modify-function signature="remove(QLatin1StringView)" remove="all" since="6.4.0"/>
        <modify-function signature="remove(QLatin1String)" remove="all" since="5.14.0" until="6.3.*"/>
        <modify-function signature="remove(QString)" remove="all" since="5.14.0"/>
        <modify-function signature="contains(QString) const" remove="all" since="5.14.0"/>
        <modify-function signature="take(QLatin1StringView)" remove="all" since="6.4.0"/>
        <modify-function signature="take(QLatin1String)" remove="all" since="5.14.0" until="6.3.*"/>
        <modify-function signature="take(QString)" remove="all" since="5.14.0"/>
        <modify-function signature="constBegin() const" remove="all" since="5.7.0"/>
        <modify-function signature="constEnd() const" remove="all" since="5.7.0"/>
    </value-type>
    <iterator-type name="QJsonObject::const_iterator"/>
    <value-type name="QJsonParseError"/>
    <value-type name="QJsonValueConstRef" generate="no" java-name="QJsonValue" since="6.4.0"/>
    <value-type name="QJsonValueRef" generate="no" java-name="QJsonValue"/>
    <value-type name="QJsonValue">
		<modify-function signature="QJsonValue(QLatin1StringView)" remove="all" since="6.4.0"/>
        <modify-function signature="QJsonValue(QLatin1String)" remove="all" until="6.3.*"/>
        <modify-function signature="QJsonValue(const char*)" remove="all"/>
        <modify-function signature="operator=(QJsonValue)" remove="all"/>
        <modify-function signature="toBool(bool)const" rename="toBoolean"/>
        <modify-function signature="operator[](QLatin1String) const" remove="all" since="5.10.0" until="6.3.*"/>
        <modify-function signature="operator[](QLatin1StringView) const" remove="all" since="6.4.0"/>
        <modify-function signature="operator[](const QString &amp;) const" rename="getObjectValue" since="5.10.0" until="5.13.0"/>
        <modify-function signature="operator[](const QString &amp;)const" remove="all" since="5.14.0"/>
        <modify-function signature="operator[](QStringView)const" rename="getObjectValue" since="5.14.0"/>
        <modify-function signature="operator[](int) const" rename="getArrayValue" since="5.10.0" until="5.*"/>
        <modify-function signature="operator[](qsizetype) const" rename="getArrayValue" since="6.0.0"/>
    </value-type>
    <value-type name="QMimeType">
    <modify-function signature="operator=(QMimeType)" remove="all"/>
    </value-type>
    <enum-type name="QRegularExpression::WildcardConversionOption" flags="QRegularExpression::WildcardConversionOptions" since="6.0.0"/>
    <value-type name="QRegularExpression">
        <modify-function signature="operator=(QRegularExpression)" remove="all"/>
        <modify-function signature="anchoredPattern(QStringView)" remove="all" since="5.15.0"/>
        <modify-function signature="wildcardToRegularExpression(QStringView)" remove="all" since="5.15.0" until="5.*"/>
        <modify-function signature="wildcardToRegularExpression(QStringView,QFlags&lt;QRegularExpression::WildcardConversionOption>)" remove="all" since="6.0.0"/>
        <modify-function signature="escape(QStringView)" remove="all" since="5.15.0"/>
        <modify-function signature="globalMatch(const QStringRef &amp;, int, QRegularExpression::MatchType, QFlags&lt;QRegularExpression::MatchOption&gt;) const" remove="all" until="5.*"/>
        <modify-function signature="globalMatch(QString, int, QRegularExpression::MatchType, QFlags&lt;QRegularExpression::MatchOption&gt;) const" remove="all" until="5.*"/>
        <modify-function signature="globalMatch(QString, qsizetype, QRegularExpression::MatchType, QFlags&lt;QRegularExpression::MatchOption&gt;) const" remove="all" since="6.0.0"/>
        <modify-function signature="match(const QStringRef &amp;, int, QRegularExpression::MatchType, QFlags&lt;QRegularExpression::MatchOption&gt;) const" remove="all" until="5.*"/>
        <modify-function signature="match(QString, int, QRegularExpression::MatchType, QFlags&lt;QRegularExpression::MatchOption&gt;) const" remove="all" until="5.*"/>
        <modify-function signature="match(QString, qsizetype, QRegularExpression::MatchType, QFlags&lt;QRegularExpression::MatchOption&gt;) const" remove="all" since="6.0.0"/>
    </value-type>
    <value-type name="QRegularExpressionMatch">
        <modify-function signature="QRegularExpressionMatch(QRegularExpressionMatch)" remove="all"/>
        <modify-function signature="operator=(QRegularExpressionMatch)" remove="all"/>
        <modify-function signature="captured(QStringView) const" remove="all" since="5.10.0"/>
        <modify-function signature="capturedEnd(QStringView) const" remove="all" since="5.10.0"/>
        <modify-function signature="capturedLength(QStringView) const" remove="all" since="5.10.0"/>
        <modify-function signature="capturedRef(int) const" remove="all" since="5.10.0" until="5.*"/>
        <modify-function signature="capturedRef(QStringView) const" remove="all" since="5.10.0" until="5.*"/>
        <modify-function signature="capturedRef(const QString &amp;) const" remove="all" since="5.10.0" until="5.*"/>
        <modify-function signature="capturedStart(QStringView) const" remove="all" since="5.10.0"/>
        <modify-function signature="capturedView(QStringView) const" remove="all" since="5.10.0"/>
        <modify-function signature="hasCaptured(QStringView) const" remove="all" since="6.3.0"/>
        <modify-function signature="capturedView(int) const" remove="all" since="5.10.0"/>
    </value-type>
    <value-type name="QRegularExpressionMatchIterator">
        <modify-function signature="QRegularExpressionMatchIterator(QRegularExpressionMatchIterator)" remove="all"/>
        <modify-function signature="operator=(QRegularExpressionMatchIterator)" remove="all"/>
    </value-type>
    <value-type name="QUrlQuery">
        <modify-function signature="operator=(QUrlQuery)" remove="all"/>
    </value-type>
    <value-type name="QTimeZone">
        <modify-function signature="operator=(QTimeZone)" remove="all"/>
    </value-type>
    <value-type name="QTimeZone::OffsetData"/>
    <!--value-type name="QMessageLogContext"/-->
    
    <object-type name="QStandardPaths"/>
    <object-type name="QSaveFile"/>
    
    <!--object-type name="QMessageLogger">
        <modify-function signature="debug()const" remove="all">
        </modify-function>
        <modify-function signature="warning()const" remove="all">
        </modify-function>
        <modify-function signature="critical()const" remove="all">
        </modify-function>
        <modify-function signature="noDebug()const" remove="all">
        </modify-function>
    </object-type-->
    <object-type name="QMimeDatabase"/>
    <object-type name="QEventLoopLocker"/>
    <object-type name="QDirIterator"/>
    <!--value-type name="QModelRoleData">
        <modify-function signature="data()" remove="all"/>
    </value-type>
    <value-type name="QModelRoleDataSpan">
        <modify-function signature="QModelRoleDataSpan(QModelRoleData *, qsizetype)" remove="all"/>
        <modify-function signature="data()const" remove="all"/>
        <modify-function signature="begin()const" remove="all"/>
        <modify-function signature="end()const" remove="all"/>
        <modify-function signature="operator[](qsizetype) const" remove="all"/>
    </value-type-->
    <object-type name="QAbstractItemModel" is-value-owner="yes">
        <modify-function signature="beginInsertColumns(const QModelIndex &amp;, int, int)" access="non-final"/>
        <modify-function signature="beginInsertRows(const QModelIndex &amp;, int, int)" access="non-final"/>
        <modify-function signature="beginRemoveColumns(const QModelIndex &amp;, int, int)" access="non-final"/>
        <modify-function signature="beginRemoveColumns(const QModelIndex &amp;, int, int)" access="non-final"/>
        <modify-function signature="beginRemoveRows(const QModelIndex &amp;, int, int)" access="non-final"/>
        <modify-function signature="beginResetModel()" access="non-final"/>
        <modify-function signature="endInsertColumns()" access="non-final"/>
        <modify-function signature="endInsertRows()" access="non-final"/>
        <modify-function signature="endRemoveColumns()" access="non-final"/>
        <modify-function signature="endRemoveRows()" access="non-final"/>
        <modify-function signature="endResetModel()" access="non-final"/>
        <modify-function signature="resetInternalData()" access="non-final" virtual-slot="yes" until="5.*"/>
    </object-type>

    <object-type name="QAbstractListModel">
        <extra-includes>
        <include file-name="QStringList" location="global"/>
        <include file-name="QSize" location="global"/>
        </extra-includes>
        <modify-function signature="parent()const" remove="all"/>
    </object-type>

    <object-type name="QAbstractTableModel">
        <extra-includes>
            <include file-name="QStringList" location="global"/>
            <include file-name="QSize" location="global"/>
        </extra-includes>
    <modify-function signature="parent()const" remove="all"/>
    </object-type>

    <object-type name="QStringListModel"/>

    <value-type name="QUrl">
        <extra-includes>
        <include file-name="QStringList" location="global"/>
        </extra-includes>
        <modify-function signature="operator=(QUrl)" remove="all"/>
        <modify-function signature="operator=(QString)" remove="all"/>
    </value-type>

    <value-type name="QRegExp">
        <extra-includes>
        <include file-name="QStringList" location="global"/>
        </extra-includes>
        <modify-function signature="operator=(QRegExp)" remove="all"/>
        <modify-function signature="pos(int)const">
        <remove />
        </modify-function>
        <modify-function signature="cap(int)const">
        <remove />
        </modify-function>
        <modify-function signature="capturedTexts()const">
        <remove />
        </modify-function>
        <modify-function signature="errorString()const">
        <remove />
        </modify-function>
    </value-type>

    <value-type name="QFileInfo">
        <extra-includes>
        <include file-name="QDateTime" location="global"/>
        <include file-name="QDir" location="global"/>
        </extra-includes>
        <modify-function signature="operator!=(const QFileInfo &amp;)const" remove="all"/>
        <modify-function signature="operator=(QFileInfo)" remove="all"/>
        <modify-function signature="setFile(QFile)" until="5.*">
            <modify-argument index="1">
                <reference-count action="ignore"/>
            </modify-argument>
        </modify-function>

        <modify-function signature="readLink()const" remove="all" until="5.*"/>
        <!--### Obsolete in 4.3-->
    </value-type>

    <interface-type name="QFactoryInterface" />

    <value-type name="QByteArrayView" since="6.0.0">
        <modify-function signature="QByteArrayView(std::nullptr_t)" remove="all"/>
        <modify-function signature="constData()const" remove="all"/>
        <modify-function signature="begin()const" access="protected"/>
        <modify-function signature="end()const" access="protected"/>
        <modify-function signature="operator[](qsizetype)const" remove="all"/>
        <modify-function signature="toLong(bool*, int) const" remove="all" since="6.3.0"/>
        <modify-function signature="toLongLong(bool*, int) const" remove="all" since="6.3.0"/>
        <modify-function signature="toUInt(bool*, int) const" remove="all" since="6.3.0"/>
        <modify-function signature="toULong(bool*, int) const" remove="all" since="6.3.0"/>
        <modify-function signature="toULongLong(bool*, int) const" remove="all" since="6.3.0"/>
        <modify-function signature="toUShort(bool*, int) const" remove="all" since="6.3.0"/>
    </value-type>
    <iterator-type name="QByteArrayView::const_iterator"/>
    <typealias-type name="QByteArrayView::const_pointer"/>
    <typealias-type name="QByteArrayView::value_type"/>
    <value-type name="QByteArray::FromBase64Result" generate="no" since="5.15.0"/>
    <value-type name="QByteArray">

        <!--extra-includes>
        <include file-name="QNoImplicitBoolCast" location="global"/>
        </extra-includes-->

        <!-- removed functions -->
        <modify-function signature="setNum(ulong, int)" remove="all" since="6.0.0"/>
        <modify-function signature="number(long, int)" remove="all" since="6.0.0"/>
        <modify-function signature="number(ulong, int)" remove="all" since="6.0.0"/>
        <modify-function signature="number(unsigned long long, int)" remove="all" since="6.0.0"/>
        <modify-function signature="setNum(long, int)" remove="all" since="6.0.0"/>
        <modify-function signature="number(long, int)" remove="all" since="6.0.0"/>
        <modify-function signature="begin()const" access="protected"/>
        <modify-function signature="end()const" access="protected"/>
        <modify-function signature="begin()" remove="all"/>
        <modify-function signature="constBegin()const" remove="all"/>
        <modify-function signature="constEnd()const" remove="all"/>
        <modify-function signature="count()const" remove="all"/>
        <modify-function signature="data()" remove="all"/>
        <modify-function signature="setRawData(const char *, unsigned int)" access="protected" until="5.*"/>
        <modify-function signature="setRawData(const char *, qsizetype)" access="protected" since="6.0.0"/>
        <modify-function signature="end()" remove="all"/>
        <modify-function signature="number(uint,int)" remove="all"/>
        <modify-function signature="number(unsigned long long,int)" remove="all"/>
        <modify-function signature="operator const char *()const" remove="all"/>
        <modify-function signature="operator const void *()const" remove="all"/>
        <modify-function signature="operator+=(const char*)" remove="all"/>
        <modify-function signature="operator[](int)" remove="all" until="5.*"/>
        <modify-function signature="operator[](int)const" remove="all" until="5.*"/>
        <modify-function signature="operator[](uint)" remove="all" until="5.*"/>
        <modify-function signature="operator[](uint)const" remove="all" until="5.*"/>
        <modify-function signature="operator[](qsizetype)const" remove="all" since="6.0.0"/>
        <modify-function signature="operator[](qsizetype)" remove="all" since="6.0.0"/>
        <modify-function signature="push_back(char)" remove="all"/>
        <modify-function signature="push_back(const QByteArray&amp;)" remove="all"/>
        <modify-function signature="push_back(const char*)" remove="all"/>
        <modify-function signature="push_front(char)" remove="all"/>
        <modify-function signature="push_front(const QByteArray&amp;)" remove="all"/>
        <modify-function signature="push_front(const char*)" remove="all"/>
        <modify-function signature="setNum(uint,int)" remove="all"/>
        <modify-function signature="setNum(unsigned long long,int)" remove="all"/>
        <modify-function signature="setNum(unsigned short,int)" remove="all"/>
        <modify-function signature="toLong(bool*, int) const" remove="all"/>
        <modify-function signature="toLongLong(bool*, int) const" remove="all"/>
        <modify-function signature="toUInt(bool*, int) const" remove="all"/>
        <modify-function signature="toULong(bool*, int) const" remove="all"/>
        <modify-function signature="toULongLong(bool*, int) const" remove="all"/>
        <modify-function signature="toUShort(bool*, int) const" remove="all"/>

        <!-- functions made private... -->
        <modify-function signature="operator+=(QByteArray)" remove="all"/>
        <modify-function signature="operator+=(QString)" remove="all" until="5.*"/>
        <modify-function signature="operator+=(char)" remove="all"/>
        <modify-function signature="simplified_helper(const QByteArray &amp;)" remove="all"/>
        <modify-function signature="toLower_helper(const QByteArray &amp;)" remove="all"/>
        <modify-function signature="toUpper_helper(const QByteArray &amp;)" remove="all"/>
        <modify-function signature="trimmed_helper(const QByteArray &amp;)" remove="all"/>
    </value-type>
    <iterator-type name="QByteArray::const_iterator"/>

    <value-type name="QTextBoundaryFinder">
        <modify-function signature="QTextBoundaryFinder(QTextBoundaryFinder::BoundaryType,const QChar*,int,unsigned char*,int)" remove="all" until="5.*"/>
        <modify-function signature="QTextBoundaryFinder(QTextBoundaryFinder::BoundaryType,const QChar*,qsizetype,unsigned char*,qsizetype)" remove="all" since="6.0.0"/>
        <modify-function signature="QTextBoundaryFinder(QTextBoundaryFinder::BoundaryType, QStringView, unsigned char *, qsizetype)" remove="all" since="6.0.0"/>
        <modify-function signature="operator=(QTextBoundaryFinder)" remove="all" />
    </value-type>

    <value-type name="QEasingCurve">
        <modify-function signature="operator!=(const QEasingCurve &amp;)const" remove="all" />
        <modify-function signature="operator=(const QEasingCurve &amp;)" remove="all" />
    </value-type>
    <functional-type name="QEasingCurve::EasingFunction"/>

    <value-type name="QItemSelection">
    </value-type>
    <value-type name="QItemSelectionRange" thread-affine="model()">
        <modify-function signature="operator=(QItemSelectionRange)" remove="all" until="5.*"/>
    </value-type>
    <enum-type name="QItemSelectionModel::SelectionFlag" flags="QItemSelectionModel::SelectionFlags"/>
    <object-type name="QItemSelectionModel">
        <modify-function signature="model()const" remove="all"/>
        <modify-function signature="setModel(QAbstractItemModel*)">
            <modify-argument index="1">
                <reference-count action="ignore" />
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="QAbstractAnimation">
    </object-type>
    <object-type name="QVariantAnimation" />
    <object-type name="QAnimationGroup">
        <modify-function signature="addAnimation(QAbstractAnimation*)">
            <modify-argument index="1">
                <reference-count action="ignore" />
            </modify-argument>
        </modify-function>
        <modify-function signature="removeAnimation(QAbstractAnimation*)">
            <modify-argument index="1">
                <reference-count action="ignore" />
            </modify-argument>
        </modify-function>
        <modify-function signature="insertAnimation(int,QAbstractAnimation*)">
            <modify-argument index="2">
                <reference-count action="ignore" />
            </modify-argument>
        </modify-function>
        <modify-function signature="takeAnimation(int)">
            <modify-argument index="return">
                <define-ownership owner="java" class="native"/>
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="QPauseAnimation" />
    <object-type name="QParallelAnimationGroup" />
    <object-type name="QSequentialAnimationGroup" />
    <object-type name="QPropertyAnimation">
        <modify-function signature="setTargetObject(QObject*)">
            <modify-argument index="1">
                <reference-count action="ignore" />
            </modify-argument>
        </modify-function>
    </object-type>

    <object-type name="QAbstractProxyModel">
        <extra-includes>
            <include file-name="QItemSelection" location="global"/>
            <include file-name="QStringList" location="global"/>
            <include file-name="QSize" location="global"/>
        </extra-includes>

        <modify-function signature="setSourceModel(QAbstractItemModel *)">
            <modify-argument index="1">
                <reference-count action="set" variable-name="__rcSourceModel"/>
            </modify-argument>
        </modify-function>

    </object-type>

    <object-type name="QSortFilterProxyModel">
        <modify-function signature="parent()const" remove="all"/>
        <extra-includes>
            <include file-name="QItemSelection" location="global"/>
            <include file-name="QStringList" location="global"/>
            <include file-name="QSize" location="global"/>
        </extra-includes>

        <modify-function signature="setSourceModel(QAbstractItemModel *)">
            <modify-argument index="1">
                <reference-count action="set" variable-name="__rcSourceModel"/>
            </modify-argument>
        </modify-function>

        <modify-function signature="clear()" remove="all" until="5.*"/> <!--### Obsolete in 4.3-->
        <modify-function signature="filterChanged()" remove="all" until="5.*"/> <!--### Obsolete in 4.3-->
    </object-type>

  
  <object-type name="QIdentityProxyModel">
    <!--modify-function signature="parent()const" remove="all"/-->
    <extra-includes>
        <include file-name="QItemSelection" location="global"/>
        <include file-name="QStringList" location="global"/>
        <include file-name="QSize" location="global"/>
    </extra-includes>

    <modify-function signature="setSourceModel(QAbstractItemModel *)">
        <modify-argument index="1">
            <reference-count action="set" variable-name="__rcSourceModel"/>
        </modify-argument>
    </modify-function>
        <modify-function signature="match(QModelIndex, int, QVariant, int, QFlags&lt;Qt::MatchFlag&gt;) const">
            <modify-argument index="5">
                <remove-default-expression/>
            </modify-argument>
        </modify-function>
  </object-type>

    <object-type name="QAbstractState" until="5.*">
        <modify-function signature="onEntry(QEvent*)">
            <modify-argument index="1" invalidate-after-use="yes" />
        </modify-function>
        <modify-function signature="onExit(QEvent*)">
            <modify-argument index="1" invalidate-after-use="yes" />
        </modify-function>
    </object-type>
    <enum-type name="QAbstractTransition::TransitionType" until="5.*"/>
    <object-type name="QAbstractTransition" until="5.*">
        <modify-function signature="addAnimation(QAbstractAnimation*)">
            <modify-argument index="1">
                <reference-count action="add" variable-name="__rcAnimation" />
            </modify-argument>
        </modify-function>
        <modify-function signature="removeAnimation(QAbstractAnimation*)">
            <modify-argument index="1">
                <reference-count action="remove" variable-name="__rcAnimation" />
            </modify-argument>
        </modify-function>
        <modify-function signature="eventTest(QEvent*)">
            <modify-argument index="1" invalidate-after-use="yes" />
        </modify-function>
        <modify-function signature="onTransition(QEvent*)">
            <modify-argument index="1" invalidate-after-use="yes" />
        </modify-function>
        <modify-function signature="addAnimation(QAbstractAnimation *)" pp-condition="QT_CONFIG(animation)" />
        <modify-function signature="removeAnimation(QAbstractAnimation *)" pp-condition="QT_CONFIG(animation)" />
        <modify-function signature="animations() const" pp-condition="QT_CONFIG(animation)" />
    </object-type>
    <object-type name="QState" until="5.*">
        <modify-function signature="addTransition(QAbstractTransition*)">
            <modify-argument index="1">
                <no-null-pointer/>
                <reference-count action="ignore" />
            </modify-argument>
        </modify-function>
        <modify-function signature="removeTransition(QAbstractTransition*)">
            <modify-argument index="1">
                <reference-count action="ignore" />
            </modify-argument>
        </modify-function>
        <modify-function signature="setErrorState(QAbstractState*)">
            <modify-argument index="1">
                <reference-count action="set" variable-name="__rcErrorState" />
            </modify-argument>
        </modify-function>
        <modify-function signature="setInitialState(QAbstractState*)">
            <modify-argument index="1">
                <reference-count action="set" variable-name="__rcInitialState" />
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="QStateMachine" until="5.*">
        <modify-function signature="beginMicrostep(QEvent*)">
            <modify-argument index="1" invalidate-after-use="yes" />
        </modify-function>
        <modify-function signature="beginSelectTransitions(QEvent*)">
            <modify-argument index="1" invalidate-after-use="yes" />
        </modify-function>
        <modify-function signature="endMicrostep(QEvent*)">
            <modify-argument index="1" invalidate-after-use="yes" />
        </modify-function>
        <modify-function signature="endSelectTransitions(QEvent*)">
            <modify-argument index="1" invalidate-after-use="yes" />
        </modify-function>
        <modify-function signature="addDefaultAnimation(QAbstractAnimation*)">
            <modify-argument index="1">
                <reference-count action="add" variable-name="__rcDefaultAnimations" />
            </modify-argument>
        </modify-function>
        <modify-function signature="removeDefaultAnimation(QAbstractAnimation*)">
            <modify-argument index="1">
                <reference-count action="remove" variable-name="__rcDefaultAnimations" />
            </modify-argument>
        </modify-function>
        <modify-function signature="addState(QAbstractState*)">
            <modify-argument index="1">
                <reference-count action="add" variable-name="__rcStates" />
            </modify-argument>
        </modify-function>
        <modify-function signature="removeState(QAbstractState*)">
            <modify-argument index="1">
                <reference-count action="remove" variable-name="__rcStates" />
            </modify-argument>
        </modify-function>
        <modify-function signature="eventFilter(QObject*,QEvent*)">
            <modify-argument index="2" invalidate-after-use="yes" />
        </modify-function>
    </object-type>
    <object-type name="QHistoryState" until="5.*">
        <modify-function signature="setDefaultTransition(QAbstractTransition*)">
            <modify-argument index="1">
                <reference-count action="ignore" />
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="QSignalTransition" until="5.*">
        <modify-function signature="setSenderObject(const QObject*)">
            <modify-argument index="1">
                <reference-count action="set" variable-name="__rcSenderObject" />
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="QEventTransition" until="5.*">
        <modify-function signature="setEventSource(QObject*)">
            <modify-argument index="1">
                <reference-count action="set" variable-name="__rcEventSource" />
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="QFinalState" until="5.*"/>
    <value-type name="QMargins">
    <!--     <modify-function signature="operator==(const QMargins &amp;)" remove="all" /> -->
        <modify-function signature="operator-=(int)" rename="subtract">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QMargins" />
            </modify-argument>
        </modify-function>
        <modify-function signature="operator+=(int)"  rename="add">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QMargins" />
            </modify-argument>
        </modify-function>
        <modify-function signature="operator*=(int)" rename="multiply">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QMargins" />
            </modify-argument>
        </modify-function>
        <modify-function signature="operator/=(int)" rename="divide">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QMargins" />
            </modify-argument>
        </modify-function>
        <modify-function signature="operator*=(qreal)" rename="multiply">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QMargins" />
            </modify-argument>
        </modify-function>
        <modify-function signature="operator/=(qreal)" rename="divide">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QMargins" />
            </modify-argument>
        </modify-function>
        <modify-function signature="operator-=(const QMargins &amp;)" rename="subtract">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QMargins" />
            </modify-argument>
        </modify-function>
        <modify-function signature="operator+=(const QMargins &amp;)" rename="add">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QMargins" />
            </modify-argument>
        </modify-function>
    </value-type>
    <value-type name="QMarginsF">
    <!--     <modify-function signature="operator==(const QMarginsF &amp;)" remove="all" /> -->
        <modify-function signature="operator-=(qreal)" rename="subtract">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QMarginsF" />
            </modify-argument>
        </modify-function>
        <modify-function signature="operator+=(qreal)" rename="add">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QMarginsF" />
            </modify-argument>
        </modify-function>
        <modify-function signature="operator*=(qreal)" rename="multiply">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QMarginsF" />
            </modify-argument>
        </modify-function>
        <modify-function signature="operator/=(qreal)" rename="divide">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QMarginsF" />
            </modify-argument>
        </modify-function>
        <modify-function signature="operator-=(const QMarginsF &amp;)" rename="subtract">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QMarginsF" />
            </modify-argument>
        </modify-function>
        <modify-function signature="operator+=(const QMarginsF &amp;)" rename="add">
            <modify-argument index="return" replace-value="this">
                <replace-type modified-type="io.qt.core.QMarginsF" />
            </modify-argument>
        </modify-function>
    </value-type>
    <object-type name="QXmlStreamEntityResolver" />
    <object-type name="QAbstractEventDispatcher">
        <modify-function signature="instance(QThread*)">
            <modify-argument index="0">
                <define-ownership class="native" owner="cplusplus"/>
            </modify-argument>
        </modify-function>
        <inject-code class="shell-declaration" position="end">
        #if defined(Q_OS_WIN) &amp;&amp; QT_VERSION &lt; QT_VERSION_CHECK(6,0,0)
        public:
            inline bool registerEventNotifier(QWinEventNotifier *) override {return false;}
            inline void unregisterEventNotifier(QWinEventNotifier *) override {}
        #endif
        </inject-code>
        <modify-function signature="interrupt()" thread-affine="no"/>
        <modify-function signature="wakeUp()" thread-affine="no"/>
    </object-type>
    <value-type name="QAbstractEventDispatcher::TimerInfo">
        <custom-constructor>
        if(copy){
            return new(placement) QAbstractEventDispatcher::TimerInfo(copy->timerId, copy->interval, copy->timerType);
        }else{
            return new(placement) QAbstractEventDispatcher::TimerInfo(0, 0, Qt::PreciseTimer);
        }
        </custom-constructor>
        <custom-constructor type="default">
            new(placement) QAbstractEventDispatcher::TimerInfo(0, 0, Qt::PreciseTimer);
        </custom-constructor>
        <custom-constructor type="copy">
            new(placement) QAbstractEventDispatcher::TimerInfo(copy->timerId, copy->interval, copy->timerType);
        </custom-constructor>
    </value-type>
    <enum-type name="QVersionNumber::SegmentStorage"/>
    <value-type name="QVersionNumber">
        <custom-constructor>
        if(copy){
            return new(placement) QVersionNumber(copy->majorVersion(), copy->minorVersion(), copy->microVersion());
        }else{
            return new(placement) QVersionNumber();
        }
        </custom-constructor>
        <custom-constructor type="copy" until="6.0.*">
            new(placement) QVersionNumber(copy->majorVersion(), copy->minorVersion(), copy->microVersion());
        </custom-constructor>
        <custom-constructor type="copy" since="6.1.0">
            new(placement) QVersionNumber(copy->segments());
        </custom-constructor>
        <!--custom-constructor type="default">
            new(placement) QVersionNumber();
        </custom-constructor-->
        <modify-function signature="fromString(QLatin1String, int *)" remove="all" since="5.10.0" until="6.3"/>
        <modify-function signature="fromString(QStringView, int *)" remove="all" since="5.10.0" until="6.3"/>
    </value-type>
    <object-type name="QEventLoop">
        <modify-function signature="wakeUp()" thread-affine="no"/>
    </object-type>
    <object-type name="QFile">
        <modify-function signature="readLink()const" remove="all" until="5.*"/>
        <!--### Obsolete in 4.3-->
        <modify-function signature="readLink(QString)" remove="all" until="5.*"/>
        <!--### Obsolete in 4.3-->
        <modify-function signature="rename(const QString &amp;)" access="non-final" since="5.10.0"/>
    </object-type>
    <object-type name="QFileDevice">
    </object-type>

    <interface-type name="QIODeviceBase" no-impl="yes" since="6.0.0">
        <modify-function signature="QIODeviceBase()" remove="all"/>
    </interface-type>
    <object-type name="QIODevice"/>
    <object-type name="QStateMachine::SignalEvent" until="5.*"/>
    <object-type name="QStateMachine::WrappedEvent" until="5.*"/>

    <object-type name="QCryptographicHash">
        <modify-function signature="addData(QIODevice*)">
            <modify-argument index="1">
                <reference-count action="ignore" />
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="QSocketNotifier">
        <modify-function signature="setEnabled(bool)" thread-affine="yes"/>
    </object-type>
    <object-type name="QTemporaryFile">
        <modify-function signature="fileName()const" rename="uniqueFilename"/>
        <modify-function signature="createLocalFile(QFile &amp;)" until="5.*">
            <modify-argument index="return">
                <define-ownership owner="java" class="native"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="createLocalFile(const QString &amp;)" until="5.*">
            <modify-argument index="return">
                <define-ownership owner="java" class="native"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="createNativeFile(QFile &amp;)">
            <modify-argument index="return">
                <define-ownership owner="java" class="native"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="createNativeFile(const QString &amp;)">
            <modify-argument index="return">
                <define-ownership owner="java" class="native"/>
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="QTemporaryDir">
    </object-type>
    <object-type name="QMimeData">
        <extra-includes>
        <include file-name="QStringList" location="global"/>
        <include file-name="QUrl" location="global"/>
        </extra-includes>
    </object-type>
    <object-type name="QStringConverterBase::State" since="6.0.0">
    </object-type>
    <object-type name="QStringConverterBase" since="6.0.0">
        <modify-function signature="QStringConverterBase()" remove="all" since="6.4.0"/>
    </object-type>
    <object-type name="QStringConverter" since="6.0.0">
        <modify-field name="state" read="true" write="false"/>
    </object-type>
    <enum-type name="QStringConverter::Encoding" since="6.0.0">
        <reject-enum-value name="LastEncoding"/>
    </enum-type>
    <!--object-type name="QStringConverter::Interface">
    </object-type-->
    <object-type name="QTextCodec" until="5.*">
        <modify-function signature="setCodecForLocale(QTextCodec*)">
        <modify-argument index="1">
            <reference-count action="set" variable-name="__rcCodecForLocale"/>
        </modify-argument>
        </modify-function>
        <!--modify-function signature="setCodecForTr(QTextCodec*)">
        <access modifier="private"/>
        <modify-argument index="1">
            <reference-count action="set" variable-name="__rcCodecForTr"/>
        </modify-argument>
        </modify-function>
        <modify-function signature="setCodecForCStrings(QTextCodec*)">
        <modify-argument index="1">
            <reference-count action="set" variable-name="__rcCodecForCStrings"/>
        </modify-argument>
        </modify-function>


        <modify-function signature="codecForTr()">
        <remove/>
        </modify-function-->

        <!-- see generator source for "HACK method ownership of constructor return value" -->
        <!-- this setting does not work, also we should probably do some equality
        of java object tricks so the java object as same identity as
        underlying cpp object.  Untested but I suspect multiple java objects
        would end up sharing the same cpp object. -->
        <modify-function signature="QTextCodec()">
        <modify-argument index="-1">
            <define-ownership class="native" owner="cplusplus"/>
        </modify-argument>
        </modify-function>

        <modify-function signature="toUnicode(const char*)const">
        <remove/>
        </modify-function>
        <modify-function signature="fromUnicode(QStringView) const" remove="all" since="5.10.0"/>
        <modify-function signature="canEncode(QStringView) const" remove="all" since="5.10.0"/>
    </object-type>

    <object-type name="QTextDecoder">
        <modify-function signature="toUnicode(const char*,int)">
        <remove/>
        </modify-function>
        <modify-function signature="toUnicode(QString*,const char*,int)" remove="all"/>
    </object-type>
    <object-type name="QTextEncoder">
        <modify-function signature="fromUnicode(const QChar*,int)">
        <remove/>
        </modify-function>
        <modify-function signature="fromUnicode(QStringView)" remove="all" since="5.10.0"/>
    </object-type>
    <object-type name="QTimeLine">
    </object-type>
    <object-type name="QTranslator">
        <extra-includes>
            <include file-name="qtjambi/qtjambi_application.h" location="global"/>
        </extra-includes>
    </object-type>

    <object-type name="QFileSystemWatcher">
        <extra-includes>
        <include file-name="QStringList" location="global"/>
        </extra-includes>
    </object-type>

    <object-type name="QTextCodec::ConverterState" until="5.*">
        <include file-name="QTextCodec" location="global"/>
    </object-type>

    <object-type name="QBuffer">
        <modify-function signature="buffer()">
            <remove/>
        </modify-function>
    </object-type>

    <object-type name="QTimer"/>

    <object-type name="QProcess">
        <modify-function signature="readChannelMode()const" remove="all" until="5.*"/>
        <!--### Obsolete in 4.3-->
        <modify-function signature="setReadChannelMode(QProcess::ProcessChannelMode)" remove="all" until="5.*"/>
        <!--### Obsolete in 4.3-->
    </object-type>

    <!--value-type name="QVariantMap">
        <modify-function signature="QVariantMap()" remove="all"/>
        <modify-function signature="QVariantMap(QMap)" remove="all"/>
        <modify-function signature="QVariantMap(QVariantMap)" remove="all"/>
        <modify-function signature="QVariantMap(QMap&lt;QString,QVariant>)" remove="all"/>
    </value-type-->

    <object-type name="QSignalMapper">
        <extra-includes>
            <include file-name="qwidget.h" location="global" suppressed="yes"/>
            <include file-name="qtjambi_core_qhashes.h" location="local"/>
        </extra-includes>
    </object-type>
    
    <object-type name="QThreadStorage" template="yes">
        <instantiation arguments="JObjectWrapper"/>
    </object-type>
    <object-type name="QThreadStorage&lt;JObjectWrapper>" generic-class="yes">
        <extra-includes>
            <include file-name="qtjambi/qtjambi_jobjectwrapper.h" location="global"/>
        </extra-includes>
    </object-type>
    <object-type name="QThread"><!-- In case of patched Qt library, QThread type entry is replaced in generator internally -->
        <extra-includes>
            <include file-name="qtjambi/qtjambi_thread.h" location="global"/>
            <include file-name="qtjambi/qtjambi_repository.h" location="global"/>
        </extra-includes>
        <modify-function signature="wait(ulong)" rename="join" thread-affine="no"/>
        <modify-function signature="isRunning()const" thread-affine="no"/>
        <modify-function signature="terminate()" thread-affine="no"/>
        <modify-function signature="isInterruptionRequested()const" thread-affine="no"/>
        <modify-function signature="isFinished()const" thread-affine="no"/>
        <modify-function signature="setStackSize(uint)" thread-affine="no"/>
        <modify-function signature="stackSize()const" thread-affine="no"/>
        <modify-function signature="exec()" thread-affine="no"/>
        <modify-function signature="exit(int)" thread-affine="no"/>
        <modify-function signature="quit()" thread-affine="no"/>
        <modify-function signature="run()" thread-affine="no" no-except="yes" block-exceptions="yes"/>
        <modify-function signature="setPriority(QThread::Priority)" thread-affine="no"/>
        <modify-function signature="priority()const" thread-affine="no"/>
        <modify-function signature="eventDispatcher()const" thread-affine="no"/>
        <modify-function signature="setEventDispatcher(QAbstractEventDispatcher*)">
            <modify-argument index="1">
                <reference-count action="set" variable-name="__rcEventDispatcher"/>
            </modify-argument>
        </modify-function>
    </object-type>
    <enum-type name="QThread::Priority"/>

    <object-type name="QObjectCleanupHandler">
        <modify-function signature="add(QObject*)">
            <modify-argument index="1">
                <reference-count action="ignore"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="remove(QObject*)">
            <modify-argument index="1">
                <reference-count action="ignore"/>
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="QObject">
        <extra-includes>
            <include file-name="QtCore/QRegularExpression" location="global"/>
            <include file-name="QtCore/QThread" location="global"/>
            <include file-name="qtjambi/qtjambi_application.h" location="global"/>
            <include file-name="qtjambi/qtjambi_jobjectwrapper.h" location="global"/>
            <include file-name="qtjambi_core_repository.h" location="local"/>
        </extra-includes>
        <modify-function signature="destroyed(QObject *)">
            <modify-argument index="1">
                <conversion-rule class="shell">
                    %out = qtjambi_from_destroyed_qobject(%env, %in);
                </conversion-rule>
            </modify-argument>
        </modify-function>
        <modify-function signature="setObjectName(QAnyStringView)" remove="all" since="6.4.0"/>
        <modify-function signature="bindingStorage() const" remove="all" since="6.0.0"/>
        <modify-function signature="dumpObjectTree()" remove="all" since="5.9.0" until="5.*"/>
        <modify-function signature="dumpObjectInfo()" remove="all" since="5.9.0" until="5.*"/>
        <modify-function signature="childEvent(QChildEvent*)">
        <modify-argument index="1" invalidate-after-use="yes" />
        </modify-function>
        <modify-function signature="customEvent(QEvent*)">
        <modify-argument index="1" invalidate-after-use="yes" />
        </modify-function>
        <modify-function signature="event(QEvent*)">
        <modify-argument index="1" invalidate-after-use="yes" />
        </modify-function>
        <modify-function signature="eventFilter(QObject*,QEvent*)">
        <modify-argument index="2" invalidate-after-use="yes" />
        </modify-function>
        <modify-function signature="timerEvent(QTimerEvent*)">
        <modify-argument index="1" invalidate-after-use="yes" />
        </modify-function>

        <modify-function signature="installEventFilter(QObject*)" thread-affine="yes">
        <modify-argument index="1" thread-affine="yes">
            <reference-count action="add" variable-name="__rcEventFilters"/>
        </modify-argument>
        </modify-function>
        <modify-function signature="removeEventFilter(QObject*)" thread-affine="yes">
        <modify-argument index="1">
            <reference-count action="remove" variable-name="__rcEventFilters"/>
        </modify-argument>
        </modify-function>
        <modify-function signature="setParent(QObject*)" thread-affine="yes">
        <modify-argument index="1" thread-affine="yes">
            <reference-count action="ignore"/>
        </modify-argument>
        </modify-function>
        <modify-function signature="setProperty(const char *, QVariant)" thread-affine="yes">
        </modify-function>

        <modify-function signature="thread()const" thread-affine="no"/>
        <modify-function signature="deleteLater()" thread-affine="no">
        <rename to="disposeLater"/>
        </modify-function>
    </object-type>
    
    <object-type name="QSignalBlocker" implements="AutoCloseable">
        <modify-function signature="QSignalBlocker(QObject&amp;)" remove="all"/>
        <inject-code class="java">
        public void close(){dispose();}
        </inject-code>
    </object-type>

    <object-type name="QCoreApplication" is-value-owner="yes">
        <extra-includes>
        <include file-name="QStringList" location="global"/>
        </extra-includes>

        <modify-function signature="notify(QObject*,QEvent*)" no-except="yes" block-exceptions="yes">
            <modify-argument index="1" thread-affine="yes"/>
            <modify-argument index="2" invalidate-after-use="yes" />
        </modify-function>

<!--        <modify-function signature="QCoreApplication(int &amp;, char **)"> -->
            <!-- before 4.8, instead call 3 arg ctor and make use of C++ default argument (for 3rd arg) -->
<!--            <access modifier="private"/>
        </modify-function> -->
        <modify-function signature="removePostedEvents(QObject*,int)">
        <modify-argument index="1">
            <reference-count action="ignore"/>
        </modify-argument>
        </modify-function>
        <modify-function signature="sendEvent(QObject *, QEvent *)" rethrow-exceptions="yes">
        <modify-argument index="1" thread-affine="yes">
        </modify-argument>
        </modify-function>

        <modify-function signature="installTranslator(QTranslator *)" thread-affine="ui">
        <modify-argument index="1" thread-affine="yes">
            <reference-count action="add" variable-name="__rcTranslators"/>
        </modify-argument>
        </modify-function>

        <modify-function signature="removeTranslator(QTranslator *)" thread-affine="ui">
        <modify-argument index="1" thread-affine="yes">
            <reference-count action="remove" variable-name="__rcTranslators"/>
        </modify-argument>
        </modify-function>
        <modify-function signature="sendPostedEvents(QObject*, int)" rethrow-exceptions="yes">
        </modify-function>
        <modify-function signature="postEvent(QObject*,QEvent*,int)" rethrow-exceptions="yes">
            <modify-argument index="2">
                <define-ownership class="native" owner="cplusplus" />
            </modify-argument>
        </modify-function>
        <modify-function signature="instance()">
            <modify-argument index="0">
                <define-ownership class="native" owner="cplusplus"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="setLibraryPaths(const QStringList &amp;)" pp-condition="QT_CONFIG(library)" />
        <modify-function signature="addLibraryPath(const QString &amp;)" pp-condition="QT_CONFIG(library)" />
        <modify-function signature="removeLibraryPath(const QString &amp;)" pp-condition="QT_CONFIG(library)" />
        <modify-function signature="libraryPaths()" pp-condition="QT_CONFIG(library)" />
        <modify-function signature="setEventDispatcher(QAbstractEventDispatcher*)">
            <modify-argument index="1">
                <reference-count action="ignore"/>
            </modify-argument>
            <inject-code position="end">
                QtJambi_LibraryUtilities.internal.setReferenceCount(instance().thread(), QThread.class, "__rcEventDispatcher", false, false, eventDispatcher);
            </inject-code>
        </modify-function>
    </object-type>

    <object-type name="QSettings">
        <extra-includes>
        <include file-name="QStringList" location="global"/>
        <include file-name="qtjambi/qtjambi_jobjectwrapper.h" location="global"/>
        </extra-includes>

        <modify-function signature="setIniCodec(QTextCodec*)" until="5.*">
        <modify-argument index="1">
            <reference-count action="set" variable-name="__rcIniCodec" />
        </modify-argument>
        </modify-function>
        <modify-function signature="setValue(const QString &amp;, const QVariant &amp;)" until="6.3">
            <modify-argument index="2">
                <replace-type modified-type="java.lang.Object"/>
                <conversion-rule class="native">
                    QVariant %out = qtjambi_to_qvariant(%env, %in);
                    if(__qt_value1.type()==QVariant::UserType){
                        if(%out.userType()==qMetaTypeId&lt;JCollectionWrapper>()){
                            bool ok = false;
                            QStringList stringList = %out.value&lt;JCollectionWrapper>().toStringList(&amp;ok);
                            if(ok){
                                %out.setValue(stringList);
                            }else{
                                QList&lt;QVariant> variantList = %out.value&lt;JCollectionWrapper>().toList();
                                %out.setValue(variantList);
                            }
                        }else if(%out.userType()==qMetaTypeId&lt;JMapWrapper>()){
                            bool ok = false;
                            QVariantMap stringMap = %out.value&lt;JMapWrapper>().toStringMap(&amp;ok);
                            if(ok){
                                %out.setValue(stringMap);
                            }
                        }
                    }
                </conversion-rule>
            </modify-argument>
        </modify-function>
        <modify-function signature="setValue(QAnyStringView, const QVariant &amp;)" since="6.4">
            <modify-argument index="2">
                <replace-type modified-type="java.lang.Object"/>
                <conversion-rule class="native">
                    QVariant %out = qtjambi_to_qvariant(%env, %in);
                    if(__qt_value1.type()==QVariant::UserType){
                        if(%out.userType()==qMetaTypeId&lt;JCollectionWrapper>()){
                            bool ok = false;
                            QStringList stringList = %out.value&lt;JCollectionWrapper>().toStringList(&amp;ok);
                            if(ok){
                                %out.setValue(stringList);
                            }else{
                                QList&lt;QVariant> variantList = %out.value&lt;JCollectionWrapper>().toList();
                                %out.setValue(variantList);
                            }
                        }else if(%out.userType()==qMetaTypeId&lt;JMapWrapper>()){
                            bool ok = false;
                            QVariantMap stringMap = %out.value&lt;JMapWrapper>().toStringMap(&amp;ok);
                            if(ok){
                                %out.setValue(stringMap);
                            }
                        }
                    }
                </conversion-rule>
            </modify-argument>
        </modify-function>

        <modify-function signature="setSystemIniPath(const QString&amp;)" remove="all" until="5.*"/>
        <!--### Obsolete in 4.3-->
        <modify-function signature="setUserIniPath(const QString&amp;)" remove="all" until="5.*"/>
        <!--### Obsolete in 4.3-->
    </object-type>
    <functional-type name="QSettings::ReadFunc">
        <extra-includes>
            <include file-name="QtCore/QIODevice" location="global"/>
        </extra-includes>
        <modify-argument index="1" invalidate-after-use="yes" />
        <modify-argument index="2" invalidate-after-use="yes" />
    </functional-type>
    <functional-type name="QSettings::WriteFunc">
        <extra-includes>
            <include file-name="QtCore/QIODevice" location="global"/>
        </extra-includes>
        <modify-argument index="1" invalidate-after-use="yes" />
        <modify-argument index="2" invalidate-after-use="yes" />
    </functional-type>

    <!--value-type name="QEvent::PointerEventTag"/>
    <value-type name="QEvent::InputEventTag"/-->
    <object-type name="QEvent">
        <modify-function signature="operator=(const QEvent &amp;)" rename="set">
            <modify-argument index="return" replace-type="void"/>
        </modify-function>
        <modify-function signature="clone()const" since="6.0.0">
            <modify-argument index="return">
                <define-ownership class="native" owner="java" />
                <define-ownership class="shell" owner="cpp" />
            </modify-argument>
        </modify-function>
        <modify-field name="t" read="false" write="false"/>
    </object-type>
    <object-type name="QChildEvent">
        <modify-field name="c" read="false" write="false"/>
        <modify-function signature="operator=(const QChildEvent &amp;)" rename="set">
            <modify-argument index="return" replace-type="void"/>
        </modify-function>
        <modify-function signature="clone()const" since="6.0.0">
            <modify-argument index="return">
                <define-ownership class="native" owner="java" />
                <define-ownership class="shell" owner="cpp" />
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="QTimerEvent">
        <modify-field name="id" read="false" write="yes" rename="timerId"/>
        <modify-function signature="operator=(const QTimerEvent &amp;)" rename="set">
            <modify-argument index="return" replace-type="void"/>
        </modify-function>
        <modify-function signature="clone()const" since="6.0.0">
            <modify-argument index="return">
                <define-ownership class="native" owner="java" />
                <define-ownership class="shell" owner="cpp" />
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="QDeferredDeleteEvent" java-name="QDeferredDisposeEvent">
        <modify-function signature="operator=(const QDeferredDeleteEvent &amp;)" rename="set">
            <modify-argument index="return" replace-type="void"/>
        </modify-function>
        <modify-function signature="clone()const" since="6.0.0">
            <modify-argument index="return">
                <define-ownership class="native" owner="java" />
                <define-ownership class="shell" owner="cpp" />
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="QDynamicPropertyChangeEvent">
        <modify-function signature="operator=(const QDynamicPropertyChangeEvent &amp;)" rename="set">
            <modify-argument index="return" replace-type="void"/>
        </modify-function>
        <modify-function signature="clone()const" since="6.0.0">
            <modify-argument index="return">
                <define-ownership class="native" owner="java" />
                <define-ownership class="shell" owner="cpp" />
            </modify-argument>
        </modify-function>
    </object-type>

    <object-type name="QDataStream">
        <extra-includes>
        <include file-name="QtCore/QFloat16" location="global"/>
        </extra-includes>
        <modify-function signature="QDataStream(QIODevice*)">
            <modify-argument index="1">
                <reference-count action="set" variable-name="__rcDevice"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="setDevice(QIODevice*)">
            <modify-argument index="1">
                <reference-count action="set" variable-name="__rcDevice"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="operator&lt;&lt;(char)" remove="all" since="6.0.0"/>
        <modify-function signature="operator&lt;&lt;(std::nullptr_t)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(unsigned int)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(unsigned long long)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(unsigned char)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(char16_t)" remove="all" since="6.0.0"/>
        <modify-function signature="operator&lt;&lt;(char32_t)" remove="all" since="6.0.0"/>
        <modify-function signature="operator&gt;&gt;(char&amp;)" remove="all" since="6.0.0"/>
        <modify-function signature="operator&gt;&gt;(uint&amp;)" remove="all"/>
        <modify-function signature="operator&gt;&gt;(unsigned char&amp;)" remove="all"/>
        <modify-function signature="operator&gt;&gt;(char16_t&amp;)" remove="all" since="6.0.0"/>
        <modify-function signature="operator&gt;&gt;(char32_t&amp;)" remove="all" since="6.0.0"/>
        <modify-function signature="operator&gt;&gt;(unsigned long long&amp;)" remove="all"/>
        <modify-function signature="operator&gt;&gt;(std::nullptr_t&amp;)" remove="all"/>
        <modify-function signature="readBytes(char&amp;*,uint&amp;)" remove="all"/>
        <modify-function signature="writeBytes(const char*,uint)" remove="all"/>
    </object-type>

    <object-type name="QTextStream">
        <modify-function signature="QTextStream(const QByteArray&amp;, QFlags&lt;QIODevice::OpenModeFlag&gt;)" remove="all" until="5.*"/>
        <modify-function signature="QTextStream(const QByteArray&amp;, QFlags&lt;QIODeviceBase::OpenModeFlag&gt;)" remove="all" since="6.0.0"/>
        <modify-function signature="QTextStream(QString*,QFlags&lt;QIODevice::OpenModeFlag&gt;)" remove="all" until="5.*"/>
        <modify-function signature="QTextStream(QString*,QFlags&lt;QIODeviceBase::OpenModeFlag&gt;)" remove="all" since="6.0.0"/>
        <modify-function signature="device() const" access="private" rename="device_private"/>
        <modify-function signature="readLineInto(QString *, long long)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(QLatin1String)" remove="all" until="6.3"/>
        <modify-function signature="operator&lt;&lt;(QLatin1StringView)" remove="all" since="6.4.0"/>
        <modify-function signature="operator&lt;&lt;(char16_t)" remove="all" since="6.3.0"/>
        <modify-function signature="operator&gt;&gt;(char16_t&amp;)" remove="all" since="6.4.0"/>
        <modify-function signature="operator&lt;&lt;(const QStringRef &amp;)" remove="all" until="5.*"/>
        <modify-function signature="operator&lt;&lt;(QStringView)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(const char*)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(signed long)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(unsigned int)" remove="all"/>
        <modify-function signature="operator&gt;&gt;(ulong&amp;)" remove="all"/>
        <modify-function signature="operator&gt;&gt;(char*)" remove="all"/>
        <modify-function signature="operator&gt;&gt;(signed long&amp;)" remove="all"/>
        <modify-function signature="operator&gt;&gt;(unsigned long long&amp;)" remove="all"/>
        <modify-function signature="operator&gt;&gt;(unsigned short&amp;)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(unsigned long)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(const void*)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(unsigned long long)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(unsigned short)" remove="all"/>
        <modify-function signature="operator&gt;&gt;(uint&amp;)" remove="all"/>
        <modify-function signature="setString(QString*,QFlags&lt;QIODevice::OpenModeFlag&gt;)" remove="all" until="5.*"/>
        <modify-function signature="setString(QString*,QFlags&lt;QIODeviceBase::OpenModeFlag&gt;)" remove="all" since="6.0.0"/>
        <modify-function signature="string()const" remove="all"/>
        <modify-function signature="reset()" remove="all"/>
        <modify-function signature="flush()" remove="all"/>
        <modify-function signature="setCodec(QTextCodec *)" until="5.*">
            <modify-argument index="1">
                <reference-count action="set" variable-name="__rcCodec"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="QTextStream(QIODevice *)">
            <modify-argument index="1">
                <reference-count action="set" variable-name="__rcDevice"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="setDevice(QIODevice *)">
            <modify-argument index="1">
                <reference-count action="set" variable-name="__rcDevice"/>
            </modify-argument>
        </modify-function>
    </object-type>

    <object-type name="QPromise" template="yes" disable-native-id-usage="yes" since="6.0.0">
        <instantiation arguments="QVariant"/>
    </object-type>
    <object-type name="QPromise&lt;QVariant>" target-type="final class" disable-native-id-usage="yes" generic-class="yes" generate="no" since="6.0.0"/>
    <value-type name="QFuture" template="yes" disable-native-id-usage="yes">
        <instantiation arguments="QVariant"/>
    </value-type>
    <value-type name="QFuture&lt;QVariant>" generic-class="yes" disable-native-id-usage="yes" target-type="final class" generate="no"/>
    <namespace-type name="QtFuture" since="6.0.0">
        <extra-includes>
            <include file-name="QtCore/QFuture" location="global"/>
            <include file-name="qfuture_impl.h" location="global" suppressed="yes"/>
        </extra-includes>
        <modify-function signature="makeReadyFuture()" remove="all" since="6.1.0"/>
    </namespace-type>
    <enum-type name="QtFuture::Launch" since="6.0.0"/>
    <enum-type name="QFutureInterfaceBase::State" extensible="true"/>
    <functional-type name="QFutureInterfaceBase::Continuation" using="std::function&lt;void(const QFutureInterfaceBase&amp;)>" generate="no"/>
    <value-type name="QFutureInterfaceBase">
        <extra-includes>
            <include file-name="qtjambi_core_repository.h" location="local"/>
            <include file-name="qtjambi/qtjambi_application.h" location="global"/>
            <include file-name="qtjambi/qtjambi_jobjectwrapper.h" location="global"/>
        </extra-includes>
        <modify-function signature="operator=(const QFutureInterfaceBase&amp;)" remove="all" />
    </value-type>

    <object-type name="QFutureWatcherBase">
        <extra-includes>
            <include file-name="qtjambi/qtjambi_application.h" location="global"/>
        </extra-includes>
    </object-type>
    <object-type name="QFutureWatcher" template="yes" disable-native-id-usage="yes">
        <instantiation arguments="QVariant"/>
    </object-type>
    <object-type name="QFutureWatcher&lt;QVariant>" generic-class="yes" disable-native-id-usage="yes" generate="no"/>
    <value-type name="QFutureInterface" template="yes" disable-native-id-usage="yes">
        <instantiation arguments="QVariant"/>
    </value-type>
    <value-type name="QFutureInterface&lt;QVariant>" generic-class="yes" disable-native-id-usage="yes" target-type="final class" generate="no"/>
    <object-type name="QThreadPool" />

    <interface-type name="QRunnable">
        <modify-function signature="run()" no-except="yes" block-exceptions="yes"/>
    </interface-type>

    <!-- QXmlStream* classes were moved from QtXml to QtCore between 4.3.x and 4.4.x -->
    <value-type name="QXmlStreamAttribute">
        <modify-function signature="operator=(QXmlStreamAttribute)" remove="all" until="5.*"/>
        <custom-constructor type="copy" until="5.*">
            if(copy->namespaceUri().isEmpty())
                new(placement) QXmlStreamAttribute(copy->qualifiedName().string() ? *copy->qualifiedName().string() : QString(),
                                                   copy->value().string() ? *copy->value().string() : QString());
            else
                new(placement) QXmlStreamAttribute(copy->namespaceUri().string() ? *copy->namespaceUri().string() : QString(),
                                                   copy->name().string() ? *copy->name().string() : QString(),
                                                   copy->value().string() ? *copy->value().string() : QString());
        </custom-constructor>
        <custom-constructor type="copy" since="6.0.0">
            if(copy->namespaceUri().isEmpty())
                new(placement) QXmlStreamAttribute(copy->qualifiedName().toString(), copy->value().toString());
            else
                new(placement) QXmlStreamAttribute(copy->namespaceUri().toString(),
                                                   copy->name().toString(),
                                                   copy->value().toString());
        </custom-constructor>
    </value-type>

    <value-type name="QXmlStreamAttributes">
        <!--modify-function signature="operator+(QVector&lt;QXmlStreamAttribute>)const" remove="all"/>
        <modify-function signature="operator&lt;&lt;(QVector&lt;QXmlStreamAttribute>)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(QXmlStreamAttribute)" remove="all"/-->
        <modify-function signature="value(const QString &amp;, const QLatin1String &amp;)const" remove="all" until="6.3.*"/>
        <modify-function signature="value(const QString &amp;, const QLatin1StringView &amp;)const" remove="all" since="6.4.0"/>
        <modify-function signature="value(QLatin1String, QLatin1String)const" remove="all" until="6.3.*"/>
        <modify-function signature="value(QLatin1StringView, QLatin1StringView)const" remove="all" since="6.4.0"/>
        <modify-function signature="value(QLatin1String)const" remove="all" until="6.3.*"/>
        <modify-function signature="value(QLatin1StringView)const" remove="all" since="6.4.0"/>
        <modify-function signature="hasAttribute(QLatin1String)const" remove="all" until="6.3.*"/>
        <modify-function signature="hasAttribute(QLatin1StringView)const" remove="all" since="6.4.0"/>
    </value-type>

    <value-type name="QXmlStreamNamespaceDeclaration">
        <modify-function signature="operator=(QXmlStreamNamespaceDeclaration)" remove="all" until="5.*"/>
    </value-type>

    <value-type name="QXmlStreamNotationDeclaration">
        <modify-function signature="operator=(QXmlStreamNotationDeclaration)" remove="all" until="5.*"/>
    </value-type>

    <value-type name="QXmlStreamEntityDeclaration">
        <modify-function signature="operator=(QXmlStreamEntityDeclaration)" remove="all" until="5.*"/>
    </value-type>

    <object-type name="QXmlStreamReader">
      <modify-function signature="QXmlStreamReader(const char*)" remove="all" />
      <modify-function signature="addData(const char*)" remove="all" />
      <modify-function signature="setEntityResolver(QXmlStreamEntityResolver*)">
        <modify-argument index="1">
            <reference-count action="set" variable-name="__rcEntityResolver" />
        </modify-argument>
      </modify-function>
    </object-type>
    <object-type name="QXmlStreamWriter">
        <modify-function signature="QXmlStreamWriter(QString *)">
            <remove />
        </modify-function>
    </object-type>
    <enum-type name="QLockFile::LockError">
    </enum-type>
    <object-type name="QLockFile">
    </object-type>
    <object-type name="QMessageAuthenticationCode">
        <modify-function signature="addData(QIODevice*)">
            <modify-argument index="1">
                <reference-count action="ignore" />
            </modify-argument>
        </modify-function>
    </object-type>


    <enum-type name="QAbstractFileEngine::Extension" extensible="yes" package="io.qt.core.internal"/>
    <enum-type name="QAbstractFileEngine::FileFlag" flags="QAbstractFileEngine::FileFlags" package="io.qt.core.internal"/>
    <enum-type name="QAbstractFileEngine::FileName" package="io.qt.core.internal"/>
    <enum-type name="QAbstractFileEngine::FileOwner" package="io.qt.core.internal"/>
    <enum-type name="QAbstractFileEngine::FileTime" package="io.qt.core.internal"/>
    <enum-type name="QAbstractFileEngineIterator::EntryInfoType" extensible="yes" package="io.qt.core.internal"/>
    <object-type name="QAbstractFileEngineIterator" package="io.qt.core.internal">
    </object-type>
    <object-type name="QAbstractFileEngineHandler" package="io.qt.core.internal">
        <modify-function signature="create(const QString &amp;) const">
            <modify-argument index="return">
                <!-- This is a factory method, caller owns the object returned (and might be a Java or a Cpp user) -->
                <define-ownership owner="cplusplus" class="shell"/>
                <define-ownership owner="java" class="native"/>
            </modify-argument>
        </modify-function>
    </object-type>

    <object-type name="QAbstractFileEngine" package="io.qt.core.internal">
        <modify-function signature="create(const QString &amp;)">
            <modify-argument index="return">
                <!-- This is a factory method, caller owns the object returned (and might be a Java or a Cpp user) -->
                <define-ownership owner="cplusplus" class="shell"/>
                <define-ownership owner="java" class="native"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="cloneTo(QAbstractFileEngine *)">
            <modify-argument index="1">
                <reference-count action="ignore" />
            </modify-argument>
        </modify-function>
        <!-- This is a factory method, caller owns the object returned (and might be a Java or a Cpp user) -->
        <modify-function signature="beginEntryList(QFlags&lt;QDir::Filter&gt;,const QStringList)">
            <modify-argument index="return">
                <define-ownership owner="cplusplus" class="shell"/>
                <define-ownership owner="java" class="native"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="beginEntryList(QFlags&lt;QDir::Filter&gt;,const QStringList)">
            <modify-argument index="return">
                <define-ownership owner="cplusplus" class="shell"/>
                <define-ownership owner="java" class="native"/>
            </modify-argument>
        </modify-function>
        <!-- Although this method is not widely advertised it is a vital QAbstractFileEngineIterator lifecycle
             to bridge for Java, we presume the same rules for its return value as for beginEntryList(...) -->
        <modify-function signature="endEntryList()">
            <modify-argument index="return">
                <!-- This should return NULL, caller owns the object returned (and might be a Java or a Cpp user -->
                <define-ownership owner="cplusplus" class="shell"/>
                <define-ownership owner="java" class="native"/>
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="QFSFileEngine" package="io.qt.core.internal">
    </object-type>
    <object-type name="QCommandLineParser">
    </object-type>
    <object-type name="QFileSelector">
    </object-type>
    <value-type name="QCommandLineOption">
        <custom-constructor>
    if(copy){
            return new(placement) QCommandLineOption(*copy);
    }else{
            return new(placement) QCommandLineOption(QLatin1String(" "));
    }
        </custom-constructor>
        <custom-constructor type="default">
            new(placement) QCommandLineOption(QLatin1String(" "));
        </custom-constructor>
        <modify-function signature="operator=(const QCommandLineOption&amp;)" remove="all"/>
    </value-type>
    <value-type name="QCollator">
        <modify-function signature="operator()(const QString &amp;, const QString &amp;)const" rename="isLessThan" until="5.13.0"/>
        <modify-function signature="operator()(const QString &amp;, const QString &amp;)const" remove="all" since="5.14.0"/>
        <modify-function signature="operator()(QStringView, QStringView)const" rename="isLessThan" since="5.14.0"/>
        <modify-function signature="operator=(const QCollator&amp;)" remove="all"/>
        <modify-function signature="compare(const QStringRef &amp;, const QStringRef &amp;) const" remove="all" until="5.*"/>
        <modify-function signature="compare(const QString &amp;, const QString &amp;) const" remove="all" since="5.14.0"/>
        <modify-function signature="compare(const QChar *, int, const QChar *, int) const" remove="all" />
        <modify-function signature="sortKey(const QString &amp;) const">
        </modify-function>
    </value-type>
    <value-type name="QCollatorSortKey">
        <modify-function signature="compare(QCollatorSortKey) const" remove="all" />
        <modify-function signature="operator=(const QCollatorSortKey&amp;)" remove="all"/>
        <custom-constructor>
            if(copy){
                    return new(placement) QCollatorSortKey(*copy);
            }else{
                    return new(placement) QCollatorSortKey(QCollator().sortKey(""));
            }
        </custom-constructor>
        <!--custom-constructor type="copy">
            new(placement) QCollatorSortKey(*copy);
        </custom-constructor-->
        <custom-constructor type="default">
            new(placement) QCollatorSortKey(QCollator().sortKey(""));
        </custom-constructor>
    </value-type>
    
    <value-type name="QStorageInfo">
        <modify-function signature="operator=(const QStorageInfo&amp;)" remove="all"/>
    </value-type>
    <value-type name="QOperatingSystemVersion" default-superclass="io.qt.QtObject">
        <custom-constructor>
            if(copy){
                    return new(placement) QOperatingSystemVersion(*copy);
            }else{
                    return new(placement) QOperatingSystemVersion(QOperatingSystemVersion::Unknown, -1);
            }
        </custom-constructor>
        <custom-constructor type="copy">
            new(placement) QOperatingSystemVersion(copy->type(), copy->majorVersion(), copy->minorVersion(), copy->microVersion());
        </custom-constructor>
        <custom-constructor type="default">
            new(placement) QOperatingSystemVersion(QOperatingSystemVersion::Unknown, -1);
        </custom-constructor>
        <!--modify-function signature="version() const" remove="all" since="6.3.0"/>
        <modify-function signature="majorVersion() const" remove="all" since="6.3.0"/>
        <modify-function signature="minorVersion() const" remove="all" since="6.3.0"/>
        <modify-function signature="microVersion() const" remove="all" since="6.3.0"/>
        <modify-function signature="segmentCount() const" remove="all" since="6.3.0"/>
        <modify-function signature="name() const" remove="all" since="6.3.0"/>
        <modify-function signature="type() const" remove="all" since="6.3.0"/>
        <modify-function signature="currentType()" remove="all" since="6.3.0"/-->
    </value-type>
    <enum-type name="QOperatingSystemVersion::OSType"/>
    <enum-type name="QOperatingSystemVersionBase::OSType" generate="no" since="6.3.0"/>
    <value-type name="QOperatingSystemVersionBase" java-name="QOperatingSystemVersion" generate="no" since="6.3.0">
        <!--custom-constructor type="copy">
            new(placement) QOperatingSystemVersionBase(copy->type(), copy->majorVersion(), copy->minorVersion(), copy->microVersion());
        </custom-constructor>
        <custom-constructor type="default">
            new(placement) QOperatingSystemVersionBase(QOperatingSystemVersionBase::Unknown, -1);
        </custom-constructor-->
    </value-type>
    <object-type name="QLibraryInfo">
    </object-type>
    <object-type name="QAnimationDriver">
    </object-type>
    <enum-type name="QDeadlineTimer::ForeverConstant"/>
    <value-type name="QDeadlineTimer">
        <custom-constructor>
            if(copy){
                    QDeadlineTimer* pointer = new(placement) QDeadlineTimer(copy->timerType());
                    pointer->setPreciseDeadline(0, copy->deadlineNSecs(), copy->timerType());
                    pointer->setPreciseRemainingTime(0, copy->remainingTimeNSecs(), copy->timerType());
                    return pointer;
            }else{
                    return new(placement) QDeadlineTimer();
            }
        </custom-constructor>
        <custom-constructor type="copy">
            QDeadlineTimer* pointer = new(placement) QDeadlineTimer(copy->timerType());
            pointer->setPreciseDeadline(0, copy->deadlineNSecs(), copy->timerType());
            pointer->setPreciseRemainingTime(0, copy->remainingTimeNSecs(), copy->timerType());
        </custom-constructor>
        <!--custom-constructor type="default">
            new(placement) QDeadlineTimer();
        </custom-constructor-->
        <modify-function signature="operator-(QDeadlineTimer)" rename="minus"/>
        <modify-function signature="operator-(long long)" rename="minus"/>
    </value-type>
    <object-type name="QConcatenateTablesProxyModel" since="5.13.0">
        <modify-function signature="addSourceModel(QAbstractItemModel*)">
            <modify-argument index="1">
                <reference-count action="add" variable-name="__rcSourceModel"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="removeSourceModel(QAbstractItemModel*)">
            <modify-argument index="1">
                <reference-count action="remove" variable-name="__rcSourceModel"/>
            </modify-argument>
        </modify-function>
    </object-type>
    <object-type name="QTransposeProxyModel" since="5.13.0">
        <modify-function signature="setSourceModel(QAbstractItemModel*)">
            <modify-argument index="1">
                <reference-count action="set" variable-name="__rcSourceModel"/>
            </modify-argument>
        </modify-function>
    </object-type>
    <functional-type name="QFunctionPointer" function-name="invoke" generate="no-shell"/>
    <object-type name="QLibrary"/>
    <enum-type name="QString::SplitBehavior" until="5.13"/>
    <enum-type name="QString::SectionFlag" flags="QString::SectionFlags"/>
	<value-type name="QString">
        <modify-function signature="QString(const char*)" remove="all"/>
        <modify-function signature="append(const char*)" remove="all"/>
        <modify-function signature="prepend(const char*)" remove="all"/>
        <modify-function signature="QString(QLatin1StringView)" remove="all" since="6.4"/>
        <modify-function signature="QString(QLatin1String)" remove="all" until="6.3"/>
        <modify-function signature="prepend(QStringView)" remove="all" since="5.10"/>
        <modify-function signature="prepend(QLatin1StringView)" remove="all" since="6.4"/>
        <modify-function signature="prepend(QLatin1String)" remove="all" until="6.3"/>
        <modify-function signature="prepend(QStringRef)" remove="all" until="5.*"/>
        <modify-function signature="compare(QString,QStringRef,Qt::CaseSensitivity)" remove="all" until="5.*"/>
        <modify-function signature="compare(QStringRef,Qt::CaseSensitivity)const" remove="all" until="5.*"/>
        <modify-function signature="contains(QStringRef,Qt::CaseSensitivity)const" remove="all" until="5.*"/>
        <modify-function signature="count(QStringRef,Qt::CaseSensitivity)const" remove="all" until="5.*"/>
        <modify-function signature="endsWith(QStringRef,Qt::CaseSensitivity)const" remove="all" until="5.*"/>
        <modify-function signature="startsWith(QStringRef,Qt::CaseSensitivity)const" remove="all" until="5.*"/>
        <modify-function signature="localeAwareCompare(QStringRef)const" remove="all" until="5.*"/>
        <modify-function signature="localeAwareCompare(QString,QStringRef)" remove="all" until="5.*"/>
        <modify-function signature="arg(QString,QString)const" remove="all" until="5.*"/>
        <modify-function signature="arg(QString,QString,QString)const" remove="all" until="5.*"/>
        <modify-function signature="arg(QString,QString,QString,QString)const" remove="all" until="5.*"/>
        <modify-function signature="arg(QString,QString,QString,QString,QString)const" remove="all" until="5.*"/>
        <modify-function signature="arg(QString,QString,QString,QString,QString,QString)const" remove="all" until="5.*"/>
        <modify-function signature="arg(QString,QString,QString,QString,QString,QString,QString)const" remove="all" until="5.*"/>
        <modify-function signature="arg(QString,QString,QString,QString,QString,QString,QString,QString)const" remove="all" until="5.*"/>
        <modify-function signature="arg(QString,QString,QString,QString,QString,QString,QString,QString,QString)const" remove="all" until="5.*"/>
        <modify-function signature="contains(QRegExp)const" remove="all" until="5.*"/>
        <modify-function signature="append(QStringRef)" remove="all" until="5.*"/>
        <modify-function signature="append(QStringView)" remove="all" since="5.10"/>
        <modify-function signature="append(QLatin1StringView)" remove="all" since="6.4"/>
        <modify-function signature="append(QLatin1String)" remove="all" until="6.3"/>
        <modify-function signature="lastIndexOf(QStringView,Qt::CaseSensitivity)const" remove="all" since="6.0"/>
        <modify-function signature="lastIndexOf(QStringView,qsizetype,Qt::CaseSensitivity)const" remove="all" since="6.0"/>
        <modify-function signature="lastIndexOf(QStringView,int,Qt::CaseSensitivity)const" remove="all" since="5.10" until="5.*"/>
        <modify-function signature="indexOf(QStringView,qsizetype,Qt::CaseSensitivity)const" remove="all" since="6.0"/>
        <modify-function signature="indexOf(QStringView,int,Qt::CaseSensitivity)const" remove="all" since="5.10" until="5.*"/>
        <modify-function signature="indexOf(QStringRef,int,Qt::CaseSensitivity)const" remove="all" until="5.*"/>
        <modify-function signature="startsWith(QStringView,Qt::CaseSensitivity)const" remove="all" since="5.10"/>
        <modify-function signature="endsWith(QStringView,Qt::CaseSensitivity)const" remove="all" since="5.10"/>
        <modify-function signature="count(QStringView,Qt::CaseSensitivity)const" remove="all" since="6.0"/>
        <modify-function signature="contains(QStringView,Qt::CaseSensitivity)const" remove="all" since="5.10"/>
        <modify-function signature="compare(QStringView,Qt::CaseSensitivity)const" remove="all" since="6.0"/>
        <modify-function signature="compare(QStringView,QString,Qt::CaseSensitivity)" remove="all" since="6.0"/>
        <modify-function signature="compare(QString,QStringView,Qt::CaseSensitivity)" remove="all" since="6.0"/>
        <modify-function signature="lastIndexOf(QLatin1StringView,Qt::CaseSensitivity)const" remove="all" since="6.4"/>
        <modify-function signature="lastIndexOf(QLatin1StringView,qsizetype,Qt::CaseSensitivity)const" remove="all" since="6.4"/>
        <modify-function signature="indexOf(QLatin1StringView,qsizetype,Qt::CaseSensitivity)const" remove="all" since="6.4"/>
        <modify-function signature="startsWith(QLatin1StringView,Qt::CaseSensitivity)const" remove="all" since="6.4"/>
        <modify-function signature="endsWith(QLatin1StringView,Qt::CaseSensitivity)const" remove="all" since="6.4"/>
        <modify-function signature="contains(QLatin1StringView,Qt::CaseSensitivity)const" remove="all" since="6.4"/>
        <modify-function signature="lastIndexOf(QStringRef,int,Qt::CaseSensitivity)const" remove="all" until="5.*"/>
        <modify-function signature="lastIndexOf(QLatin1String,int,Qt::CaseSensitivity)const" remove="all" since="5.10" until="5.*"/>
        <modify-function signature="lastIndexOf(QLatin1String,qsizetype,Qt::CaseSensitivity)const" remove="all" since="6.0" until="6.3"/>
        <modify-function signature="lastIndexOf(QLatin1String,Qt::CaseSensitivity)const" remove="all" since="6.0" until="6.3"/>
        <modify-function signature="indexOf(QLatin1String,qsizetype,Qt::CaseSensitivity)const" remove="all" since="6.0" until="6.3"/>
        <modify-function signature="indexOf(QLatin1String,int,Qt::CaseSensitivity)const" remove="all" since="5.10" until="5.*"/>
        <modify-function signature="startsWith(QLatin1String,Qt::CaseSensitivity)const" remove="all" until="6.3"/>
        <modify-function signature="endsWith(QLatin1String,Qt::CaseSensitivity)const" remove="all" until="6.3"/>
        <modify-function signature="contains(QLatin1String,Qt::CaseSensitivity)const" remove="all" until="6.3"/>
        <modify-function signature="compare(QLatin1StringView,QString,Qt::CaseSensitivity)" remove="all" since="6.4"/>
        <modify-function signature="compare(QLatin1String,QString,Qt::CaseSensitivity)" remove="all" until="6.3"/>
        <modify-function signature="compare(QLatin1StringView,Qt::CaseSensitivity)const" remove="all" since="6.4"/>
        <modify-function signature="compare(QString,QLatin1StringView,Qt::CaseSensitivity)" remove="all" since="6.4"/>
        <modify-function signature="compare(QString,QLatin1String,Qt::CaseSensitivity)" remove="all" until="6.3"/>
        <modify-function signature="compare(QLatin1String,Qt::CaseSensitivity)const" remove="all" until="6.3"/>
        <modify-function signature="insert(qsizetype,QLatin1StringView)" remove="all" since="6.4"/>
        <modify-function signature="replace(QChar,QLatin1StringView,Qt::CaseSensitivity)" remove="all" since="6.4"/>
        <modify-function signature="replace(QLatin1StringView,QLatin1StringView,Qt::CaseSensitivity)" remove="all" since="6.4"/>
        <modify-function signature="replace(QString,QLatin1StringView,Qt::CaseSensitivity)" remove="all" since="6.4"/>
        <modify-function signature="replace(QLatin1StringView,QString,Qt::CaseSensitivity)" remove="all" since="6.4"/>
        <modify-function signature="remove(QLatin1StringView,Qt::CaseSensitivity)" remove="all" since="6.4"/>
        <modify-function signature="insert(qsizetype,QLatin1String)" remove="all" since="6.0" until="6.3"/>
        <modify-function signature="replace(QChar,QLatin1String,Qt::CaseSensitivity)" remove="all" until="6.3"/>
        <modify-function signature="replace(QLatin1String,QLatin1String,Qt::CaseSensitivity)" remove="all" until="6.3"/>
        <modify-function signature="replace(QString,QLatin1String,Qt::CaseSensitivity)" remove="all" until="6.3"/>
        <modify-function signature="replace(QLatin1String,QString,Qt::CaseSensitivity)" remove="all" until="6.3"/>
        <modify-function signature="remove(QLatin1String,Qt::CaseSensitivity)" remove="all" until="6.3"/>
        <modify-function signature="localeAwareCompare(QStringView,QStringView)" remove="all" since="6.0"/>
        <modify-function signature="insert(qsizetype,QStringView)" remove="all" since="6.0"/>
        <modify-function signature="insert(int,QStringRef)" remove="all" until="5.*"/>
        <modify-function signature="insert(int,QLatin1String)" remove="all" until="5.*"/>
        <modify-function signature="insert(int,QStringView)" remove="all" since="5.10" until="5.*"/>
        <modify-function signature="insert(int,const char*)" remove="all" until="5.*"/>
        <modify-function signature="insert(qsizetype,const char*)" remove="all" since="6.0"/>
		<modify-function signature="indexOf(QRegExp,int)const" remove="all" until="5.*"/>
		<modify-function signature="lastIndexOf(QRegExp,int)const" remove="all" until="5.*"/>
        <modify-function signature="erase(const QChar*,const QChar*)" remove="all" since="6.0"/>
        <modify-function signature="number(long,int)" remove="all"/>
        <modify-function signature="number(unsigned long,int)" remove="all"/>
        <modify-function signature="number(unsigned int,int)" remove="all"/>
        <modify-function signature="number(unsigned long long,int)" remove="all"/>
        <modify-function signature="arg(long,int,int,QChar)const" remove="all"/>
        <modify-function signature="arg(unsigned long,int,int,QChar)const" remove="all"/>
        <modify-function signature="arg(unsigned long long,int,int,QChar)const" remove="all"/>
        <modify-function signature="arg(unsigned int,int,int,QChar)const" remove="all"/>
        <modify-function signature="arg(unsigned short,int,int,QChar)const" remove="all"/>
        <modify-function signature="front()" remove="all" since="6.0"/>
        <modify-function signature="back()" remove="all" since="6.0"/>
        <modify-function signature="end()" remove="all"/>
        <modify-function signature="cend()const" remove="all"/>
        <modify-function signature="constEnd()const" remove="all"/>
        <modify-function signature="begin()" remove="all"/>
        <modify-function signature="cbegin()const" remove="all"/>
        <modify-function signature="constBegin()const" remove="all"/>
        <modify-function signature="constData()const" remove="all"/>
        <modify-function signature="end()const" remove="all"/>
        <modify-function signature="begin()const" remove="all"/>
        <modify-function signature="data()" remove="all"/>
        <modify-function signature="data()const" remove="all"/>
        <modify-function signature="localeAwareCompare(QStringView)const" remove="all" since="6.0"/>
        <modify-function signature="arg(QLatin1StringView,int,QChar)const" remove="all" since="6.4"/>
        <modify-function signature="arg(QLatin1String,int,QChar)const" remove="all" until="6.3"/>
        <modify-function signature="arg(QStringView,int,QChar)const" remove="all"/>
        <modify-function signature="setNum(long, int)" remove="all"/>
        <modify-function signature="setNum(unsigned long long, int)" remove="all"/>
        <modify-function signature="setNum(unsigned long, int)" remove="all"/>
        <modify-function signature="setNum(unsigned int, int)" remove="all"/>
        <modify-function signature="setNum(unsigned short, int)" remove="all"/>
        <modify-function signature="operator=(char)" remove="all" until="5.*"/>
        <modify-function signature="operator+=(char)" remove="all" until="5.*"/>
        <modify-function signature="operator+=(QChar)" remove="all"/>
        <modify-function signature="operator+=(QStringRef)" remove="all" until="5.*"/>
        <modify-function signature="operator+=(QLatin1String)" remove="all" until="6.3"/>
        <modify-function signature="operator+=(QLatin1StringView)" remove="all" since="6.4"/>
        <modify-function signature="operator+=(QStringView)" remove="all"/>
        <modify-function signature="operator+=(QByteArray)" remove="all"/>
        <modify-function signature="operator+=(QString)" remove="all"/>
        <modify-function signature="operator+=(const char*)" remove="all"/>
        <modify-function signature="operator=(QChar)" remove="all"/>
        <modify-function signature="operator=(QLatin1String)" remove="all" until="6.3"/>
        <modify-function signature="operator=(QLatin1StringView)" remove="all" since="6.4"/>
        <modify-function signature="operator=(QByteArray)" remove="all"/>
        <modify-function signature="operator=(QString)" remove="all"/>
        <modify-function signature="operator=(const char*)" remove="all"/>
        <modify-function signature="operator>(const char16_t*)" remove="all" since="6.0"/>
        <modify-function signature="operator>=(const char16_t*)" remove="all" since="6.0"/>
        <modify-function signature="operator&lt;=(const char16_t*)" remove="all" since="6.0"/>
        <modify-function signature="operator&lt;(const char16_t*)" remove="all" since="6.0"/>
        <modify-function signature="operator==(const char16_t*)" remove="all" since="6.0"/>
        <modify-function signature="operator!=(const char16_t*)" remove="all" since="6.0"/>
        <modify-function signature="operator[](uint)const" remove="all" until="5.*"/>
        <modify-function signature="operator[](qsizetype)" remove="all" since="6.0"/>
        <modify-function signature="operator[](int)const" remove="all" until="5.*"/>
        <modify-function signature="operator[](qsizetype)const" remove="all" since="6.0"/>
        <modify-function signature="operator&lt;(const char*)const" remove="all"/>
        <modify-function signature="operator&lt;(std::nullptr_t)" remove="all" since="6.0"/>
        <modify-function signature="operator&lt;=(std::nullptr_t)" remove="all" since="6.0"/>
        <modify-function signature="operator>=(std::nullptr_t)" remove="all" since="6.0"/>
        <modify-function signature="operator>(std::nullptr_t)" remove="all" since="6.0"/>
        <modify-function signature="operator==(std::nullptr_t)" remove="all" since="6.0"/>
        <modify-function signature="operator==(const char*)const" remove="all"/>
        <modify-function signature="operator!=(const char*)const" remove="all"/>
        <modify-function signature="operator>(const char*)const" remove="all"/>
        <modify-function signature="operator>=(const char*)const" remove="all"/>
        <modify-function signature="operator&lt;=(const char*)const" remove="all"/>
        <modify-function signature="operator&lt;(QLatin1String)const" remove="all" until="5.10"/>
        <modify-function signature="operator&lt;(QLatin1String)" remove="all" since="6.0" until="6.3"/>
        <modify-function signature="operator&lt;(QLatin1StringView)" remove="all" since="6.4"/>
        <modify-function signature="operator&lt;=(QLatin1String)" remove="all" since="6.0" until="6.3"/>
        <modify-function signature="operator&lt;=(QLatin1StringView)" remove="all" since="6.4"/>
        <modify-function signature="operator>(QLatin1String)" remove="all" since="6.0" until="6.3"/>
        <modify-function signature="operator>(QLatin1StringView)" remove="all" since="6.4"/>
        <modify-function signature="operator>=(QLatin1String)" remove="all" since="6.0" until="6.3"/>
        <modify-function signature="operator>=(QLatin1StringView)" remove="all" since="6.4"/>
        <modify-function signature="operator==(QLatin1String)" remove="all" since="6.0" until="6.3"/>
        <modify-function signature="operator==(QLatin1StringView)" remove="all" since="6.4"/>
	</value-type>
    <!--enum-type name="QChar::SpecialCharacter"/>
    <enum-type name="QChar::Category"/>
    <enum-type name="QChar::Script"/>
    <enum-type name="QChar::Direction"/>
    <enum-type name="QChar::Decomposition"/>
    <enum-type name="QChar::JoiningType"/>
    <enum-type name="QChar::Joining"/>
    <enum-type name="QChar::CombiningClass"/>
    <enum-type name="QChar::UnicodeVersion"/>
	<value-type name="QChar">
        <modify-function signature="QChar(unsigned char)" remove="all"/>
        <modify-function signature="QChar(unsigned int)" remove="all"/>
	</value-type-->
    <object-type name="QtJambiStringList" extend-type="QStringList"/>
    <object-type name="QtJambiItemSelection" extend-type="QItemSelection" since="6.0"/>
    <enum-type name="Qt::SplitBehaviorFlags" flags="Qt::SplitBehavior" since="5.14.0" />
    <enum-type name="QLibrary::LoadHint" flags="QLibrary::LoadHints"/>
    <object-type name="QPluginLoader" since="5.13.0">
    </object-type>
    <object-type name="QFactoryLoader" since="5.13.0">
    </object-type>
    <value-type name="QPluginParsedMetaData" since="6.3.0">
        <custom-constructor type="copy">
            new(placement) QCborValue(copy->toCbor());
        </custom-constructor>
        <modify-function signature="QPluginParsedMetaData(QByteArrayView)" remove="all"/>
        <modify-function signature="toJson() const" remove="all"/>
    </value-type>
    <value-type name="QStaticPlugin" since="5.13.0">
        <extra-includes>
            <include file-name="qtjambi/qtjambi_jobjectwrapper.h" location="global"/>
        </extra-includes>
        <!--modify-function signature="operator=(const QStaticPlugin&amp;)" remove="all"/-->
    </value-type>
    <rejection class="QMetaType" function-name="destroy"/>
    <rejection class="QMetaType" function-name="construct"/>
    <rejection class="QMetaType" function-name="create"/>
    <rejection class="QMetaType" function-name="destruct"/>
    <rejection class="QMetaType" function-name="compare"/>
    <rejection class="QMetaType" function-name="convert"/>
    <rejection class="QMetaType" function-name="equals"/>
    <rejection class="QMetaType" function-name="load"/>
    <rejection class="QMetaType" function-name="save"/>
    <rejection class="QMetaType" function-name="hasRegisteredComparators"/>
    <rejection class="QMetaType" function-name="registerDebugStreamOperator"/>
    <rejection class="QMetaType" function-name="registerConverter"/>
    <rejection class="QMetaType" function-name="registerComparators"/>
    <rejection class="QMetaType" function-name="registerEqualsComparator"/>
    <rejection class="QMetaType" function-name="registerNormalizedTypedef"/>
    <rejection class="QMetaType" function-name="registerTypedef"/>
    <rejection class="QMetaType" function-name="hasRegisteredConverterFunction"/>
    <rejection class="QMetaType" function-name="hasRegisteredMutableViewFunction"/>
    <rejection class="QMetaType" function-name="unregisterConverterFunction"/>
    <rejection class="QtPrivate::QMetaTypeInterface"/>
    <rejection class="QMetaType" function-name="fromType" since="5.15.0"/>
    <value-type name="QMetaType">
        <custom-constructor>
        if(copy){
            return new(placement) QMetaType(copy->id());
        }else{
            return new(placement) QMetaType();
        }
        </custom-constructor>
        <modify-function signature="operator=(const QMetaType &amp;)" remove="all" until="5.*"/>
    </value-type>
    <enum-type name="QMetaType::TypeFlag" flags="QMetaType::TypeFlags">
        <reject-enum-value name="MovableType" since="6.0.0"/>
    </enum-type>
    <value-type name="QPartialOrdering" generate="no" since="6.0.0">
    </value-type>
    <enum-type name="QResource::Compression"/>
    <object-type name="QResource">
    </object-type>
    <enum-type name="QSharedMemory::AccessMode">
    </enum-type>
    <enum-type name="QSharedMemory::SharedMemoryError">
    </enum-type>
    <object-type name="QSharedMemory">
        <modify-function signature="data()const" remove="all"/>
        <modify-function signature="constData()const" remove="all"/>
    </object-type>
    <enum-type name="QMetaType::Type" extensible="yes">
        <reject-enum-value name="QReal" remove="yes"/>
        <reject-enum-value name="FirstCoreType"/>
        <reject-enum-value name="LastCoreType"/>
        <reject-enum-value name="FirstGuiType"/>
        <reject-enum-value name="LastGuiType"/>
        <reject-enum-value name="FirstWidgetsType"/>
        <reject-enum-value name="LastWidgetsType"/>
        <reject-enum-value name="HighestInternalId"/>
    </enum-type>
    <value-type name="QCalendar" since="5.14.0">
        <modify-function signature="QCalendar(QLatin1String)" remove="all" until="6.3.*"/>
    </value-type>
    <value-type name="QCalendar::YearMonthDay" since="5.14.0">
    </value-type>
    <enum-type name="QCalendar::System" since="5.14.0">
        <reject-enum-value name="Last"/>
    </enum-type>
    <enum-type name="QDateTime::YearRange" since="5.14.0">
    </enum-type>
    <object-type name="QBasicMutex">
        <modify-function signature="lock()" access="non-final"/>
        <modify-function signature="unlock()" access="non-final"/>
        <modify-function signature="tryLock()" access="non-final"/>
        <modify-function signature="isRecursive()" remove="all" until="5.*"/>
    </object-type>
    <object-type name="QRecursiveMutex">
    </object-type>
    <object-type name="QMutex">
        <modify-function signature="isRecursive()const" remove="all" until="5.*"/>
        <modify-function signature="try_lock()" rename="tryLock"/>
    </object-type>
    <object-type name="QSemaphore">
    </object-type>
    <enum-type name="QSystemSemaphore::AccessMode" />
    <enum-type name="QSystemSemaphore::SystemSemaphoreError" />
    <object-type name="QSystemSemaphore">
        <modify-function signature="tr(const char *, const char *, int)" remove="all" since="6.1.0"/>
    </object-type>
    <object-type name="QReadWriteLock">
    </object-type>
    <enum-type name="QReadWriteLock::RecursionMode" />
    <enum-type name="QMutex::RecursionMode"/>
    <object-type name="QWaitCondition">
        <modify-function signature="notify_all()" remove="all"/>
        <modify-function signature="notify_one()" remove="all"/>
    </object-type>
    <object-type name="QUntypedPropertyData" since="6.0.0">
    </object-type>
    <value-type name="QUntypedBindable" since="6.0.0">
        <modify-function signature="QUntypedBindable(QUntypedPropertyData *, const QtPrivate::QBindableInterface *)" remove="non-native"/>
        <modify-function signature="takeBinding()" access="non-final" since="6.1.0"/>
    </value-type>
    <object-type name="QPropertyObserverBase" since="6.0.0">
        <modify-function signature="QPropertyObserverBase()" remove="all"/>
    </object-type>
    <object-type name="QtPrivate::QBindableInterface" since="6.0.0">
        <modify-function signature="QBindableInterface()" remove="all"/>
    </object-type>
    <rejection class="QtPrivate::QBindableInterface" field-name="getter" since="6.0.0"/>
    <rejection class="QtPrivate::QBindableInterface" field-name="setter" since="6.0.0"/>
    <rejection class="QtPrivate::QBindableInterface" field-name="makeBinding" since="6.0.0"/>
    <rejection class="QtPrivate::QBindableInterface" field-name="setBinding" since="6.0.0"/>
    <rejection class="QtPrivate::QBindableInterface" field-name="getBinding" since="6.0.0"/>
    <rejection class="QtPrivate::QBindableInterface" field-name="setObserver" since="6.0.0"/>
    <rejection class="QtPrivate::QBindableInterface" field-name="metaType" since="6.0.0"/>
    <rejection class="QtPrivate::QBindableInterface" field-name="MetaTypeAccessorFlag" since="6.2.0"/>
    <object-type name="QPropertyObserver" since="6.0.0">
    </object-type>
    <value-type name="QPropertyBindingError" since="6.0.0">
        <modify-function signature="operator=(const QPropertyBindingError&amp;)" remove="all"/>
    </value-type>
    <enum-type name="QPropertyBindingError::Type" since="6.0.0">
    </enum-type>
    <value-type name="QUntypedPropertyBinding" since="6.0.0">
        <modify-function signature="QUntypedPropertyBinding(const QUntypedPropertyBinding&amp;)" remove="non-native"/>
        <modify-function signature="operator=(const QUntypedPropertyBinding&amp;)" remove="all"/>
    </value-type>
    <rejection class="QPropertyObserverBase::ChangeHandler"/>
    <object-type name="QtPrivate::QPropertyBindingData" since="6.0.0">
        <modify-field name="BindingBit" read="no" write="no"/>
        <modify-field name="DelayedNotificationBit" read="no" write="no" since="6.2.0"/>
    </object-type>
    <value-type name="QPropertyBindingSourceLocation" generate="no" since="6.0.0">
    </value-type>
    <object-type name="QBindingStorage" force-friendly="yes" since="6.0.0">
    </object-type>
    <functional-type name="QtPrivate::QPropertyObserverCallback" java-name="QPropertyObserverCallback" generate="no" since="6.0.0"/>
    <functional-type name="QtPrivate::QPropertyBindingWrapper" java-name="QPropertyBindingWrapper" generate="no" since="6.0.0"/>
    <object-type name="QLoggingCategory">
        <modify-function signature="operator()()" remove="all"/>
        <modify-function signature="operator()()const" remove="all"/>
    </object-type>
    <functional-type name="QLoggingCategory::CategoryFilter"/>
    <object-type name="QMessageLogContext">
    </object-type>
    <rejection class="QDebug::Stream"/>
    <rejection class="QDebug" enum-name="Latin1Content"/>
    <enum-type name="QDebug::VerbosityLevel" force-integer="true"/>
    <object-type name="QDebugStateSaver">
    </object-type>
    <value-type name="QDebug">
        <custom-constructor>
        if(copy){
            return new(placement) QDebug(*copy);
        }else{
            return new(placement) QDebug(QtDebugMsg);
        }
        </custom-constructor>
        <custom-constructor type="default">
            new(placement) QDebug(QtDebugMsg);
        </custom-constructor>
        <modify-function signature="QDebug(QString *)" remove="all"/>
        <modify-function signature="operator=(QDebug)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(QLatin1StringView)" remove="all" since="6.4.0"/>
        <modify-function signature="operator&lt;&lt;(QLatin1String)" remove="all" until="6.3"/>
        <modify-function signature="operator&lt;&lt;(QString)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(QStringRef)" remove="all" until="5.*"/>
        <modify-function signature="operator&lt;&lt;(QStringView)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(QUtf8StringView)" remove="all" since="6.0.0"/>
        <modify-function signature="operator&lt;&lt;(const void*)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(uint)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(ulong)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(unsigned short)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(signed long)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(unsigned long long)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(std::nullptr_t)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(char16_t)" remove="all"/>
        <modify-function signature="operator&lt;&lt;(const char16_t*)" remove="all" since="6.0.0"/>
        <modify-function signature="operator&lt;&lt;(char32_t)" remove="all"/>
    </value-type>
    <enum-type name="QRandomGenerator::System" generate="no"/>
    <object-type name="QRandomGenerator">
        <modify-function signature="operator()()" remove="all"/>
        <modify-function signature="QRandomGenerator(QRandomGenerator::System)" remove="all"/>
        <modify-function signature="QRandomGenerator(QRandomGenerator)" remove="all"/>
        <modify-function signature="QRandomGenerator(const unsigned int *, const unsigned int *)" remove="all"/>
        <modify-function signature="generate(unsigned int *, unsigned int *)" remove="all"/>
        <modify-function signature="QRandomGenerator(const unsigned int *, qsizetype)" remove="all"/>
        <modify-function signature="operator=(QRandomGenerator)" remove="all"/>
    </object-type>
    <functional-type name="QtMessageHandler"/>
    <rejection class="QUntypedPropertyData::InheritsQUntypedPropertyData"/>
    <rejection class="QPropertyData::DisableRValueRefs"/>
    <rejection class="QtPrivate::BindingFunctionVTable"/>
    <rejection class="QUntypedPropertyBinding::BindingFunctionVTable"/>
    <namespace-type name="QNativeInterface" since="6.0.0" generate="no">
    </namespace-type>
    <namespace-type name="QNativeInterface::Private" since="6.0.0" generate="no">
    </namespace-type>
    <interface-type name="QNativeInterface::QAndroidApplication" pp-condition="defined(Q_OS_ANDROID) &amp;&amp; !defined(Q_OS_ANDROID_EMBEDDED)" generate="no-shell" since="6.2.0">
        <modify-function signature="QAndroidApplication()" remove="all"/>
    </interface-type>
    <value-type name="QHashSeed" since="6.2.0">
        <modify-function signature="operator size_t() const" rename="seed"/>
    </value-type>
    
    <suppress-warning text="WARNING(Preprocessor) :: No such file or directory: *"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: signature 'operator&lt;&lt;(char16_t)' for function modification in 'QDebug' not found.*"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: signature 'operator&lt;&lt;(char32_t)' for function modification in 'QDebug' not found.*"/>
    <suppress-warning text="WARNING(JavaGenerator) :: No ==/!= operator found for value type QHashSeed."/>
    <suppress-warning text="WARNING(JavaGenerator) :: No ==/!= operator found for value type QDebug."/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QUtf8StringView'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QAnyStringView'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QLatin1StringView'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QTextStreamFunction'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QTextStreamManipulator'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QDebug::Latin1Content'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QAbstractFileEngine::ExtensionOption const\*'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QAbstractFileEngine::Iterator\*'"/>

    <!-- Inefficient hash codes -->
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QVariantAnimation::registerInterpolator', unmatched parameter type '*Interpolator'" />

    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'Qt::Initialization'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'std::*'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type '*Private\*'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type '*Private const\*'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type '*Private&amp;'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QMetaObject'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'const QMetaMethod&amp;'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'FILE\*'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QByteArray::Data\*'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QByteArrayDataPtr'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QTSMFC'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QTSMFI'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QDataStream::ByteOrder'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'Data::AllocationOptions'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QJsonValueRef'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type '*QJsonArray::const_iterator*'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type '*QJsonArray::iterator*'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping 'QJsonArray::*' unmatched *type '*iterator'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type '*QJsonObject::const_iterator*'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type '*QJsonObject::iterator*'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QJsonPrivate::Data\*'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'const QMimeTypePrivate&amp;'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: visibility of function '*' modified in class '*'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: hiding of function '*' in class '*'"/>
    <suppress-warning text="WARNING(CppImplGenerator) :: protected function '*' in final class '*'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QPointer&lt;*&gt;'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QVector&lt;*&gt;'"/>
    <suppress-warning text="* private virtual function '*' in 'QAbstractListModel'"/>
    <suppress-warning text="* private virtual function '*' in 'QAbstractTableModel'"/>
    <suppress-warning text="* private virtual function '*' in 'QListWidget'"/>
    <suppress-warning text="* private virtual function '*' in 'QTreeWidget'"/>
    <suppress-warning text="* private virtual function '*' in 'QFontDialog'"/>
    <suppress-warning text="* private virtual function '*' in 'QTableWidget'"/>
    <suppress-warning text="* private virtual function '*' in 'QTextCodecPlugin'"/>
    <suppress-warning text="* private virtual function '*' in 'QSaveFile'" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QFutureWatcherBase::futureInterface', unmatched return type 'QFutureInterfaceBase&amp;'" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QFutureWatcherBase::futureInterface', unmatched return type 'const QFutureInterfaceBase&amp;'" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QFutureWatcher::futureInterface', unmatched return type 'QFutureInterfaceBase&amp;'" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QFutureWatcher::futureInterface', unmatched return type 'const QFutureInterfaceBase&amp;'" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: unknown operator 'T'" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QFuture::constBegin', unmatched return type 'const_iterator'" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QFuture::end', unmatched return type 'const_iterator'" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QFuture::constEnd', unmatched return type 'const_iterator'" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QFuture::QFuture', unmatched parameter type 'QFutureInterface&lt;T&gt;*'" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QFuture::begin', unmatched return type 'const_iterator'" />
    <suppress-warning text="WARNING(Parser) :: ** WARNING scope not found for function definition: 'QtPrivate::IsMetaTypePair&lt;T,true>::registerConverter' - definition *ignored*" />
    <suppress-warning text="WARNING(Parser) :: ** WARNING scope not found for function definition: 'QFuture&lt;void&gt;::operator=' - definition *ignored*" />
    <suppress-warning text="WARNING(Parser) :: ** WARNING scope not found for function definition: 'QFutureInterface&lt;void&gt;::future' - definition *ignored*" />
    <suppress-warning text="WARNING(Parser) :: ** WARNING scope not found for function definition: 'QFutureWatcher&lt;void&gt;::setFuture' - definition *ignored*" />

    <suppress-warning text="WARNING(MetaJavaBuilder) :: unmatched enum ~0u" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: unhandled enum value: ~0u in Qt::GestureType" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: signature 'mapped(QWidget*)' for function modification in 'QSignalMapper' not found. Possible candidates: mapped(QObject*) in QSignalMapper, mapped(QString) in QSignalMapper, mapped(int) in QSignalMapper" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: signature 'mapping(QWidget*)const' for function modification in 'QSignalMapper' not found. Possible candidates: mapping(QObject*)const in QSignalMapper, mapping(QString)const in QSignalMapper, mapping(int)const in QSignalMapper" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: signature 'setMapping(QObject*,QWidget*)' for function modification in 'QSignalMapper' not found. Possible candidates: setMapping(QObject*,QObject*) in QSignalMapper, setMapping(QObject*,QString) in QSignalMapper, setMapping(QObject*,int) in QSignalMapper" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function *, unmatched parameter type 'QWidget*'" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: namespace '*' does not have a type entry" />
    <suppress-warning text="WARNING(MetaJavaBuilder) :: type 'JObjectWrapper' is specified in typesystem, but not defined. This could potentially lead to compilation errors." />
    <suppress-warning text="WARNING() :: Duplicate type entry: 'QXmlStreamReader::Error'" />
  <suppress-warning text="WARNING() :: Duplicate type entry: 'QXmlStreamReader::TokenType'" />
  <suppress-warning text="WARNING() :: Duplicate type entry: 'QXmlStreamReader::ReadElementTextBehaviour'" />
  <suppress-warning text="WARNING() :: Duplicate type entry: 'QXmlStreamAttribute'" />
  <suppress-warning text="WARNING() :: Duplicate type entry: 'QXmlStreamAttributes'" />
  <suppress-warning text="WARNING() :: Duplicate type entry: 'QXmlStreamNamespaceDeclaration'" />
  <suppress-warning text="WARNING() :: Duplicate type entry: 'QXmlStreamNotationDeclaration'" />
  <suppress-warning text="WARNING() :: Duplicate type entry: 'QXmlStreamEntityDeclaration'" />
  <suppress-warning text="WARNING() :: Duplicate type entry: 'QXmlStreamReader'" />
  <suppress-warning text="WARNING() :: Duplicate type entry: 'QXmlStreamWriter'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QJsonDocument::QJsonDocument', unmatched parameter type '*QJsonPrivate::Data*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QJsonValue::QJsonValue', unmatched parameter type '*QJsonPrivate::Data*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QJsonArray::QJsonArray', unmatched parameter type '*QJsonPrivate::Data*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: type * is specified in typesystem, but not defined. This could potentially lead to compilation errors." />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: enum * is specified in typesystem, but not declared" />
  <suppress-warning text="WARNING(Parser) :: ** WARNING scope not found for function definition: '*' - definition *ignored*" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched parameter type '*QListData::*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched parameter type '*QtPrivate::*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QPair::*', unmatched parameter type '*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: isFunctionPointer: *" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched parameter type '*QAbstractNativeEventFilter*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: template baseclass 'QListSpecialMethods&lt;T&gt;' of 'List' is not known" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: signature 'parent()const' for function modification in '*' not found. Possible candidates: parent(QModelIndex)const in *" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: signature 'operator&lt;(QCollatorSortKey,QCollatorSortKey)' for function modification in 'QCollatorSortKey' not found. Possible candidates: operator&lt;(QCollatorSortKey) in QCollatorSortKey" />
  <suppress-warning text="WARNING(Parser) :: scope not found for function definition: 'QListSpecialMethods*::*' - definition *ignored*" />
  <suppress-warning text="WARNING(Parser) :: scope not found for function definition: 'QtPrivate::IsMetaTypePair*::registerConverter' - definition *ignored*" />
  <suppress-warning text="WARNING(Parser) :: scope not found for function definition: 'QSharedPointer*::toWeakRef' - definition *ignored*" />
  <suppress-warning text="WARNING(Parser) :: scope not found for function definition: 'QFutureInterface*::future' - definition *ignored*" />
  <suppress-warning text="WARNING(Parser) :: scope not found for function definition: 'QFutureWatcher*::setFuture' - definition *ignored*" />
  <suppress-warning text="WARNING(Parser) :: scope not found for function definition: 'QVectorSpecialMethods&lt;QString>::*' - definition *ignored*" />
  <suppress-warning text="WARNING(Parser) :: scope not found for symbol: QMetaTypeForType&lt;T>::*" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: enum 'ObjectDeletionPolicy' does not have a type entry or is not an enum" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: enum 'InternalFunction' does not have a type entry or is not an enum" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QMap::*', *" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QHash::*', *" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QMultiMap::*', *" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QMultiHash::*', *" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QVector::*', *" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QSet::*', *" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QLinkedList::*', *" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QList::*', *" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping field 'LinkedList$Iterator::i' with unmatched type 'Node'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping field 'List$Iterator::i' with unmatched type 'Node'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QDBusReply::*', unmatched *type '*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping field 'QIterator::i' with unmatched type 'Node'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: signature 'operator*()' for function modification in '*::const_iterator' not found. Possible candidates: *" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: signature 'operator++()' for function modification in '*::const_iterator' not found. Possible candidates: *" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: signature 'operator--()' for function modification in '*::const_iterator' not found. Possible candidates: *" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: signature '*::iterator()' for function modification in '*::iterator' not found. Possible candidates: *" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: signature '*::iterator(*::iterator)' for function modification in '*::iterator' not found. Possible candidates: *" />
  <suppress-warning text="WARNING(Preprocessor) :: qtjambi_masterinclude.h:*  &lt;*/*>: No such file or directory" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Final class 'QAbstractAnimation' set to non-final, as it is extended by other classes" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: signature 'beginEntryList*' for function modification in 'QAbstractFileEngine' not found. Possible candidates:*" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched *type '*QCborMap::Iterator*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched *type '*QCborArray::iterator*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched *type '*QCborArray::Iterator*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched *type '*QJsonArray::iterator*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QPair*', unmatched *type '*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: enum 'QCborNegativeInteger' does not have a type entry or is not an enum" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched *type 'QCborNegativeInteger*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QMetaType::*', unmatched *type '*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: enum 'QMetaType::TypeFlag' does not have a type entry or is not an enum" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched *type 'QJsonValuePtr'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched *type 'const QJsonObject::iterator&amp;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * 'QSysInfo::*', *type 'QSysInfo::WinVersion'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * 'QSysInfo::*', *type 'QSysInfo::MacVersion'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Enum constant 'QSysInfo::BigEndian' belongs to unknown type QSysInfo" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Enum constant 'QSysInfo::LittleEndian' belongs to unknown type QSysInfo" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping field 'QSysInfo::*' with unmatched type 'QSysInfo::MacVersion'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping field 'QSysInfo::*' with unmatched type 'QSysInfo::WinVersion'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: enum 'QSysInfo::*' does not have a type entry or is not an enum" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: unknown operator 'Code'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'Qt::operator|', unmatched return type 'QIncompatibleFlag'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'Qt::operator|', unmatched return type 'QFlags&lt;*::enum_type>'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched *type 'unsigned'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QCborMap::*', unmatched parameter type 'const char[N]'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Something has happened when trying to read array initialization: N" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: namespace 'java.util.Collection' for enum 'AllocationOption' is not declared" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QCborStreamReader::*', unmatched return type 'StringResult&lt;*>'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: unhandled enum value: sizeof(qreal)==sizeof(double)?Double:Float in QMetaType::Type" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: possible compilation error in enum value sizeof(qreal)==sizeof(double)?Double:Float" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Cannot find enum constant for value 'QCborTag(-1)' in 'QCborValue' or any of its super classes" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: signature 'operator=(QFuture)' for function modification in 'QFuture' not found. Possible candidates: " />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping field 'QStaticPlugin::*' with unmatched type '*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: enum 'ConvertResponse' does not have a type entry or is not an enum" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: enum 'jValueType' does not have a type entry or is not an enum" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: signature 'readStringChunk(char*,qsizetype)' for function modification in 'QCborStreamReader' not found. Possible candidates:*" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: namespace 'QMetaObject' for enum 'Call' is not declared" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: namespace 'io.qt.core.QMetaObject' for enum 'Call' is not declared" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QCborValue' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QFuture' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: namespace 'io.qt.core.QVariant' for enum 'Type' is not declared" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QTransform::asAffineMatrix', unmatched return type 'auto'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QDataStream::operator*', unmatched parameter type '*char32_t*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QDataStream::operator*', unmatched parameter type '*char16_t*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QStaticPlugin::QStaticPlugin', unmatched parameter type 'QtPluginInstanceFunction'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QByteArray::QByteArray', unmatched parameter type '*QByteArray::DataPointer*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QMetaMethod::QMetaMethod', unmatched parameter type '*QMetaMethod::Data*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched parameter type 'QGenericArgument'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched parameter type 'QGenericReturnArgument'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type '*QStringConverter::Interface*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type '*QFutureInterfaceBase*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*::static_assert'*" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping field 'QStringConverterBase$State::clearFn' with unmatched type '*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: enum 'QtJambiNativeID' does not have a type entry or is not an enum" />
  <suppress-warning text="WARNING(CppImplGenerator) :: AbstractMeta::findEnum(), unknown class 'QVariant' in 'QVariant::Type'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: template baseclass 'QListSpecialMethods&lt;T>' of 'QList' is not known" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Something has happened when trying to read array initialization: Size" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QByteArrayView::QByteArrayView', unmatched parameter type 'const char[Size]'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: signature 'QIODeviceBase()' for function modification in 'QIODeviceBase' not found. Possible candidates: " />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched parameter type 'QEvent::*EventTag'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*QtPrivate::*', *" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: enum 'QtPrivate::Deprecated_t' does not have a type entry or is not an enum" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QKeyCombination::QKeyCombination', unmatched parameter type 'Qt::Modifiers'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched *type '*QException*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: enum 'QtPrivate::Ordering' does not have a type entry or is not an enum" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: enum 'QtPrivate::Uncomparable' does not have a type entry or is not an enum" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Operator type unknown: QList::const_iterator::operator const T*()const" />
  <suppress-warning text="WARNING(CppImplGenerator) :: class '*' inherits from interface 'QIODeviceBase', but has no polymorphic id set" />
  <suppress-warning text="WARNING(CppImplGenerator) :: enum not found: 'QVariant::Type'" />
  <suppress-warning text="WARNING(JavaGenerator) :: No ==/!= operator found for value type QCollatorSortKey."/>
  <suppress-warning text="WARNING(JavaGenerator) :: No ==/!= operator found for value type QCommandLineOption."/>
  <suppress-warning text="WARNING(JavaGenerator) :: No ==/!= operator found for value type QJsonParseError."/>
  <suppress-warning text="WARNING(JavaGenerator) :: No ==/!= operator found for value type QTimeZone::OffsetData."/>
  <suppress-warning text="WARNING(JavaGenerator) :: No ==/!= operator found for value type QStringMatcher."/>
  <suppress-warning text="WARNING(JavaGenerator) :: No ==/!= operator found for value type QStaticPlugin."/>
  <suppress-warning text="WARNING(JavaGenerator) :: No ==/!= operator found for value type QRegularExpressionMatch."/>
  <suppress-warning text="WARNING(JavaGenerator) :: No ==/!= operator found for value type QRegularExpressionMatchIterator."/>
  <suppress-warning text="WARNING(JavaGenerator) :: No ==/!= operator found for value type QPropertyBindingError."/>
  <suppress-warning text="WARNING(JavaGenerator) :: No ==/!= operator found for value type QUntypedBindable."/>
  <suppress-warning text="WARNING(JavaGenerator) :: No ==/!= operator found for value type QUntypedPropertyBinding."/>
  <suppress-warning text="WARNING(CppImplGenerator) :: Value type 'QItemSelection' is missing a default constructor. The resulting C++ code will not compile.*" since="6.0.0"/>
  <suppress-warning text="WARNING(CppImplGenerator) :: Unknown class 'QVariant' for enum 'QVariant::Type'"/>
  <suppress-warning text="WARNING(CppImplGenerator) :: Unknown class 'QMetaObject' for enum 'QMetaObject::Call'"/>
  <suppress-warning text="WARNING(CppImplGenerator) :: enum not found: 'QMetaObject::Call'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Type parser doesn't recognize the type const char (&amp;)[Size] (is_busted)"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Type parser doesn't recognize the type std::function&lt;void()> (is_busted)"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Type parser doesn't recognize the type std::function&lt;void ()> (is_busted)"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type '*BindingFunctionVTable*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched *type '*std::chrono*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched *type '*QPropertyChangeHandler*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched *type '*QPropertyNotifier*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched *type '*QPropertyObserverBase::ChangeHandler*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: function 'QtMessageHandler' is specified in typesystem, but not declared" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QRandomGenerator::QRandomGenerator', unmatched parameter type 'const quint32[N]'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Type parser doesn't recognize the type const quint32 (&amp;)[N] (is_busted)" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QRandomGenerator::_fillRange', unmatched parameter type 'qptrdiff'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtFuture::makeReadyFuture'*" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: signature 'reportFinished(const JObjectWrapper*)' for function modification in 'QtJambiFutureInterface' not found.*" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QFuture::*', unmatched parameter type '*QFuture*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QCalendar::QCalendar', unmatched parameter type 'QCalendar::SystemId'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QMetaProperty::getMetaPropertyData', unmatched return type 'QMetaProperty::Data'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: signature 'QPropertyObserverBase()' for function modification in 'QPropertyObserverBase' not found. Possible candidates: " />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Operator type unknown: QFuture::operator T()const" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Shadowing: QOperatingSystemVersionBase::isAnyOfType(std::initializer_list* types) const and QOperatingSystemVersion::isAnyOfType(std::initializer_list* types) const; Java code will not compile" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping field 'QtPrivate::Deprecated' with unmatched type 'QtPrivate::Deprecated_t'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Shadowing: QOperatingSystemVersionBase::* and QOperatingSystemVersion::* Java code will not compile" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: signature '*qfloat16*' for function modification in '*' not found.*" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping *, unmatched *type '*std::exception_ptr*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Type parser doesn't recognize the type std::function&lt;bool(const void*,void*)> (is_busted)" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Type parser doesn't recognize the type std::function&lt;bool(void*,void*)> (is_busted)" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: signature 'QStringConverterBase()' for function modification in 'QStringConverterBase' not found. Possible candidates: " since="6.4.0"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QVersionNumber::QVersionNumber', unmatched parameter type '*QVarLengthArray*'" since="6.4.0"/>
  <suppress-warning text="WARNING(Parser) :: scope not found for function definition: 'QLatin1StringView::*' - definition *ignored*" since="6.4.0"/>
  <suppress-warning text="WARNING(Parser) :: scope not found for symbol: q23::invoke_r*" since="6.4.0"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: signature '*char32_t*' for *modification in '*' not found. Possible candidates:"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: enum 'QString::NormalizationForm' does not have a type entry or is not an enum"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QString::QString', unmatched parameter type 'QString::DataPointer*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched *type 'QCharRef'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched *type 'va_list'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type '*QString::Null*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched *type 'QStringDataPtr'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched *type 'QChar::SpecialCharacter'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function '*', unmatched *type 'QString::SplitBehavior'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: enum 'QString::SplitBehavior' does not have a type entry or is not an enum"/>
</typesystem>
