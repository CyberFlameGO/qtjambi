<?xml version="1.0"?>
<!--****************************************************************************
**
** Copyright (C) 1992-2009 Nokia. All rights reserved.
** Copyright (C) 2009-2022 Dr. Peter Droste, Omix Visualization GmbH & Co. KG. All rights reserved.
**
** This file is part of Qt Jambi.
**
** ** $BEGIN_LICENSE$
** Commercial Usage
** Licensees holding valid Qt Commercial licenses may use this file in
** accordance with the Qt Commercial License Agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Nokia.
**
** GNU Lesser General Public License Usage
** This file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain
** additional rights. These rights are described in the Nokia Qt LGPL
** Exception version 1.0, included in the file LGPL_EXCEPTION.txt in this
** package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3.0 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU General Public License version 3.0 requirements will be
** met: http://www.gnu.org/copyleft/gpl.html.
**
** If you are unsure which license is appropriate for your use, please
** contact the sales department at qt-sales@nokia.com.
** $END_LICENSE$

**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************-->
<typesystem package="io.qt.concurrent" module="qtjambi.concurrent" default-superclass="io.qt.QtObject">
    <inject-code class="metainfo" position="1">
    void initialize_meta_info_util();
    </inject-code>
    <inject-code class="metainfo">
    initialize_meta_info_util();
    </inject-code>
  <namespace-type name="QtConcurrent">
        <extra-includes>
            <include file-name="io.qt.core.*" location="java"/>
            <include file-name="java.util.*" location="java"/>
            <include file-name="java.util.concurrent.*" location="java"/>
        </extra-includes>
    <inject-code class="java">
        <import-file name="typesystem/java/typesystem_concurrent-java.java" quote-after-line="class QtConcurrent___" quote-before-line="}// class"/>
    </inject-code>
    <inject-code class="java" until="5.15">
        <import-file name="typesystem/java/typesystem_concurrent-java.java" quote-after-line="class QtConcurrent_5__" quote-before-line="}// class"/>
    </inject-code>
    <inject-code class="java" since="6.0.0">
        <import-file name="typesystem/java/typesystem_concurrent-java.java" quote-after-line="class QtConcurrent_6__" quote-before-line="}// class"/>
    </inject-code>
  </namespace-type>
  <object-type name="QtConcurrent::ThreadEngineBase">
        <modify-field name="futureInterface">
			<reference-count action="set" variable-name="__rcFutureInterface"/>
            <replace-type modified-type="io.qt.core.QFutureInterfaceBase"/>
			<conversion-rule class="setter-native">
			QFutureInterfaceBase* %out = qtjambi_cast&lt;QFutureInterfaceBase*>(%env, %in);
			</conversion-rule>
			<conversion-rule class="getter-native">
			jobject %out = qtjambi_cast&lt;jobject>(%env, %in);
			</conversion-rule>
        </modify-field>
  </object-type>
</typesystem>
