<?xml version="1.0"?>
<!--****************************************************************************
**
** Copyright (C) 1992-2009 Nokia. All rights reserved.
** Copyright (C) 2009-2022 Dr. Peter Droste, Omix Visualization GmbH & Co. KG. All rights reserved.
**
** This file is part of Qt Jambi.
**
** ** $BEGIN_LICENSE$
** Commercial Usage
** Licensees holding valid Qt Commercial licenses may use this file in
** accordance with the Qt Commercial License Agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Nokia.
**
** GNU Lesser General Public License Usage
** This file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain
** additional rights. These rights are described in the Nokia Qt LGPL
** Exception version 1.0, included in the file LGPL_EXCEPTION.txt in this
** package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3.0 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU General Public License version 3.0 requirements will be
** met: http://www.gnu.org/copyleft/gpl.html.
**
** If you are unsure which license is appropriate for your use, please
** contact the sales department at qt-sales@nokia.com.
** $END_LICENSE$

**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************-->
<typesystem qt-library="QtHelp" description="Classes for integrating documentation into applications, similar to Qt Assistant.">
	<required-library name="QtNetwork" mode="provide-only" platforms="linux,macos"/>
  <!--<enum-type name="QGraphicsSvgItem::enum_1"/>-->

<!--   <object-type name="QHelpContentItem"> -->
    <!--<extra-includes>
        <include file-name="QRectF" location="global" />
        <include file-name="QMatrix" location="global" />
        <include file-name="QSize" location="global" />
        <include file-name="QByteArray" location="global" />
    </extra-includes>-->
<!--   </object-type> -->

<!--   <object-type name="QHelpContentModel"> -->
    <!--<extra-includes>
        <include file-name="QByteArray" location="global" />
        <include file-name="QSvgRenderer" location="global" />
        <include file-name="QSize" location="global" />
    </extra-includes>-->
<!--   </object-type> -->

    <rejection class="QHelpSearchEngine::SearchHit" />
    <!--rejection class="QHelpSearchEngine_SearchHit" />
    <rejection class="SearchHit" /-->
  <enum-type name="QHelpSearchQuery::FieldName"/>
  <object-type name="QHelpContentItem">
  </object-type>
  <!--value-type name="QHelpSearchEngine::SearchHit"/-->
  <object-type name="QHelpContentWidget">
  </object-type>
  <object-type name="QHelpIndexWidget">
    <inject-code class="native" position="beginning">
#if QT_VERSION &lt; QT_VERSION_CHECK(6,0,0)
hash_type qHash(const QMap&lt;QString, QUrl> &amp;value){
    hash_type hashCode = qHash(int(value.size()));
    for(const QString&amp; key : value.keys()){
        hashCode = hashCode * 31 + qHash(key);
        hashCode = hashCode * 31 + qHash(value.value(key));
    }
    return hashCode;
}
#else
hash_type qHash(const QMultiMap&lt;QString, QUrl> &amp;value){
    hash_type hashCode = qHash(int(value.keys().size()));
    for(const QString&amp; key : value.keys()){
        hashCode = hashCode * 31 + qHash(key);
        hashCode = hashCode * 31 + qHash(value.values(key));
    }
    return hashCode;
}
#endif
    </inject-code>
  </object-type>
  <object-type name="QHelpIndexModel">
  </object-type>
  <object-type name="QHelpContentModel">
  </object-type>
  <object-type name="QHelpEngineCore">
  </object-type>
  <object-type name="QHelpEngine">
  </object-type>
  <object-type name="QHelpSearchEngine">
  </object-type>
  <value-type name="QHelpSearchQuery">
  </value-type>
  <value-type name="QHelpSearchResult">
    <modify-function signature="operator=(const QHelpSearchResult &amp;)" remove="all"/>
  </value-type>
  <object-type name="QHelpSearchQueryWidget">
  </object-type>
  <object-type name="QHelpSearchResultWidget">
  </object-type>
  <object-type name="QHelpFilterEngine" since="5.13.0">
  </object-type>
  <value-type name="QHelpLink" since="5.15.0">
  </value-type>
  <object-type name="QHelpFilterSettingsWidget" since="5.15.0">
        <modify-function signature="applySettings(QHelpFilterEngine *) const">
            <modify-argument index="1">
                <reference-count action="ignore" />
            </modify-argument>
        </modify-function>
        <modify-function signature="readSettings(const QHelpFilterEngine *)">
            <modify-argument index="1">
                <reference-count action="ignore" />
            </modify-argument>
        </modify-function>
  </object-type>
  <value-type name="QCompressedHelpInfo" since="5.13.0">
    <modify-function signature="operator=(const QCompressedHelpInfo &amp;)" remove="all"/>
  </value-type>
  <value-type name="QHelpFilterData" since="5.13.0">
    <modify-function signature="operator=(const QHelpFilterData &amp;)" remove="all"/>
  </value-type>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QHelpContentItem::QHelpContentItem', unmatched parameter type 'QHelpDBReader*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: private virtual function 'changeEvent(QEvent * event)' in 'QHelpSearchQueryWidget'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: private virtual function 'focusInEvent(QFocusEvent * focusEvent)' in 'QHelpSearchQueryWidget'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: private virtual function 'changeEvent(QEvent * event)' in 'QHelpSearchResultWidget'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QHelpFilterEngine::setCollectionHandler', unmatched parameter type 'QHelpCollectionHandler*'"/>
  <suppress-warning text="WARNING(JavaGenerator) :: No ==/!= operator found for value type QCompressedHelpInfo."/>
  <suppress-warning text="WARNING(JavaGenerator) :: No ==/!= operator found for value type QHelpLink."/>
  <suppress-warning text="WARNING(JavaGenerator) :: No ==/!= operator found for value type QHelpSearchQuery."/>
  <suppress-warning text="WARNING(JavaGenerator) :: No ==/!= operator found for value type QHelpSearchResult."/>
</typesystem>
